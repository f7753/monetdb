stdout of test 'sigs` in directory 'runtime` itself:


# 20:09:25 >  
# 20:09:25 >  Mtimeout -timeout 60 Mserver "--config=/var/tmp/_PREFIX_MONET_GNU_32_d__/etc/monet.conf" --debug=10 --set "monet_mod_path=/var/tmp/_PREFIX_MONET_GNU_32_d__/lib/MonetDB:/var/tmp/_PREFIX_TEMPLATE_GNU_32_d__/lib/MonetDB" --dbfarm "/var/tmp/_PREFIX_MONET_GNU_32_d__/var/dbfarm" --set monet_prompt= --trace --dbname=mTests_runtime  < sigs.milS
# 20:09:25 >  

# Monet Database Server V4.3.9
# Copyright (c) 1993-2002, CWI. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit; dynamically linked.
var mods := new(void,str);
mods.insert(nil,"pathfinder");

mods@batloop{
	printf("module '%s'\n",$t);
	module($t);
	sigs($t);
	drop($t);
}
module 'pathfinder'
#-----------------------------------------------------------------------------------------#
# signature										  # name
#-----------------------------------------------------------------------------------------#
[ "add_doc(BAT[void,BAT], str) : BAT[void,BAT]"						  ]
[ "ancestor(BAT[void,oid], BAT[void,oid], BAT[void,BAT]) : BAT[oid,oid]"		  ]
[ "ancestor_or_self(BAT[void,oid], BAT[void,oid], BAT[void,BAT]) : BAT[oid,oid]"	  ]
[ "child(BAT[void,oid], BAT[void,oid], BAT[void,BAT]) : BAT[oid,oid]"			  ]
[ "combine_string(BAT[any,str]) : str"							  ]
[ "combine_strings(BAT[oid,str]) : BAT[oid,str]"					  ]
[ "compress_properties(str) : void"							  ]
[ "concat(BAT[any,str]) : str"								  ]
[ "create_ws() : BAT[void,BAT]"								  ]
[ "delete_all_docs() : void"								  ]
[ "delete_doc(str) : void"								  ]
[ "descendant(BAT[void,oid], BAT[void,oid], BAT[void,BAT]) : BAT[oid,oid]"		  ]
[ "descendant_or_self(BAT[void,oid], BAT[void,oid], BAT[void,BAT]) : BAT[oid,oid]"	  ]
[ "following(BAT[void,oid], BAT[void,oid], BAT[void,BAT]) : BAT[oid,oid]"		  ]
[ "following_sibling(BAT[void,oid], BAT[void,oid], BAT[void,BAT]) : BAT[oid,oid]"	  ]
[ "following_void(BAT[void,int], BAT[oid,any], BAT[void,oid], int, int) : BAT[oid,void]"  ]
[ "import_doc(str, str) : void"								  ]
[ "lev_child(BAT[void,chr], BAT[oid,any], int, int) : BAT[oid,void]"			  ]
[ "lev_fs(BAT[void,chr], BAT[oid,any], int, int) : BAT[oid,void]"			  ]
[ "lev_parent(BAT[void,chr], BAT[oid,any], int, int) : BAT[oid,void]"			  ]
[ "lev_ps(BAT[void,chr], BAT[oid,any], int, int) : BAT[oid,void]"			  ]
[ "parent(BAT[void,oid], BAT[void,oid], BAT[void,BAT]) : BAT[oid,oid]"			  ]
[ "preceding(BAT[void,oid], BAT[void,oid], BAT[void,BAT]) : BAT[oid,oid]"		  ]
[ "preceding_sibling(BAT[void,oid], BAT[void,oid], BAT[void,BAT]) : BAT[oid,oid]"	  ]
[ "preceding_void(BAT[void,int], BAT[oid,any], BAT[void,oid], int, int) : BAT[oid,void]"  ]
[ "scj_anc(BAT[void,int], BAT[oid,any], int, int) : BAT[oid,void]"			  ]
[ "scj_ancorself(BAT[void,int], BAT[oid,any], int, int) : BAT[oid,void]"		  ]
[ "scj_desc(BAT[void,int], BAT[oid,any], int, int) : BAT[oid,void]"			  ]
[ "scj_descorself(BAT[void,int], BAT[oid,any], int, int) : BAT[oid,void]"		  ]
[ "serialize(str, bit, bit, bit, bit, bit, bit, bit) : void"                              ]
[ "xml_print() : void"									  ]
[ "xml_print(BAT[oid,any]) : void"							  ]
[ "xml_print(str) : void"								  ]

quit;

# 20:09:25 >  
# 20:09:25 >  Done.
# 20:09:25 >  

