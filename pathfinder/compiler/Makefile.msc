
## Use: nmake -f makefile.msc install

# Change this to wherever you want to install the DLLs. This directory
# should be in your PATH.
BIN = C:\bin

################################################################

# Nothing much configurable below

# cl -? describes the options
CC = cl -GF -W3 -MD -nologo -Zi -G6
# optimize use -Ox

# No general LDFLAGS needed
LDFLAGS = /link
INSTALL = copy
# TODO
# replace this hack by something like configure ...
MKDIR = mkdir
ECHO = echo
CD = cd

CFLAGS = -I. -I$(TOPDIR) $(LIBC_INCS) -DHAVE_CONFIG_H $(INCLUDES)
CXXFLAGS = $(CFLAGS)

CXXEXT = \"cxx\"

TOPDIR = .\..
SRCDIR = $(TOPDIR)\..\compiler
!INCLUDE $(TOPDIR)\rules.msc
all: all-recursive all-msc
check: check-recursive check-msc
install: install-recursive install-msc
INCLUDES = -I$(SRCDIR) -Iinclude -I$(SRCDIR)\include $(MONET_INCS)
SUBDIRS = daemon schema debug mem parser semantics core mil
all-recursive: daemon-all schema-all debug-all mem-all parser-all semantics-all core-all mil-all 
daemon-all: daemon daemon\Makefile
	$(CD) daemon && $(MAKE) /nologo all 
daemon: 
	if not exist daemon $(MKDIR) daemon
daemon\Makefile: $(SRCDIR)\daemon\Makefile.msc
	$(INSTALL) $(SRCDIR)\daemon\Makefile.msc daemon\Makefile
schema-all: schema schema\Makefile
	$(CD) schema && $(MAKE) /nologo all 
schema: 
	if not exist schema $(MKDIR) schema
schema\Makefile: $(SRCDIR)\schema\Makefile.msc
	$(INSTALL) $(SRCDIR)\schema\Makefile.msc schema\Makefile
debug-all: debug debug\Makefile
	$(CD) debug && $(MAKE) /nologo all 
debug: 
	if not exist debug $(MKDIR) debug
debug\Makefile: $(SRCDIR)\debug\Makefile.msc
	$(INSTALL) $(SRCDIR)\debug\Makefile.msc debug\Makefile
mem-all: mem mem\Makefile
	$(CD) mem && $(MAKE) /nologo all 
mem: 
	if not exist mem $(MKDIR) mem
mem\Makefile: $(SRCDIR)\mem\Makefile.msc
	$(INSTALL) $(SRCDIR)\mem\Makefile.msc mem\Makefile
parser-all: parser parser\Makefile
	$(CD) parser && $(MAKE) /nologo all 
parser: 
	if not exist parser $(MKDIR) parser
parser\Makefile: $(SRCDIR)\parser\Makefile.msc
	$(INSTALL) $(SRCDIR)\parser\Makefile.msc parser\Makefile
semantics-all: semantics semantics\Makefile
	$(CD) semantics && $(MAKE) /nologo all 
semantics: 
	if not exist semantics $(MKDIR) semantics
semantics\Makefile: $(SRCDIR)\semantics\Makefile.msc
	$(INSTALL) $(SRCDIR)\semantics\Makefile.msc semantics\Makefile
core-all: core core\Makefile
	$(CD) core && $(MAKE) /nologo all 
core: 
	if not exist core $(MKDIR) core
core\Makefile: $(SRCDIR)\core\Makefile.msc
	$(INSTALL) $(SRCDIR)\core\Makefile.msc core\Makefile
mil-all: mil mil\Makefile
	$(CD) mil && $(MAKE) /nologo all 
mil: 
	if not exist mil $(MKDIR) mil
mil\Makefile: $(SRCDIR)\mil\Makefile.msc
	$(INSTALL) $(SRCDIR)\mil\Makefile.msc mil\Makefile
check-recursive: daemon-check schema-check debug-check mem-check parser-check semantics-check core-check mil-check 
daemon-check: daemon
	$(CD) daemon && $(MAKE) /nologo check
schema-check: schema
	$(CD) schema && $(MAKE) /nologo check
debug-check: debug
	$(CD) debug && $(MAKE) /nologo check
mem-check: mem
	$(CD) mem && $(MAKE) /nologo check
parser-check: parser
	$(CD) parser && $(MAKE) /nologo check
semantics-check: semantics
	$(CD) semantics && $(MAKE) /nologo check
core-check: core
	$(CD) core && $(MAKE) /nologo check
mil-check: mil
	$(CD) mil && $(MAKE) /nologo check
install-recursive: daemon-install schema-install debug-install mem-install parser-install semantics-install core-install mil-install 
daemon-install: $(bindir) $(libdir)
	$(CD) daemon && $(MAKE) /nologo install
schema-install: $(bindir) $(libdir)
	$(CD) schema && $(MAKE) /nologo install
debug-install: $(bindir) $(libdir)
	$(CD) debug && $(MAKE) /nologo install
mem-install: $(bindir) $(libdir)
	$(CD) mem && $(MAKE) /nologo install
parser-install: $(bindir) $(libdir)
	$(CD) parser && $(MAKE) /nologo install
semantics-install: $(bindir) $(libdir)
	$(CD) semantics && $(MAKE) /nologo install
core-install: $(bindir) $(libdir)
	$(CD) core && $(MAKE) /nologo install
mil-install: $(bindir) $(libdir)
	$(CD) mil && $(MAKE) /nologo install
pfdir = $(bindir)
libpf.dll:  daemon\libdaemon.lib schema\libschema.lib debug\libdebug.lib mem\libmem.lib parser\libparser.lib semantics\libsemantics.lib core\libcore.lib mil\libmil.lib
pf_LIBS = daemon\libdaemon.lib schema\libschema.lib debug\libdebug.lib mem\libmem.lib parser\libparser.lib semantics\libsemantics.lib core\libcore.lib mil\libmil.lib $(LIBGC_LDADD) $(LIBXML2_LDADD) $(LEXLIB)
pf_OBJS = env.obj main.obj oops.obj pfstrings.obj qname.obj scope.obj timer.obj variable.obj
pf.exe: $(pf_OBJS)
	$(CC) $(CFLAGS) -Fepf.exe $(pf_OBJS) $(LDFLAGS) $(pf_LIBS) /subsystem:console /NODEFAULTLIB:LIBC

main.obj: $(SRCDIR)\main.c
pfstrings.obj: $(SRCDIR)\pfstrings.c
scope.obj: $(SRCDIR)\scope.c
env.obj: $(SRCDIR)\env.c
qname.obj: $(SRCDIR)\qname.c
variable.obj: $(SRCDIR)\variable.c
oops.obj: $(SRCDIR)\oops.c
timer.obj: $(SRCDIR)\timer.c
all-msc: pf.exe
check-msc: all-msc
install-msc: install-exec install-data
install-exec: install_bin_pf  
install_bin_pf: pf.exe
	if exist pf.exe $(INSTALL) pf.exe $(pfdir)
install-data:
