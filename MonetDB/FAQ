FAQ for MonetDB and its SQL server front end
============================================

1) Why does Mserver complain about a missing initialization script?
2) How do I start an SQL console?
3) How do I run a SQL batch program?
4) How do I run a Perl (Python, C, Java, ...) application?
5) Which application programming interfaces exist?

========================================================================

1) Why does Mserver complain about a missing initialization script?

Running a server in daemon mode requires initialization of the server
context.  The actions are read from a file passed as the last argument
on the command string.  An example of such a script would be the
sql_server.mil script in the lib/MonetDB directory.

========================================================================

2) How do I start a SQL console?

For MonetDB, SQL functionality is a separate module, which is also in the
SourceForge repository.  It should be checked out in much the same way
as MonetDB itself (change 'MonetDB' into 'sql').  In the root directory
of the sql distribution you find the HowtoStart-SQL document, which
contains step-by-step instructions.
Once you have installed and set up the SQL module, you have to load it
in Mserver, for instance using the sql_server.mil script from the
lib/MonetDB directory.  A SQL console can afterwards be started using
MapiClient -lsql.  See MapiClient --help for more details.

========================================================================

3) How do I run a SQL batch program?

Make sure that you have MonetDB's SQL frontend installed and the
sql_server module loaded in your running Mserver.  See above for
directions on how to do that.  Collect the SQL statements in a file,
then simply type:

MapiClient -lsql < batchfile

========================================================================

4) How do I run a Perl (Python, C, Java, ...) application?

The MonetDB source tree contains a section Mapi/clients, where you
also find sample applications to interact with the server.  For most
APIs we have included a simple textual monitor to show the basic
interaction, called MapiClient.  Try this one first before developing
your own applications.

========================================================================

5) Which application programming interfaces exist?


MonetDB contains low-level TCP-IP libraries to setup a communication
channel from programs written in C, Java, Perl, PHP, Python.  ODBC
and JDBC drivers are also available.

For both ODBC and JDBC holds that only an elementary subset of the
APIs are implemented, and some of their functionalities are not yet
fully tested.  See the documentation of the respective API for more
information on supported and unsupported features.

The most extensive library for interaction is Mapi, which provides a
proprietary cached tabular abstraction for queries.  It comes in a
C and Java version.  Consult the documentation of the libraries for
more information on their functionalities.
