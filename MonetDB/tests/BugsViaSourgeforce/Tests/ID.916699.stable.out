stdout of test 'ID.916699` in directory 'tests/BugsViaSourgeforce` itself:


# 17:14:08 >  
# 17:14:08 >  Mtimeout -timeout 60 Mserver "--config=/var/tmp/_4.3.16_PREFIX_MONET_GNU_32_d__/etc/monet.conf" --debug=10 --set "monet_mod_path=/var/tmp/_4.3.16_PREFIX_MONET_GNU_32_d__/lib/MonetDB" --set "gdk_dbfarm=/var/tmp/_4.3.16_PREFIX_MONET_GNU_32_d__/var/MonetDB/dbfarm" --set "sql_logdir=/var/tmp/_4.3.16_PREFIX_MONET_GNU_32_d__/var/MonetDB/log" --set mapi_port=41989 --set sql_port=50213 --set monet_prompt= --trace --dbname=mTests_tests_BugsViaSourgeforce  < ID.916699.milS
# 17:14:08 >  

# Monet Database Server V4.3.16_rc05
# Copyright (c) 1993-2004, CWI. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit; dynamically linked.
## integers from -25 to 24
var a := bat(void, int,50).seqbase(0@0);
var i := -25;
while(i < 25) a.insert(nil, (i :+= 1));

## reverse sort and split into 2 chunks
a := a.sort_rev.reverse.mark(0@0).reverse;
VAR sliced := a.rangesplit(2);

sliced.fetch(0).print;
#-----------------#
# h	tmp_32	  # name
# oid	int	  # type
#-----------------#
[ 25@0,	  0	  ]
[ 26@0,	  -1	  ]
[ 27@0,	  -2	  ]
[ 28@0,	  -3	  ]
[ 29@0,	  -4	  ]
[ 30@0,	  -5	  ]
[ 31@0,	  -6	  ]
[ 32@0,	  -7	  ]
[ 33@0,	  -8	  ]
[ 34@0,	  -9	  ]
[ 35@0,	  -10	  ]
[ 36@0,	  -11	  ]
[ 37@0,	  -12	  ]
[ 38@0,	  -13	  ]
[ 39@0,	  -14	  ]
[ 40@0,	  -15	  ]
[ 41@0,	  -16	  ]
[ 42@0,	  -17	  ]
[ 43@0,	  -18	  ]
[ 44@0,	  -19	  ]
[ 45@0,	  -20	  ]
[ 46@0,	  -21	  ]
[ 47@0,	  -22	  ]
[ 48@0,	  -23	  ]
[ 49@0,	  -24	  ]
sliced.fetch(1).print;
#-----------------#
# h	tmp_31	  # name
# oid	int	  # type
#-----------------#
[ 0@0,	  25	  ]
[ 1@0,	  24	  ]
[ 2@0,	  23	  ]
[ 3@0,	  22	  ]
[ 4@0,	  21	  ]
[ 5@0,	  20	  ]
[ 6@0,	  19	  ]
[ 7@0,	  18	  ]
[ 8@0,	  17	  ]
[ 9@0,	  16	  ]
[ 10@0,	  15	  ]
[ 11@0,	  14	  ]
[ 12@0,	  13	  ]
[ 13@0,	  12	  ]
[ 14@0,	  11	  ]
[ 15@0,	  10	  ]
[ 16@0,	  9	  ]
[ 17@0,	  8	  ]
[ 18@0,	  7	  ]
[ 19@0,	  6	  ]
[ 20@0,	  5	  ]
[ 21@0,	  4	  ]
[ 22@0,	  3	  ]
[ 23@0,	  2	  ]
[ 24@0,	  1	  ]


var a := bat(void, int,50).seqbase(0@0);
var i := -25;
while(i < 25) { a.insert(nil, i); i :+= 1; };

## ugly way to shuffle a little bit
var b:=new(void,int).seqbase(0@0).insert(a.sample(10)).insert(a.sample(10)).insert(a.sample(10)).insert(a.sample(10)).insert(a.sample(10));
b:=b.reverse.mark(0@0).reverse;
VAR sliced := b.rangesplit(2);

VAR c:=b.reverse.sort.reverse;
c.slice(0,24).print;
#-----------------#
# t	tmp_28	  # name
# oid	int	  # type
#-----------------#
[ 20@0,	  -24	  ]
[ 0@0,	  -23	  ]
[ 30@0,	  -22	  ]
[ 10@0,	  -20	  ]
[ 1@0,	  -20	  ]
[ 40@0,	  -20	  ]
[ 41@0,	  -18	  ]
[ 2@0,	  -15	  ]
[ 3@0,	  -12	  ]
[ 21@0,	  -11	  ]
[ 11@0,	  -10	  ]
[ 22@0,	  -10	  ]
[ 12@0,	  -7	  ]
[ 23@0,	  -6	  ]
[ 4@0,	  -5	  ]
[ 31@0,	  -4	  ]
[ 42@0,	  -4	  ]
[ 5@0,	  -4	  ]
[ 43@0,	  -3	  ]
[ 24@0,	  -1	  ]
[ 6@0,	  0	  ]
[ 32@0,	  0	  ]
[ 25@0,	  1	  ]
[ 26@0,	  2	  ]
[ 33@0,	  3	  ]
sliced.fetch(0).reverse.sort.reverse.print;
#-----------------#
# t	tmp_36	  # name
# oid	int	  # type
#-----------------#
[ 20@0,	  -24	  ]
[ 0@0,	  -23	  ]
[ 30@0,	  -22	  ]
[ 40@0,	  -20	  ]
[ 1@0,	  -20	  ]
[ 10@0,	  -20	  ]
[ 41@0,	  -18	  ]
[ 2@0,	  -15	  ]
[ 3@0,	  -12	  ]
[ 21@0,	  -11	  ]
[ 22@0,	  -10	  ]
[ 11@0,	  -10	  ]
[ 12@0,	  -7	  ]
[ 23@0,	  -6	  ]
[ 4@0,	  -5	  ]
[ 31@0,	  -4	  ]
[ 5@0,	  -4	  ]
[ 42@0,	  -4	  ]
[ 43@0,	  -3	  ]
[ 24@0,	  -1	  ]
[ 6@0,	  0	  ]
[ 32@0,	  0	  ]
[ 25@0,	  1	  ]
[ 26@0,	  2	  ]
c.slice(25,50).print;
#-----------------#
# t	tmp_36	  # name
# oid	int	  # type
#-----------------#
[ 13@0,	  3	  ]
[ 44@0,	  4	  ]
[ 14@0,	  5	  ]
[ 7@0,	  5	  ]
[ 15@0,	  6	  ]
[ 27@0,	  6	  ]
[ 45@0,	  7	  ]
[ 34@0,	  8	  ]
[ 28@0,	  8	  ]
[ 16@0,	  11	  ]
[ 35@0,	  11	  ]
[ 36@0,	  12	  ]
[ 17@0,	  12	  ]
[ 37@0,	  13	  ]
[ 8@0,	  14	  ]
[ 18@0,	  14	  ]
[ 46@0,	  15	  ]
[ 38@0,	  16	  ]
[ 47@0,	  17	  ]
[ 9@0,	  18	  ]
[ 48@0,	  19	  ]
[ 49@0,	  20	  ]
[ 39@0,	  20	  ]
[ 19@0,	  20	  ]
[ 29@0,	  21	  ]
sliced.fetch(1).reverse.sort.reverse.print;
#-----------------#
# t	tmp_36	  # name
# oid	int	  # type
#-----------------#
[ 33@0,	  3	  ]
[ 13@0,	  3	  ]
[ 44@0,	  4	  ]
[ 7@0,	  5	  ]
[ 14@0,	  5	  ]
[ 15@0,	  6	  ]
[ 27@0,	  6	  ]
[ 45@0,	  7	  ]
[ 34@0,	  8	  ]
[ 28@0,	  8	  ]
[ 35@0,	  11	  ]
[ 16@0,	  11	  ]
[ 17@0,	  12	  ]
[ 36@0,	  12	  ]
[ 37@0,	  13	  ]
[ 8@0,	  14	  ]
[ 18@0,	  14	  ]
[ 46@0,	  15	  ]
[ 38@0,	  16	  ]
[ 47@0,	  17	  ]
[ 9@0,	  18	  ]
[ 48@0,	  19	  ]
[ 49@0,	  20	  ]
[ 19@0,	  20	  ]
[ 39@0,	  20	  ]
[ 29@0,	  21	  ]

# 19:23:23 >  
# 19:23:23 >  Done.
# 19:23:23 >  

