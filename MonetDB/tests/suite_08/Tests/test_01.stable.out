stdout of test 'test_01` in directory 'tests/suite_08` itself:

#> Mtest:	milM test_01 milM
#> Mtest:	Mtimeout -timeout 543 Mserver -modulesilent -yaccsilent -d8 -db tests_suite_08 test_01.milM
# Monet Database Server V4.1
# Copyright (c) 1993-1999, CWI & SION. All rights reserved.
# compiled for IRIX646.5/32bit on Mon Mar 27 04:35:32 MET DST 2000.
#script:test_01.milM

loaded;
#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "algebra",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "kernel",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

Try: modules;                - for other modules.
     ls;                     - for persistent bat listing.
     sigs("<module>")        - for available commands per module.
     help("<command>")       - for help one-liner for a command.

#You are system administrator (adm)!
setoid(oid(20000000));
# Test for the 'sys' module.
module(sys);

# Pseudo bat to map a BAT id into its name
view_bbp_name.print;
#---------------------------------#
# BAT:	  name			  #
# (int)	  (str)			  #
#---------------------------------#
[ 1,	  "monet_fcn_fcn"	  ]
[ 2,	  "monet_fcn_imp"	  ]
[ 3,	  "monet_fcn_tpe"	  ]
[ 4,	  "monet_fcn_mid"	  ]
[ 5,	  "monet_fcn_sig"	  ]
[ 6,	  "monet_fcn_dsc"	  ]
[ 7,	  "monet_fcn_aut"	  ]
[ 8,	  "monet_fcn_dat"	  ]
[ 9,	  "monet_fcn_nme"	  ]
[ 10,	  "monet_fcn_pro"	  ]
[ 11,	  "monet_mod_nme"	  ]
[ 12,	  "monet_mod_cnt"	  ]
[ 13,	  "monet_mod_atm"	  ]
[ 14,	  "monet_mod_acc"	  ]
[ 15,	  "monet_mod_hdl"	  ]
[ 16,	  "monet_mod_dep"	  ]
[ 17,	  "monet_mod_use"	  ]
[ 18,	  "monet_mod_load"	  ]
[ 19,	  "monet_mod_drop"	  ]
[ 20,	  "monet_fcntbl"	  ]
[ 21,	  "monet_acctbl"	  ]
[ 22,	  "monet_atomtbl"	  ]

# Pseudo bat to map a BAT id into its refcnt
view_bbp_refcnt.print;
#-----------------#
# BAT:	  group	  #
# (int)	  (int)	  #
#-----------------#
[ 1,	  1	  ]
[ 2,	  1	  ]
[ 3,	  1	  ]
[ 4,	  1	  ]
[ 5,	  1	  ]
[ 6,	  1	  ]
[ 7,	  1	  ]
[ 8,	  1	  ]
[ 9,	  1	  ]
[ 10,	  1	  ]
[ 11,	  1	  ]
[ 12,	  1	  ]
[ 13,	  1	  ]
[ 14,	  1	  ]
[ 15,	  1	  ]
[ 16,	  1	  ]
[ 17,	  1	  ]
[ 18,	  1	  ]
[ 19,	  1	  ]
[ 20,	  1	  ]
[ 21,	  1	  ]
[ 22,	  1	  ]

# Pseudo bat to map a BAT id into its disk location
view_bbp_location.print;
#-------------------------#
# BAT:	  location	  #
# (int)	  (str)		  #
#-------------------------#
[ 1,	  "1"		  ]
[ 2,	  "2"		  ]
[ 3,	  "3"		  ]
[ 4,	  "4"		  ]
[ 5,	  "5"		  ]
[ 6,	  "6"		  ]
[ 7,	  "7"		  ]
[ 8,	  "8"		  ]
[ 9,	  "9"		  ]
[ 10,	  "10"		  ]
[ 11,	  "11"		  ]
[ 12,	  "12"		  ]
[ 13,	  "13"		  ]
[ 14,	  "14"		  ]
[ 15,	  "15"		  ]
[ 16,	  "16"		  ]
[ 17,	  "17"		  ]
[ 18,	  "18"		  ]
[ 19,	  "19"		  ]
[ 20,	  "20"		  ]
[ 21,	  "21"		  ]
[ 22,	  "22"		  ]

# Pseudo bat to map a BAT id into its name
view_bbp_heat.print;
#-----------------#
# BAT:	  heat	  #
# (int)	  (int)	  #
#-----------------#
[ 1,	  0	  ]
[ 2,	  0	  ]
[ 3,	  0	  ]
[ 4,	  0	  ]
[ 5,	  0	  ]
[ 6,	  0	  ]
[ 7,	  0	  ]
[ 8,	  0	  ]
[ 9,	  0	  ]
[ 10,	  0	  ]
[ 11,	  0	  ]
[ 12,	  0	  ]
[ 13,	  0	  ]
[ 14,	  0	  ]
[ 15,	  0	  ]
[ 16,	  0	  ]
[ 17,	  0	  ]
[ 18,	  0	  ]
[ 19,	  0	  ]
[ 20,	  0	  ]
[ 21,	  0	  ]
[ 22,	  0	  ]

# Pseudo bat to map a BAT id into its disk/loaded/dirty status
view_bbp_status.print;
#-----------------#
# BAT:	  status  #
# (int)	  (str)	  #
#-----------------#
[ 1,	  "load"  ]
[ 2,	  "load"  ]
[ 3,	  "load"  ]
[ 4,	  "load"  ]
[ 5,	  "load"  ]
[ 6,	  "load"  ]
[ 7,	  "load"  ]
[ 8,	  "load"  ]
[ 9,	  "load"  ]
[ 10,	  "load"  ]
[ 11,	  "load"  ]
[ 12,	  "load"  ]
[ 13,	  "load"  ]
[ 14,	  "load"  ]
[ 15,	  "load"  ]
[ 16,	  "load"  ]
[ 17,	  "load"  ]
[ 18,	  "load"  ]
[ 19,	  "load"  ]
[ 20,	  "load"  ]
[ 21,	  "load"  ]
[ 22,	  "load"  ]

# Pseudo bat to map a BAT id into its type
view_bbp_kind.print;
#-----------------#
# BAT:	  kind	  #
# (int)	  (str)	  #
#-----------------#
[ 1,	  "tran"  ]
[ 2,	  "tran"  ]
[ 3,	  "tran"  ]
[ 4,	  "tran"  ]
[ 5,	  "tran"  ]
[ 6,	  "tran"  ]
[ 7,	  "tran"  ]
[ 8,	  "tran"  ]
[ 9,	  "tran"  ]
[ 10,	  "tran"  ]
[ 11,	  "tran"  ]
[ 12,	  "tran"  ]
[ 13,	  "tran"  ]
[ 14,	  "tran"  ]
[ 15,	  "tran"  ]
[ 16,	  "tran"  ]
[ 17,	  "tran"  ]
[ 18,	  "tran"  ]
[ 19,	  "tran"  ]
[ 20,	  "tran"  ]
[ 21,	  "tran"  ]
[ 22,	  "tran"  ]

# Pseudo bat with statistics on the use of BAT buffer pool
view_bbp_info.print;
!WARNING: interpret: convert identifier 'view_bbp_info' to string.
[ "view_bbp_info" ]

# Pseudo bat to map an atom type id into its name
view_atom_name.print;
!WARNING: interpret: convert identifier 'view_atom_name' to string.
[ "view_atom_name" ]

# Pseudo bat with variable settings for GDK
view_gdk_info.print;
!WARNING: interpret: convert identifier 'view_gdk_info' to string.
[ "view_gdk_info" ]
printf("#~BeginVariableOutput~#\n"); view_gdk_env.print; printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#---------------------------------------------------------------------------------#
# BAT:		  env								  #
# (str)		  (str)								  #
#---------------------------------------------------------------------------------#
[ "dbname",	  "tests_suite_08"						  ]
[ "server",	  "medusa"							  ]
[ "port",	  "31703"							  ]
[ "directory",	  "/var/tmp/monet.GNU_32/monet/IRIX646.5/dbfarm/tests_suite_08"	  ]
[ "owner",	  "monet"							  ]
[ "prefix",	  "32bitIRIX646.5"						  ]
[ "processid",	  "10204605"							  ]
[ "home",	  "/var/tmp/monet.GNU_32/monet/IRIX646.5"			  ]
[ "version",	  "4.1"								  ]
#~EndVariableOutput~#

# Pseudo bat to map thread to name
view_thread_name.print;
!WARNING: interpret: convert identifier 'view_thread_name' to string.
[ "view_thread_name" ]
printf("#~BeginVariableOutput~#\n"); view_gdk_thread.print; printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#---------------------------------#
# BAT:	  thread		  #
# (int)	  (str)			  #
#---------------------------------#
[ 1,	  "Server"		  ]
[ 2,	  "Interpreter"		  ]
[ 3,	  "InternetServer"	  ]
#~EndVariableOutput~#

# Pseudo bat to map client identifier to its name
view_client_name.print;
#-----------------#
# BAT:	  name	  #
# (int)	  (str)	  #
#-----------------#
[ 0,	  "adm"	  ]

# Pseudo bat to map client identifier to its login time
printf("#~BeginVariableOutput~#\n"); view_client_login.print; printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-----------------------------------------#
# BAT:	  login				  #
# (int)	  (str)				  #
#-----------------------------------------#
[ 0,	  "Mon Mar 27 05:19:40 2000"	  ]
#~EndVariableOutput~#

# Pseudo bat to map client identifier to its current active tree
view_client_tree.print;
#-----------------------------------------#
# BAT:	  tree				  #
# (int)	  (str)				  #
#-----------------------------------------#
[ 0,	  "print(view_client_tree())"	  ]

# Pseudo bat to map module name to their functions
view_mod_fcn.print;
!WARNING: interpret: convert identifier 'view_mod_fcn' to string.
[ "view_mod_fcn" ]

# Pseudo bat to map queue entry to its action
view_queue_action.print;
!WARNING: interpret: convert identifier 'view_queue_action' to string.
[ "view_queue_action" ]

# Pseudo bat to gain access to all visible variables
view_var_type = view_var_type; 

# Pseudo bat to map variable name to frozen/liquid
view_var_kind = view_var_kind; 

# Pseudo bat to map variable name to constant/changeable
view_var_constant = view_var_constant; 

quit;
