stdout of test 'no.106` in directory 'tests/BugReports` itself:

#> Mtest (13:34:55):	milS no.106 milS -prelude no.106.prelude
#> Mtest (13:34:55):	Mtimeout -timeout 600 Mserver -modulesilent -yaccsilent -d8 -db tests_BugReports -single -prelude no.106.prelude no.106.milS
# Monet Database Server V4.2
# Copyright (c) 1993-1999, CWI & SION. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit.
#script:no.106.milS
#prelude:no.106.prelude


#You are system administrator (adm)!
#---------------------------------#
# BAT:	  tmp_26		  #
# (oid)	  (str)			  #
#---------------------------------#
[ 0@0,	  "test"		  ]
[ 0@0,	  "this"		  ]
[ 0@0,	  "database"		  ]
[ 0@0,	  "this"		  ]
[ 0@0,	  "and"			  ]
[ 0@0,	  "test"		  ]
[ 0@0,	  "its"			  ]
[ 0@0,	  "export"		  ]
[ 0@0,	  "functionality"	  ]
[ 1@0,	  "test"		  ]
[ 1@0,	  "it"			  ]
[ 1@0,	  "thoroughly"		  ]
[ 2@0,	  "test"		  ]
[ 2@0,	  "this"		  ]
[ 2@0,	  "database"		  ]

setoid(oid(20000000));

#split w in twee tabellen
docid := new( void, oid );
tid := new( void, str );
docid := [w~].reverse;
docid.print;
#-----------------#
# BAT:	  tmp_28  #
# (void)  (oid)	  #
#-----------------#
[ nil,	  0@0	  ]
[ nil,	  0@0	  ]
[ nil,	  0@0	  ]
[ nil,	  0@0	  ]
[ nil,	  0@0	  ]
[ nil,	  0@0	  ]
[ nil,	  0@0	  ]
[ nil,	  0@0	  ]
[ nil,	  0@0	  ]
[ nil,	  1@0	  ]
[ nil,	  1@0	  ]
[ nil,	  1@0	  ]
[ nil,	  2@0	  ]
[ nil,	  2@0	  ]
[ nil,	  2@0	  ]
tid := [~w];
tid.print;
#---------------------------------#
# BAT:	  tmp_23		  #
# (void)  (str)			  #
#---------------------------------#
[ nil,	  "test"		  ]
[ nil,	  "this"		  ]
[ nil,	  "database"		  ]
[ nil,	  "this"		  ]
[ nil,	  "and"			  ]
[ nil,	  "test"		  ]
[ nil,	  "its"			  ]
[ nil,	  "export"		  ]
[ nil,	  "functionality"	  ]
[ nil,	  "test"		  ]
[ nil,	  "it"			  ]
[ nil,	  "thoroughly"		  ]
[ nil,	  "test"		  ]
[ nil,	  "this"		  ]
[ nil,	  "database"		  ]
docid.seqbase( 1000@0 );
docid.print;
#-----------------#
# BAT:	  tmp_28  #
# (void)  (oid)	  #
#-----------------#
[ 1000@0, 0@0	  ]
[ 1001@0, 0@0	  ]
[ 1002@0, 0@0	  ]
[ 1003@0, 0@0	  ]
[ 1004@0, 0@0	  ]
[ 1005@0, 0@0	  ]
[ 1006@0, 0@0	  ]
[ 1007@0, 0@0	  ]
[ 1008@0, 0@0	  ]
[ 1009@0, 1@0	  ]
[ 1010@0, 1@0	  ]
[ 1011@0, 1@0	  ]
[ 1012@0, 2@0	  ]
[ 1013@0, 2@0	  ]
[ 1014@0, 2@0	  ]
tid.seqbase( 1000@0 );
tid.print;
#---------------------------------#
# BAT:	  tmp_23		  #
# (void)  (str)			  #
#---------------------------------#
[ 1000@0, "test"		  ]
[ 1001@0, "this"		  ]
[ 1002@0, "database"		  ]
[ 1003@0, "this"		  ]
[ 1004@0, "and"			  ]
[ 1005@0, "test"		  ]
[ 1006@0, "its"			  ]
[ 1007@0, "export"		  ]
[ 1008@0, "functionality"	  ]
[ 1009@0, "test"		  ]
[ 1010@0, "it"			  ]
[ 1011@0, "thoroughly"		  ]
[ 1012@0, "test"		  ]
[ 1013@0, "this"		  ]
[ 1014@0, "database"		  ]
module("xtables");
CTgroup( docid, tid ).print;
#-----------------#
# BAT:	  tmp_27  #
# (void)  (oid)	  #
#-----------------#
[ 1000@0, 1000@0  ]
[ 1001@0, 1001@0  ]
[ 1002@0, 1002@0  ]
[ 1003@0, 1001@0  ]
[ 1004@0, 1004@0  ]
[ 1005@0, 1000@0  ]
[ 1006@0, 1006@0  ]
[ 1007@0, 1007@0  ]
[ 1008@0, 1008@0  ]
[ 1009@0, 1009@0  ]
[ 1010@0, 1010@0  ]
[ 1011@0, 1011@0  ]
[ 1012@0, 1012@0  ]
[ 1013@0, 1013@0  ]
[ 1014@0, 1014@0  ]
quit;
