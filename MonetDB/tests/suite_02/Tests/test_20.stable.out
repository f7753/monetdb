stdout of test 'test_20` in directory 'tests/suite_02` itself:

#> Mtest:	milS test_20 milS
#> Mtest:	Mtimeout -timeout 210 Mserver -modulesilent -yaccsilent -d8 -db tests_suite_02 -single test_20.milS
# Monet Database Server V4.1
# Copyright (c) 1993-1999, CWI & SION. All rights reserved.
# compiled for IRIX646.5/32bit on Fri Jan 14 01:04:33 MET 2000.
#script:test_20.milS


# Monet Database Server V4.3.5
# Copyright (c) 1993-2002, CWI. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit; dynamically linked.
setoid(oid(2000000));
# analyse selection using indexing
print(count(k10_unique1));
[ 10000 ]
printf("#~BeginVariableOutput~#\n"); cpu().print(); printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:		  cpu	  #
# (str)		  (int)	  #
#-------------------------#
[ "elapsed",	  0	  ]
[ "user",	  160	  ]
[ "elapuser",	  0	  ]
[ "system",	  620	  ]
[ "elapsystem",	  0	  ]
#~EndVariableOutput~#
var t:=fragment(k10_unique1,0,10,int(nil),int(nil));
t:=fragment(k10_unique1,0,10,int(nil),int(nil));
t:=fragment(k10_unique1,0,10,int(nil),int(nil));
t:=fragment(k10_unique1,0,10,int(nil),int(nil));
t:=fragment(k10_unique1,0,10,int(nil),int(nil));
t:=fragment(k10_unique1,0,10,int(nil),int(nil));
printf("#~BeginVariableOutput~#\n"); cpu().print(); printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:		  cpu	  #
# (str)		  (int)	  #
#-------------------------#
[ "elapsed",	  0	  ]
[ "user",	  160	  ]
[ "elapuser",	  0	  ]
[ "system",	  620	  ]
[ "elapsystem",	  0	  ]
#~EndVariableOutput~#
printf("#~BeginVariableOutput~#\n"); memory().print(); printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#---------------------------------#
# BAT:		  mem		  #
# (str)		  (int)		  #
#---------------------------------#
[ "memincr",	  1699840	  ]
[ "arena",	  1706224	  ]
[ "ordblks",	  451		  ]
[ "smblks",	  0		  ]
[ "hblkhd",	  0		  ]
[ "hblks",	  0		  ]
[ "usmblks",	  0		  ]
[ "fsmblks",	  0		  ]
[ "uordblks",	  1502392	  ]
[ "fordblks",	  203832	  ]
#~EndVariableOutput~#
printf("#~BeginVariableOutput~#\n"); io().print(); printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:		  io	  #
# (str)		  (int)	  #
#-------------------------#
[ "maxrss",	  0	  ]
[ "minflt",	  503	  ]
[ "majflt",	  628	  ]
[ "nswap",	  0	  ]
[ "inblock",	  0	  ]
[ "oublock",	  0	  ]
[ "nvcsw",	  0	  ]
[ "ninvcsw",	  0	  ]
#~EndVariableOutput~#

#Index first to speed-up selection
accbuild(k10_unique1,find(monet_acctbl,"index"));
printf("#~BeginVariableOutput~#\n"); cpu().print(); printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:		  cpu	  #
# (str)		  (int)	  #
#-------------------------#
[ "elapsed",	  0	  ]
[ "user",	  170	  ]
[ "elapuser",	  10	  ]
[ "system",	  620	  ]
[ "elapsystem",	  0	  ]
#~EndVariableOutput~#
t:=fragment(k10_unique1,0,10,int(nil),int(nil));
t:=fragment(k10_unique1,0,10,int(nil),int(nil));
t:=fragment(k10_unique1,0,10,int(nil),int(nil));
t:=fragment(k10_unique1,0,10,int(nil),int(nil));
t:=fragment(k10_unique1,0,10,int(nil),int(nil));
t:=fragment(k10_unique1,0,10,int(nil),int(nil));
printf("#~BeginVariableOutput~#\n"); cpu().print(); printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:		  cpu	  #
# (str)		  (int)	  #
#-------------------------#
[ "elapsed",	  0	  ]
[ "user",	  170	  ]
[ "elapuser",	  0	  ]
[ "system",	  620	  ]
[ "elapsystem",	  0	  ]
#~EndVariableOutput~#
printf("#~BeginVariableOutput~#\n"); memory().print(); printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#---------------------------------#
# BAT:		  mem		  #
# (str)		  (int)		  #
#---------------------------------#
[ "memincr",	  118784	  ]
[ "arena",	  1825008	  ]
[ "ordblks",	  449		  ]
[ "smblks",	  0		  ]
[ "hblkhd",	  0		  ]
[ "hblks",	  0		  ]
[ "usmblks",	  0		  ]
[ "fsmblks",	  0		  ]
[ "uordblks",	  1542480	  ]
[ "fordblks",	  282528	  ]
#~EndVariableOutput~#
printf("#~BeginVariableOutput~#\n"); io().print(); printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:		  io	  #
# (str)		  (int)	  #
#-------------------------#
[ "maxrss",	  0	  ]
[ "minflt",	  541	  ]
[ "majflt",	  631	  ]
[ "nswap",	  0	  ]
[ "inblock",	  0	  ]
[ "oublock",	  0	  ]
[ "nvcsw",	  0	  ]
[ "ninvcsw",	  0	  ]
#~EndVariableOutput~#
t:=fragment(k10_unique1,int(nil),int(nil),0,10);
t:=fragment(k10_unique1,int(nil),int(nil),0,10);
t:=fragment(k10_unique1,int(nil),int(nil),0,10);
t:=fragment(k10_unique1,int(nil),int(nil),0,10);
t:=fragment(k10_unique1,int(nil),int(nil),0,10);
t:=fragment(k10_unique1,int(nil),int(nil),0,10);
printf("#~BeginVariableOutput~#\n"); cpu().print(); printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:		  cpu	  #
# (str)		  (int)	  #
#-------------------------#
[ "elapsed",	  0	  ]
[ "user",	  180	  ]
[ "elapuser",	  10	  ]
[ "system",	  620	  ]
[ "elapsystem",	  0	  ]
#~EndVariableOutput~#
printf("#~BeginVariableOutput~#\n"); memory().print(); printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#---------------------------------#
# BAT:		  mem		  #
# (str)		  (int)		  #
#---------------------------------#
[ "memincr",	  0		  ]
[ "arena",	  1825008	  ]
[ "ordblks",	  449		  ]
[ "smblks",	  0		  ]
[ "hblkhd",	  0		  ]
[ "hblks",	  0		  ]
[ "usmblks",	  0		  ]
[ "fsmblks",	  0		  ]
[ "uordblks",	  1542480	  ]
[ "fordblks",	  282528	  ]
#~EndVariableOutput~#
printf("#~BeginVariableOutput~#\n"); io().print(); printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:		  io	  #
# (str)		  (int)	  #
#-------------------------#
[ "maxrss",	  0	  ]
[ "minflt",	  541	  ]
[ "majflt",	  631	  ]
[ "nswap",	  0	  ]
[ "inblock",	  0	  ]
[ "oublock",	  0	  ]
[ "nvcsw",	  0	  ]
[ "ninvcsw",	  0	  ]
#~EndVariableOutput~#

#index the tail
accbuild(reverse(k10_unique1),find(monet_acctbl,"index"));
printf("#~BeginVariableOutput~#\n"); cpu().print(); printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:		  cpu	  #
# (str)		  (int)	  #
#-------------------------#
[ "elapsed",	  0	  ]
[ "user",	  180	  ]
[ "elapuser",	  0	  ]
[ "system",	  620	  ]
[ "elapsystem",	  0	  ]
#~EndVariableOutput~#
t:=fragment(k10_unique1,int(nil),int(nil),0,10);
t:=fragment(k10_unique1,int(nil),int(nil),0,10);
t:=fragment(k10_unique1,int(nil),int(nil),0,10);
t:=fragment(k10_unique1,int(nil),int(nil),0,10);
t:=fragment(k10_unique1,int(nil),int(nil),0,10);
t:=fragment(k10_unique1,int(nil),int(nil),0,10);
printf("#~BeginVariableOutput~#\n"); cpu().print(); printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:		  cpu	  #
# (str)		  (int)	  #
#-------------------------#
[ "elapsed",	  0	  ]
[ "user",	  190	  ]
[ "elapuser",	  10	  ]
[ "system",	  620	  ]
[ "elapsystem",	  0	  ]
#~EndVariableOutput~#
printf("#~BeginVariableOutput~#\n"); memory().print(); printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#---------------------------------#
# BAT:		  mem		  #
# (str)		  (int)		  #
#---------------------------------#
[ "memincr",	  40960		  ]
[ "arena",	  1865968	  ]
[ "ordblks",	  447		  ]
[ "smblks",	  0		  ]
[ "hblkhd",	  0		  ]
[ "hblks",	  0		  ]
[ "usmblks",	  0		  ]
[ "fsmblks",	  0		  ]
[ "uordblks",	  1582568	  ]
[ "fordblks",	  283400	  ]
#~EndVariableOutput~#
printf("#~BeginVariableOutput~#\n"); io().print(); printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:		  io	  #
# (str)		  (int)	  #
#-------------------------#
[ "maxrss",	  0	  ]
[ "minflt",	  551	  ]
[ "majflt",	  632	  ]
[ "nswap",	  0	  ]
[ "inblock",	  0	  ]
[ "oublock",	  0	  ]
[ "nvcsw",	  0	  ]
[ "ninvcsw",	  0	  ]
#~EndVariableOutput~#
quit();

# 17:09:05 >  
# 17:09:05 >  Done.
# 17:09:05 >  

