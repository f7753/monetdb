stdout of test 'test_95` in directory 'tests/suite_02` itself:

#> Mtest (16:27:17):	milM test_95 milM
#> Mtest (16:27:17):	Mtimeout -timeout 600 Mserver -modulesilent -yaccsilent -d8 -db tests_suite_02 test_95.milM
# Monet Database Server V4.2
# Copyright (c) 1993-1999, CWI & SION. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit.
#script:test_95.milM

loaded;
#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "algebra",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "kernel",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

Try: modules;                - for other modules.
     ls;                     - for persistent bat listing.
     sigs("<module>")        - for available commands per module.
     help("<command>")       - for help one-liner for a command.

#You are system administrator (adm)!
setoid(oid(2000000));
# This sequence is conflict free
#load(k10_unique1); load(k10_unique2);
qtrace(1);
t1:= k10_unique1.copy;
t2:= k10_unique1.copy;
t3:= k10_unique1.copy;
t4:= k10_unique1.copy;
t5:= k10_unique1.copy;
s1:= k10_unique2.copy;
s2:= k10_unique2.copy;
s3:= k10_unique2.copy;
s4:= k10_unique2.copy;
s5:= k10_unique2.copy;
printf("#~BeginVariableOutput~#\n"); cpu.print; printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:		  cpu	  #
# (str)		  (int)	  #
#-------------------------#
[ "elapsed",	  0	  ]
[ "user",	  120	  ]
[ "elapuser",	  0	  ]
[ "system",	  40	  ]
[ "elapsystem",	  0	  ]
#~EndVariableOutput~#
join(t1,s1.reverse).count.print;
[ 10000 ]
join(t2,s2.reverse).count.print;
[ 10000 ]
join(t3,s3.reverse).count.print;
[ 10000 ]
join(t4,s4.reverse).count.print;
[ 10000 ]
join(t5,s5.reverse).count.print;
[ 10000 ]
printf("#~BeginVariableOutput~#\n"); cpu.print; printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:		  cpu	  #
# (str)		  (int)	  #
#-------------------------#
[ "elapsed",	  0	  ]
[ "user",	  170	  ]
[ "elapuser",	  50	  ]
[ "system",	  50	  ]
[ "elapsystem",	  10	  ]
#~EndVariableOutput~#
var i1,i2,i3,i4,i5;
printf("#~BeginVariableOutput~#\n"); qstat; printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
##------------------------------------------------------------------------#
## key   | put   | get  | wakeup  | enter | start | duration | action     #
##------------------------------------------------------------------------#
#[     6,      0,      0,      5,       0,       0,     997, "# This sequence is conflict free"]
#[     5,      0,      1,      8,       0,     997,       0, "readCmd;"]
#[     8,      1,      1,      7,     997,     997,       5, "t1:= k10_unique1.copy;"]
#[     7,      1,      1,     10,     997,    1002,       1, "readCmd;"]
#[    10,      1,      1,      9,    1003,    1003,       4, "t2:= k10_unique1.copy;"]
#[     9,      1,      1,     12,    1002,    1007,       0, "readCmd;"]
#[    12,      1,      1,     11,    1007,    1007,       4, "t3:= k10_unique1.copy;"]
#[    11,      1,      1,     14,    1007,    1011,       0, "readCmd;"]
#[    14,      1,      1,     13,    1011,    1011,       4, "t4:= k10_unique1.copy;"]
#[    13,      1,      1,     16,    1011,    1015,       1, "readCmd;"]
#[    16,      1,      1,     15,    1016,    1016,       4, "t5:= k10_unique1.copy;"]
#[    15,      1,      1,     18,    1015,    1020,       0, "readCmd;"]
#[    18,      1,      1,     17,    1020,    1020,       3, "s1:= k10_unique2.copy;"]
#[    17,      1,      1,     20,    1020,    1023,       0, "readCmd;"]
#[    20,      1,      1,     19,    1023,    1023,       2, "s2:= k10_unique2.copy;"]
#[    19,      1,      1,     22,    1023,    1025,       1, "readCmd;"]
#[    22,      1,      1,     21,    1026,    1026,       2, "s3:= k10_unique2.copy;"]
#[    21,      1,      1,     24,    1025,    1028,       0, "readCmd;"]
#[    24,      1,      1,     23,    1028,    1028,       2, "s4:= k10_unique2.copy;"]
#[    23,      1,      1,     26,    1028,    1030,       0, "readCmd;"]
#[    26,      1,      1,     25,    1030,    1030,       2, "s5:= k10_unique2.copy;"]
#[    25,      1,      1,     28,    1030,    1032,       0, "readCmd;"]
#[    28,      1,      1,     27,    1032,    1033,       0, "printf("#~BeginVariableOutput~#\n"); cpu.print; printf("#~EndVa"]
#[    27,      1,      1,     30,    1032,    1033,       1, "readCmd;"]
#[    30,      1,      1,     29,    1033,    1034,       8, "join(t1,s1.reverse).count.print;"]
#[    29,      1,      1,     32,    1033,    1042,       1, "readCmd;"]
#[    32,      1,      1,     31,    1043,    1043,      20, "join(t2,s2.reverse).count.print;"]
#[    31,      1,      1,     34,    1042,    1063,       0, "readCmd;"]
#[    34,      1,      1,     33,    1063,    1063,       8, "join(t3,s3.reverse).count.print;"]
#[    33,      1,      1,     36,    1063,    1071,       1, "readCmd;"]
#[    36,      1,      1,     35,    1072,    1072,       9, "join(t4,s4.reverse).count.print;"]
#[    35,      1,      1,     38,    1071,    1081,       0, "readCmd;"]
#[    38,      1,      1,     37,    1081,    1081,       9, "join(t5,s5.reverse).count.print;"]
#[    37,      1,      1,     40,    1081,    1090,       0, "readCmd;"]
#[    40,      1,      1,     39,    1090,    1090,       1, "printf("#~BeginVariableOutput~#\n"); cpu.print; printf("#~EndVa"]
#[    39,      1,      1,     42,    1090,    1091,       0, "readCmd;"]
#[    42,      1,      1,     41,    1091,    1091,       0, "var i1,i2,i3,i4,i5;"]
#[    41,      1,      1,     44,    1091,    1091,       0, "readCmd;"]
#~EndVariableOutput~#
qtrace(0);qtrace(1);
threadcnt(4);printf("#~BeginVariableOutput~#\n"); cpu.print; printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:		  cpu	  #
# (str)		  (int)	  #
#-------------------------#
[ "elapsed",	  0	  ]
[ "user",	  170	  ]
[ "elapuser",	  0	  ]
[ "system",	  50	  ]
[ "elapsystem",	  0	  ]
#~EndVariableOutput~#
{|	
	i1:=join(t1,s1.reverse).count;
	i2:=join(t2,s2.reverse).count;
	i3:=join(t3,s3.reverse).count;
	i4:=join(t4,s4.reverse).count;
	i5:=join(t5,s5.reverse).count;
|}
printf("#~BeginVariableOutput~#\n"); qstat; printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
##------------------------------------------------------------------------#
## key   | put   | get  | wakeup  | enter | start | duration | action     #
##------------------------------------------------------------------------#
#[    46,      1,      1,     45,    1092,    1092,       0, "qtrace(0);qtrace(1);"]
#[    45,      1,      1,     48,    1092,    1092,       0, "readCmd;"]
#[    48,      1,      1,     47,    1092,    1092,       1, "threadcnt(4);printf("#~BeginVariableOutput~#\n"); cpu.print; pr"]
#[    47,      1,      1,     50,    1092,    1094,       0, "readCmd;"]
#[    52,      1,      1,     51,    1094,    1094,       8, "[0]"]
#[    53,      1,      1,     51,    1094,    1102,       8, "[1]"]
#[    54,      1,      1,     51,    1094,    1110,       8, "[2]"]
#[    55,      1,      1,     51,    1094,    1118,       7, "[3]"]
#[    56,      1,      1,     51,    1094,    1125,       8, "[4]"]
#[    51,      1,      1,      0,    1094,    1133,       0, ""]
#[    50,      1,      1,     49,    1094,    1094,      39, "{|	"]
#[    49,      1,      1,     58,    1094,    1133,       0, "readCmd;"]
#~EndVariableOutput~#
qtrace(0);
print(i1);
[ 10000 ]
print(i2);
[ 10000 ]
print(i3);
[ 10000 ]
print(i4);
[ 10000 ]
print(i5);
[ 10000 ]
print("done parallel");
[ "done parallel" ]
"pseudo_thread_name".print;
[ "pseudo_thread_name" ]
printf("#~BeginVariableOutput~#\n"); view_gdk_thread.print; printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:	  thread	  #
# (int)	  (str)		  #
#-------------------------#
[ 1,	  "Interpreter"	  ]
[ 2,	  "Interpreter"	  ]
[ 3,	  "Interpreter"	  ]
[ 4,	  "Interpreter"	  ]
[ 5,	  "Interpreter"	  ]
#~EndVariableOutput~#
printf("#~BeginVariableOutput~#\n"); view_gdk_env.print; printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------------------------------------------------------#
# BAT:		  env							  #
# (str)		  (str)							  #
#-------------------------------------------------------------------------#
[ "dbname",	  "tests_suite_02"					  ]
[ "server",	  "apollo-hrn0615.multiweb.net"				  ]
[ "port",	  "50072"						  ]
[ "directory",	  "/home/niels/new/monet/Linux/dbfarm/tests_suite_02"	  ]
[ "owner",	  "niels"						  ]
[ "prefix",	  "32biti686-pc-linux-gnu"				  ]
[ "processid",	  "9779"						  ]
[ "home",	  "/home/niels/new/monet/Linux"				  ]
[ "version",	  "4.2"							  ]
#~EndVariableOutput~#
printf("#~BeginVariableOutput~#\n"); cpu.print; printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:		  cpu	  #
# (str)		  (int)	  #
#-------------------------#
[ "elapsed",	  0	  ]
[ "user",	  210	  ]
[ "elapuser",	  40	  ]
[ "system",	  50	  ]
[ "elapsystem",	  0	  ]
#~EndVariableOutput~#
quit;
