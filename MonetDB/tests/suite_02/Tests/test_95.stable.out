stdout of test 'test_95` in directory 'tests/suite_02` itself:

#> Mtest (20:00:02):	milM test_95 milM
#> Mtest (20:00:02):	Mtimeout -timeout 600 Mserver -modulesilent -yaccsilent -d8 -db tests_suite_02 test_95.milM
# Monet Database Server V4.2
# Copyright (c) 1993-1999, CWI & SION. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit.
#script:test_95.milM

loaded;
#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "algebra",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "kernel",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

Try: modules;                - for other modules.
     ls;                     - for persistent bat listing.
     sigs("<module>")        - for available commands per module.
     help("<command>")       - for help one-liner for a command.

#You are system administrator (adm)!
setoid(oid(2000000));
# This sequence is conflict free
#load(k10_unique1); load(k10_unique2);
qtrace(1);
t1:= k10_unique1.copy;
t2:= k10_unique1.copy;
t3:= k10_unique1.copy;
t4:= k10_unique1.copy;
t5:= k10_unique1.copy;
s1:= k10_unique2.copy;
s2:= k10_unique2.copy;
s3:= k10_unique2.copy;
s4:= k10_unique2.copy;
s5:= k10_unique2.copy;
printf("#~BeginVariableOutput~#\n"); cpu.print; printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:		  cpu	  #
# (str)		  (int)	  #
#-------------------------#
[ "elapsed",	  0	  ]
[ "user",	  1070	  ]
[ "elapuser",	  0	  ]
[ "system",	  7110	  ]
[ "elapsystem",	  0	  ]
#~EndVariableOutput~#
join(t1,s1.reverse).count.print;
[ 10000 ]
join(t2,s2.reverse).count.print;
[ 10000 ]
join(t3,s3.reverse).count.print;
[ 10000 ]
join(t4,s4.reverse).count.print;
[ 10000 ]
join(t5,s5.reverse).count.print;
[ 10000 ]
printf("#~BeginVariableOutput~#\n"); cpu.print; printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:		  cpu	  #
# (str)		  (int)	  #
#-------------------------#
[ "elapsed",	  0	  ]
[ "user",	  1120	  ]
[ "elapuser",	  50	  ]
[ "system",	  7120	  ]
[ "elapsystem",	  10	  ]
#~EndVariableOutput~#
var i1,i2,i3,i4,i5;
printf("#~BeginVariableOutput~#\n"); qstat; printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
##------------------------------------------------------------------------#
## key   | put   | get  | wakeup  | enter | start | duration | action     #
##------------------------------------------------------------------------#
#[     6,      0,      0,      5,       0,       0,     139, "# This sequence is conflict free"]
#[     5,      0,      1,      8,       0,     139,       0, "readCmd;"]
#[     8,      1,      1,      7,     139,     139,       5, "t1:= k10_unique1.copy;"]
#[     7,      1,      1,     10,     139,     144,       0, "readCmd;"]
#[    10,      1,      1,      9,     144,     144,       5, "t2:= k10_unique1.copy;"]
#[     9,      1,      1,     12,     144,     149,       0, "readCmd;"]
#[    12,      1,      1,     11,     149,     149,       4, "t3:= k10_unique1.copy;"]
#[    11,      1,      1,     14,     149,     153,       0, "readCmd;"]
#[    14,      1,      1,     13,     153,     153,       4, "t4:= k10_unique1.copy;"]
#[    13,      1,      1,     16,     153,     157,       0, "readCmd;"]
#[    16,      1,      1,     15,     157,     157,       5, "t5:= k10_unique1.copy;"]
#[    15,      1,      1,     18,     157,     162,       0, "readCmd;"]
#[    18,      1,      1,     17,     162,     162,       3, "s1:= k10_unique2.copy;"]
#[    17,      1,      1,     20,     162,     165,       0, "readCmd;"]
#[    20,      1,      1,     19,     165,     165,       2, "s2:= k10_unique2.copy;"]
#[    19,      1,      1,     22,     165,     167,       1, "readCmd;"]
#[    22,      1,      1,     21,     168,     168,       2, "s3:= k10_unique2.copy;"]
#[    21,      1,      1,     24,     167,     170,       0, "readCmd;"]
#[    24,      1,      1,     23,     170,     170,       2, "s4:= k10_unique2.copy;"]
#[    23,      1,      1,     26,     170,     172,       0, "readCmd;"]
#[    26,      1,      1,     25,     172,     172,       2, "s5:= k10_unique2.copy;"]
#[    25,      1,      1,     28,     172,     175,       0, "readCmd;"]
#[    28,      1,      1,     27,     175,     175,       1, "printf("#~BeginVariableOutput~#\n"); cpu.print; printf("#~EndVa"]
#[    27,      1,      1,     30,     175,     176,       0, "readCmd;"]
#[    30,      1,      1,     29,     176,     176,      18, "join(t1,s1.reverse).count.print;"]
#[    29,      1,      1,     32,     176,     194,       0, "readCmd;"]
#[    32,      1,      1,     31,     194,     194,      10, "join(t2,s2.reverse).count.print;"]
#[    31,      1,      1,     34,     194,     204,       0, "readCmd;"]
#[    34,      1,      1,     33,     204,     204,       9, "join(t3,s3.reverse).count.print;"]
#[    33,      1,      1,     36,     204,     213,       1, "readCmd;"]
#[    36,      1,      1,     35,     214,     214,      10, "join(t4,s4.reverse).count.print;"]
#[    35,      1,      1,     38,     213,     224,       0, "readCmd;"]
#[    38,      1,      1,     37,     224,     224,       9, "join(t5,s5.reverse).count.print;"]
#[    37,      1,      1,     40,     224,     233,       1, "readCmd;"]
#[    40,      1,      1,     39,     234,     234,       0, "printf("#~BeginVariableOutput~#\n"); cpu.print; printf("#~EndVa"]
#[    39,      1,      1,     42,     234,     234,       1, "readCmd;"]
#[    42,      1,      1,     41,     235,     235,       0, "var i1,i2,i3,i4,i5;"]
#[    41,      1,      1,     44,     234,     235,       0, "readCmd;"]
#~EndVariableOutput~#
qtrace(0);qtrace(1);
threadcnt(4);printf("#~BeginVariableOutput~#\n"); cpu.print; printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:		  cpu	  #
# (str)		  (int)	  #
#-------------------------#
[ "elapsed",	  0	  ]
[ "user",	  1130	  ]
[ "elapuser",	  10	  ]
[ "system",	  7120	  ]
[ "elapsystem",	  0	  ]
#~EndVariableOutput~#
{|	
	i1:=join(t1,s1.reverse).count;
	i2:=join(t2,s2.reverse).count;
	i3:=join(t3,s3.reverse).count;
	i4:=join(t4,s4.reverse).count;
	i5:=join(t5,s5.reverse).count;
|}
printf("#~BeginVariableOutput~#\n"); qstat; printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
##------------------------------------------------------------------------#
## key   | put   | get  | wakeup  | enter | start | duration | action     #
##------------------------------------------------------------------------#
#[    46,      1,      1,     45,     236,     236,       0, "qtrace(0);qtrace(1);"]
#[    45,      1,      1,     48,     236,     236,       0, "readCmd;"]
#[    48,      1,      1,     47,     236,     236,       1, "threadcnt(4);printf("#~BeginVariableOutput~#\n"); cpu.print; pr"]
#[    47,      1,      1,     50,     236,     237,       1, "readCmd;"]
#[    52,      1,      1,     51,     238,     238,       9, "[0]"]
#[    53,      1,      1,     51,     238,     247,       8, "[1]"]
#[    54,      1,      1,     51,     238,     255,       8, "[2]"]
#[    55,      1,      1,     51,     238,     263,       9, "[3]"]
#[    56,      1,      1,     51,     238,     272,       8, "[4]"]
#[    51,      1,      1,      0,     238,     280,       0, ""]
#[    50,      1,      1,     49,     238,     238,      42, "{|	"]
#[    49,      1,      1,     58,     238,     280,       1, "readCmd;"]
#~EndVariableOutput~#
qtrace(0);
print(i1);
[ 10000 ]
print(i2);
[ 10000 ]
print(i3);
[ 10000 ]
print(i4);
[ 10000 ]
print(i5);
[ 10000 ]
print("done parallel");
[ "done parallel" ]
"pseudo_thread_name".print;
[ "pseudo_thread_name" ]
printf("#~BeginVariableOutput~#\n"); view_gdk_thread.print; printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:	  thread	  #
# (int)	  (str)		  #
#-------------------------#
[ 1,	  "Interpreter"	  ]
[ 2,	  "Interpreter"	  ]
[ 3,	  "Interpreter"	  ]
[ 4,	  "Interpreter"	  ]
[ 5,	  "Interpreter"	  ]
#~EndVariableOutput~#
printf("#~BeginVariableOutput~#\n"); view_gdk_env.print; printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------------------------------------------------------------------------------#
# BAT:		  env										  #
# (str)		  (str)										  #
#-------------------------------------------------------------------------------------------------#
[ "dbname",	  "tests_suite_02"								  ]
[ "server",	  "medusa"									  ]
[ "port",	  "22915"									  ]
[ "directory",	  "/var/tmp/monet.GNU_32.28092/monet/.GNU_32/IRIX646.5/dbfarm/tests_suite_02"	  ]
[ "owner",	  "monet"									  ]
[ "prefix",	  "32bitmips-sgi-irix6.5"							  ]
[ "processid",	  "13765139"									  ]
[ "home",	  "/var/tmp/monet.GNU_32.28092/monet/.GNU_32/IRIX646.5"				  ]
[ "version",	  "4.2"										  ]
#~EndVariableOutput~#
printf("#~BeginVariableOutput~#\n"); cpu.print; printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:		  cpu	  #
# (str)		  (int)	  #
#-------------------------#
[ "elapsed",	  0	  ]
[ "user",	  1180	  ]
[ "elapuser",	  50	  ]
[ "system",	  7130	  ]
[ "elapsystem",	  10	  ]
#~EndVariableOutput~#
quit;
