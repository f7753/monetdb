stdout of test 'tst_priv` in directory 'tests/by_Peter` itself:

#> Mtest (20:55:13):	milM tst_priv milM
#> Mtest (20:55:13):	Mtimeout -timeout 600 Mserver -modulesilent -yaccsilent -d8 -db tests_by_Peter tst_priv.milM
# Monet Database Server V4.2
# Copyright (c) 1993-1999, CWI & SION. All rights reserved.
# compiled for Linux2.2.12-20smp/32bit on Wed Apr 12 05:50:14 CEST 2000.
#script:tst_priv.milM


# Monet Database Server V4.3.5
# Copyright (c) 1993-2002, CWI. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit; dynamically linked.
# test change of private mmap -> malloced under extends
new(void,str,1000000).persists(true).access(BAT_WRITE).rename("a");
var d := new(void,int,1000);
var i := 0;
while(i < 1000) d.insert(nil,i :+= 1);
d := [str](d).seqbase(0@0);
bat("a").seqbase(0@0).insert(d);

i := 0;
while(i < 100) {
    bat("a").insert(d.seqbase(oid(bat("a").count())));
    i :+= 1;
}

bat("a").mmap(1,1,1,1,1);
unload("a");
bat("a").info.reverse().select("theap.storage").reverse().print();
#-------------------------------------------------#
# t			tmp_31			  # name
# str			str			  # type
#-------------------------------------------------#
[ "theap.storage",	  "memory mapped"	  ]

[int](bat("a").mirror());
var e := [str]([int](bat("a").mirror()));
debugmask(49);
bat("a").insert(e);
#01 interpret_pin(insert) on bat(29) refcnt = 1
#01 interpret_pin(insert) => 29[1,0]
#01 interpret_pin(insert) on bat(32) refcnt = 1
#01 interpret_pin(insert) => 32[1,0]
#01 munmap(base=0xf1e59000, size=4063232) = 0
#01 munmap(base=0xf1e07000, size=327680) = 0
# batstamp(29) = -167
#01 interpret_unpin(insert) on bat(29) refcnt = 0
#01 interpret_unpin(insert) on bat(32) refcnt = 0
#01 interpret_unpin(insert) => kill 32[0,1]
debugmask(9);

#bat("a").mmap(1,1,1,1,1);
bat("a").info.reverse().select("theap.storage").reverse().print();
#-----------------------------------------#
# BAT:			  tmp_23	  #
# (str)			  (str)		  #
#-----------------------------------------#
[ "theap.storage",	  "malloced"	  ]
e := [str]([int](bat("a").mirror()));
debugmask(49);
bat("a").insert(e);
#01 interpret_pin(insert) on bat(29) refcnt = 1
#01 interpret_pin(insert) on bat(33) refcnt = 1
# batstamp(29) = -167
#01 interpret_unpin(insert) on bat(29) refcnt = 0
#01 interpret_unpin(insert) on bat(33) refcnt = 0
debugmask(9);

bat("a").info.reverse().select("theap.storage").reverse().print();
#-----------------------------------------#
# BAT:			  tmp_30	  #
# (str)			  (str)		  #
#-----------------------------------------#
[ "theap.storage",	  "malloced"	  ]
bat("a").insert(nil,"make dirty..");
commit();
#01 #BBPdir: writing BBP.dir (34 bats).

bat("a").destroy();
commit();

quit();

# 12:30:22 >  
# 12:30:22 >  Done.
# 12:30:22 >  

