dnl -*- mode: autoconf -*-

# The contents of this file are subject to the MonetDB Public
# License Version 1.0 (the "License"); you may not use this file
# except in compliance with the License. You may obtain a copy of
# the License at 
# http://monetdb.cwi.nl/Legal/MonetDBLicense-1.0.html
# 
# Software distributed under the License is distributed on an "AS
# IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
# implied. See the License for the specific language governing
# rights and limitations under the License.
# 
# The Original Code is the Monet Database System.
# 
# The Initial Developer of the Original Code is CWI.
# Portions created by CWI are Copyright (C) 1997-2002 CWI.  
# All Rights Reserved.
# 
# Contributor(s):
# 		Martin Kersten <Martin.Kersten@cwi.nl>
# 		Peter Boncz <Peter.Boncz@cwi.nl>
# 		Niels Nes <Niels.Nes@cwi.nl>
# 		Stefan Manegold  <Stefan.Manegold@cwi.nl>

dnl Process this file with autoconf to produce a configure script.
AC_INIT(src/utils/Mx/Mx.h)
AC_CONFIG_AUX_DIR(conf)

dnl ----------------------
AM_INIT_AUTOMAKE("MonetDB", 4.3.5)
AM_CONFIG_HEADER(config.h:conf/config.h.in)
AC_CANONICAL_HOST
AC_CANONICAL_TARGET

HOST=[$target]
AC_DEFINE_UNQUOTED(HOST, "$HOST", [Host identifier])

if test x"$target_os" = xcygwin; then
	AC_DEFINE(WIN32, 1, [Define on MS Windows (also under Cygwin)])
fi

# MONET_BUILD and MONET_SOURCE are *only* used for monet-config
# MONET_SOURCE is the absolute path name of the source directory
# (srcdir can be relative)

# The Q versions of various variables are used in places where \'s
# need to be escapes with an extra \.  Configure does not support \'s
# in path names, so there is no need to do anything special here
# except set the variables.  The command to set them in case we do
# need to escape the \'s is Qvar=`echo "$var" | sed 's/\\\\/\\\\\\\\/g'`
MONET_BUILD=[`pwd`]
AC_SUBST(MONET_BUILD)
QMONET_BUILD="$MONET_BUILD"
AC_SUBST(QMONET_BUILD)
MONET_SOURCE=[`(cd $srcdir && pwd)`]
AC_SUBST(MONET_SOURCE)
QMONET_SOURCE="$MONET_SOURCE"
AC_SUBST(QMONET_SOURCE)

# if no --prefix option, we must set Qprefix to the default value
# the problem is that prefix is set very late in the process if it
# wasn't set by --prefix
if test "${prefix}x" = "NONEx"; then
	Qprefix="${ac_default_prefix}"
else
	Qprefix="${prefix}"
fi
AC_SUBST(Qprefix)
# exec_prefix is created very late, so let make do the expansion
if test "${exec_prefix}x" = "NONEx"; then
	Qexec_prefix='${prefix}'
else
	Qexec_prefix="${exec_prefix}"
fi
AC_SUBST(Qexec_prefix)
Qsrcdir="$srcdir"
AC_SUBST(Qsrcdir)
Qlocalstatedir="$localstatedir"
AC_SUBST(Qlocalstatedir)
Qlibdir="$libdir"
AC_SUBST(Qlibdir)
Qsysconfdir="$sysconfdir"
AC_SUBST(Qsysconfdir)
Qbindir="$bindir"
AC_SUBST(Qbindir)
Qlibexecdir="$libexecdir"
AC_SUBST(Qlibexecdir)
Qdatadir="$datadir"
AC_SUBST(Qdatadir)
Qmandir="$mandir"
AC_SUBST(Qmandir)
Qincludedir="$includedir"
AC_SUBST(Qincludedir)
Qinfodir="$infodir"
AC_SUBST(Qinfodir)

AM_MONET_COMPILER()
AM_MONET_TOOLS()
AM_MONET_OPTIONS()
AM_MONET_LIBS()

DIRSEP="/"
case "$target_os" in
mac*)	DIRSEP=":"
	AC_ERROR([mac not supported yet])
	;;
esac
AC_SUBST(DIRSEP)
QDIRSEP="$DIRSEP"
AC_SUBST(QDIRSEP)

dnl AC_CHECK_PROG(CP,cp,cp -f)
dnl AC_CHECK_PROG(MKDIR,mkdir,mkdir -p)
dnl AC_CHECK_PROG(TAGS,ctags,ctags)

dnl get monet compiler options (debug,warning,optimize,profiling,instrument)

dnl Checks for header files.
AC_HEADER_STDC()
AC_HEADER_DIRENT()
AC_HEADER_SYS_WAIT()
AC_CHECK_HEADERS(fcntl.h limits.h unistd.h getopt.h malloc.h pwd.h dlfcn.h)
AC_CHECK_HEADERS(time.h sys/time.h sys/utime.h)
AC_CHECK_HEADERS(sys/file.h sys/param.h sys/times.h sys/mman.h)
AC_CHECK_HEADERS(rlimit.h netdb.h sys/resource.h)
AC_CHECK_HEADERS(string.h strings.h signal.h sys/socket.h)
AC_CHECK_HEADERS(ieeefp.h)
dnl We don't need to check for these two: they're only present on
dnl Windows.  We list them here for completeness, since the
dnl corresponding defines are used.
dnl AC_CHECK_HEADERS(io.h winsock.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST()
AC_C_INLINE()
AC_TYPE_PID_T()
AC_TYPE_OFF_T()
AC_TYPE_SIZE_T()
AC_HEADER_STAT()
AC_HEADER_TIME()
AC_STRUCT_TM()
AC_STRUCT_TIMEZONE()
AC_LANG_CPLUSPLUS()
AC_TRY_COMPILE( [], [ bool x = true; ], [ AC_DEFINE(HAVE_BOOL, 1, [Define if the compiler has bool type defined]) ] )
AC_LANG_C()
AC_C_BIGENDIAN()
AC_TRY_COMPILE( [], [ long long x; ], [ AC_DEFINE(HAVE_LONGLONG, 1, [Define if the compiler has long long type defined])]  )
AC_CHECK_SIZEOF(char,1)
AC_CHECK_SIZEOF(short,2)
AC_CHECK_SIZEOF(int,4)
AC_CHECK_SIZEOF(long,4)
AC_CHECK_SIZEOF(long long,8)
AC_TRY_COMPILE([#include <malloc.h>], [struct mallinfo m;], AC_DEFINE(HAVE_STRUCT_MALLINFO, 1, [Define if you have struct mallinfo]))
AC_CACHE_CHECK(for _sys_siglist, mn_cv_have__sys_siglist, [

AC_TRY_LINK([#include <unistd.h>
#include <stdlib.h>
#include <signal.h>
#include <stdio.h>], [printf("%s\n", _sys_siglist[0]);], mn_cv_have__sys_siglist=yes, mn_cv_have__sys_siglist=no)])
if test $mn_cv_have__sys_siglist = yes; then
	AC_DEFINE(HAVE__SYS_SIGLIST, 1, [Define if you have _sys_siglist])
fi

dnl only win32 AC_TRY_COMPILE( [], [ __int64 x; ], [ AC_DEFINE(HAVE__INT64, 1, [Define if the compiler the __int64 type defined])] )

dnl Checks for library functions.
AC_FUNC_ALLOCA()
AC_FUNC_MMAP()
AC_FUNC_SETPGRP()
AC_TYPE_SIGNAL()
AC_FUNC_UTIME_NULL()
AC_FUNC_VPRINTF()
AC_FUNC_MEMCMP()
AC_CHECK_FUNCS(mkdir rmdir getcwd getopt getrlimit vsnprintf snprintf)
AC_CHECK_FUNCS(strcspn strdup strstr strtod strtol strerror strcasecmp)
AC_CHECK_FUNCS(gethostname gettimeofday setenv putenv select getpgid)
AC_CHECK_FUNCS(fstat getpwuid getuid ftime sysconf)
AC_CHECK_FUNCS(mrand48 drand48)
AC_CHECK_FUNCS(nanosleep lockf)
AC_CHECK_FUNCS(ctime_r isinf fpclassify fpclass)
ctime_r3=yes
AC_MSG_CHECKING(ctime_r3)
AC_TRY_COMPILE( [#include <time.h> ], 
[ char buf[26]; time_t t; ctime_r(&t,buf,26); ], 
[ AC_DEFINE(HAVE_CTIME_R3, 1, [Define if you have ctime_r(time_t*,char *buf,size_t s)]) ], [ ctime_r3=no ])
AC_MSG_RESULT($ctime_r3)

dnl Mx and mel are used during make
MEL="$MONET_BUILD/src/mel/mel"
AC_SUBST(MEL)
MX="$MONET_BUILD/src/utils/Mx/Mx"
AC_SUBST(MX)
