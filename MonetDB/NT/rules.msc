# The contents of this file are subject to the MonetDB Public
# License Version 1.0 (the "License"); you may not use this file
# except in compliance with the License. You may obtain a copy of
# the License at
# http://monetdb.cwi.nl/Legal/MonetDBLicense-1.0.html
#
# Software distributed under the License is distributed on an "AS
# IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
# implied. See the License for the specific language governing
# rights and limitations under the License.
#
# The Original Code is the Monet Database System.
#
# The Initial Developer of the Original Code is CWI.
# Portions created by CWI are Copyright (C) 1997-2005 CWI.
# All Rights Reserved.

# install python, flex and bison on your systems 
PYTHON=python
YACC=bison -b y -y
LEX=flex 

# This is the location of pthreads for Win32, 
# see http://sources.redhat.com/pthreads-win32/
PTHREAD = C:\Pthreads
!IFDEF USE_MINGW
PTHREAD_INCS = "-I$(PTHREAD)\include" -D_DLL
PTHREAD_LIBS = "$(PTHREAD)\lib\libpthreadGC.a"
!ELSE
PTHREAD_INCS = "-I$(PTHREAD)\include"
PTHREAD_LIBS = "$(PTHREAD)\lib\pthreadVC.lib"
!ENDIF

# not need to edit beyond here..

pkg = MonetDB
exec_prefix = $(prefix)

bindir = $(exec_prefix)\bin
sbindir = $(exec_prefix)\sbin
libexecdir = $(exec_prefix)\libexec
datadir = $(prefix)\share
sysconfdir = $(prefix)\etc
sharedstatedir = $(prefix)\com
localstatedir = $(prefix)\var
libdir = $(exec_prefix)\lib
infodir = $(prefix)\info
mandir = $(prefix)\man
includedir = $(prefix)\include
oldincludedir = \usr\include
pkgdatadir = $(datadir)\$(pkg)
pkglibdir = $(libdir)\$(pkg)
pkgincludedir = $(includedir)\$(pkg)

#-FI$(TOPDIR)\config.h 
LIBC_INCS = $(PTHREAD_INCS)
!IFDEF USE_MINGW
SOCKET_LIBS = -lwsock32
!ELSE
SOCKET_LIBS = wsock32.lib
!ENDIF

COMPILE_MEL=1
COMPILE_MX=1
MEL="$(TOPDIR)\src\mel\mel"
MX="$(TOPDIR)\src\utils\Mx\Mx"
CP=copy
MV=copy
DEL=del
!IFDEF HAVE_JAVA
CONFIGURE=$(PYTHON) "$(TOPDIR)\configure.py" -DHAVE_JAVA "$(TOPDIR)" "$(prefix)"
!ELSE
CONFIGURE=$(PYTHON) "$(TOPDIR)\configure.py" "$(TOPDIR)" "$(prefix)"
!ENDIF

# Use "nmake DEBUG=1" to get a debug build (assertions enabled);
# use "nmake NDEBUG=1" to get a release build (assertions disabled);
# use plain "nmake" to get the default.
!IFNDEF DEBUG
!IFDEF NDEBUG
CFLAGS = $(CFLAGS) -DNDEBUG
!ELSE
# default in case neither NDEBUG nor DEBUG are defined
CFLAGS = $(CFLAGS)
!ENDIF
!ENDIF

{$(SRCDIR)}.mx.h:
	$(MX) $(MXFLAGS) -x h $<

.mx.h:
	$(MX) $(MXFLAGS) -x h $<

{$(SRCDIR)}.mx.c:
	$(MX) $(MXFLAGS) -x c $<

.mx.c:
	$(MX) $(MXFLAGS) -x c $<

{$(SRCDIR)}.mx.cxx:
	$(MX) $(MXFLAGS) -x C $<

.mx.cxx:
	$(MX) $(MXFLAGS) -x C $<

{$(SRCDIR)}.mx.m:
	$(MX) $(MXFLAGS) -x m $<

.mx.m:
	$(MX) $(MXFLAGS) -x m $<

.m.mil: 
	$(MEL) $(INCLUDES) -mil $*.m > $@
	type $*.tmpmil >> $@

.m.mil:
	$(MEL) $(INCLUDES) -mil $*.m > $@

{$(SRCDIR)}.mx.tmpmil:
	$(MX) $(MXFLAGS) -x mil $<
	$(MV) $*.mil $*.tmpmil
	$(DEL) $*.mil

{$(SRCDIR)}.mx.mil:
	$(MX) $(MXFLAGS) -x mil $<

.mx.tmpmil:
	$(MX) $(MXFLAGS) -x mil $<
	$(MV) $*.mil $*.tmpmil
	$(DEL) $*.mil

.mx.mil:
	$(MX) $(MXFLAGS) -x mil $<

{$(SRCDIR)}.mx.y:
	$(MX) $(MXFLAGS) -x y $<

.mx.y:
	$(MX) $(MXFLAGS) -x y $<

{$(SRCDIR)}.mx.l:
	$(MX) $(MXFLAGS) -x l $<

.mx.l:
	$(MX) $(MXFLAGS) -x l $<

{$(SRCDIR)}.mx.yy:
	$(MX) $(MXFLAGS) -x Y $<

.mx.yy:
	$(MX) $(MXFLAGS) -x Y $<

{$(SRCDIR)}.mx.ll:
	$(MX) $(MXFLAGS) -x L $<

.mx.ll:
	$(MX) $(MXFLAGS) -x L $<

{$(SRCDIR)}.c.$O:
	$(CC) $(CFLAGS) $(INCLUDES) -c $<

.c.$O:
	$(CC) $(CFLAGS) $(INCLUDES) -c $<

{$(SRCDIR)}.cxx.$O:
	$(CXX) $(CXXFLAGS) $(INCLUDES) -c $<

.cxx.$O:
	$(CXX) $(CXXFLAGS) $(INCLUDES) -c $<

# needed for yacc/lex output generated under unix 
.cc.cxx:
	rename $< $@

.SUFFIXES: .m .mx .proto_h .mil .glue_c .cxx .cc
.PRECIOUS: .m 
