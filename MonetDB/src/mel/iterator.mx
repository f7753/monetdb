@f iterator
@a Niels Nes

@h
#ifndef _ITERATOR_H_
#define _ITERATOR_H_

#include "command.h"

class Iterator : public Command {
    public:
	Iterator( int t, char *n, 
	      char *fcn, 
	      List *args = NULL,
	      char *hlp = NULL ); 

	virtual const char* Token() const;
	virtual ostream &print( language *l, ostream &o ) const ;
    private:
};
#endif 

@C
#include "iterator.h"
#include "ListIterator.h"
#include "language.h"
#include <string.h>
#include <stdio.h>

Iterator::Iterator( int t, char *n, char *fcn, 
		List *args, char *hlp ) 
        : Command(t, n, fcn, NORMAL, NULL, args, hlp) {
}

const char* Iterator::Token() const {
        return "TOK_ITERATOR";
}

ostream &Iterator::print( language *l, ostream &o ) const {
	return l->gen_command( o, *this );
}
