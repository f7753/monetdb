@f depend
@a Niels Nes

@h
#ifndef _DEPEND_H_
#define _DEPEND_H_

#include "language.h"

class depend: public language {
    public:
	const char *get_name() const{ return "depend"; }
	int generate_code( ostream &o, Symbol *root );

	ostream &gen_module( ostream &o, const Module &m );
	ostream &gen_dependency( ostream &o, const Dependency &m );
};

#endif //_DEPEND_H_

@C
#include "depend.h"
#include "ListIterator.h"

int depend::generate_code( ostream &o, Symbol *root ){
	root->print( this, o );
	return 0;
}


ostream &depend::gen_module( ostream &o, const Module &d ){ 
	if (d.Deps()){
		ListIterator *iter = d.Deps()->iterator();
		Symbol *s = NULL;
		while(iter->next((void**)&s)){
			o << d.filename() << ": ";
			s->print( this, o );
		}
	}
	return o; 
}

ostream &depend::gen_dependency( ostream &o, const Dependency &d ){
	 o << d.filename() << "\n";
	 return o; 
}
