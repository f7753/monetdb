#!/usr/bin/env python

# The contents of this file are subject to the MonetDB Public
# License Version 1.0 (the "License"); you may not use this file
# except in compliance with the License. You may obtain a copy of
# the License at
# http://monetdb.cwi.nl/Legal/MonetDBLicense-1.0.html
# 
# Software distributed under the License is distributed on an "AS
# IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
# implied. See the License for the specific language governing
# rights and limitations under the License.
# 
# The Original Code is the Monet Database System.
# 
# The Initial Developer of the Original Code is CWI.
# Portions created by CWI are Copyright (C) 1997-2003 CWI.
# All Rights Reserved.
# 
# Contributor(s):
# 		Martin Kersten <Martin.Kersten@cwi.nl>
# 		Peter Boncz <Peter.Boncz@cwi.nl>
# 		Niels Nes <Niels.Nes@cwi.nl>
# 		Stefan Manegold  <Stefan.Manegold@cwi.nl>

import sys
import os
import getopt
import re
import fileinput
import string
import time

#############################################################################
#       FUNCTIONS

def Usage(THISFILE) :
    print """

Usage:  %s [-I<exp>] <files>

-I<exp> : ignore lines matching <exp> during first count (optional, default: -I'^#`)
<files> : list of files to be processed

""" % THISFILE
### Usage(THISFILE) #

def warn(THISFILE,TEXT) :
    sys.stderr.write("%s warning: %s\n" % (THISFILE,TEXT))
### warn(THISFILE,TEXT) #

def wlen(str) :
    return len(string.join(string.split(str)))
### wlen(str) #

test = (
        # potential differences, which we what to ignore
        re.compile( r"^module\(mprof\);$"
                "|" r'^pm([BE]\("(global_.+|[a-zA-Z0-9_]+[0-9])"\)|Summary\(\));$'
                "|" r'^printf\("#~BeginProfilingOutput~#\\n"\);$'
                "|" r"^Mdestroydb: processing database ..*. in "
                "|" r"^Mcreatedb: processing database ..*. in "
                "|" r"^Mcreatedb: using default dbdir "
                "|" r"^Mcreatedb: calling .Mserver .*-db .* for the first time..$"
                "|" r"^Mcreatedb: database .* has been initialized succesfully!$"
                "|" r"^[Uu]sage: (/.*/)?(lt-)?(Mserver|MapiClient)( \[ options \])?$"
                "|" r"^!WARNING: GDKlockHome: ignoring empty or invalid .gdk_lock.$"
                "|" r"^!WARNING: BBPdir: initializing BBP.$"
                "|" r"^connection= .*:[0-9]*$"
                "|" r"^Connecting to server: localhost:[0-9]*$"
                "|" r"^server listening on port [0-9]*$"
                "|" r"^SQL  connected to database .* using schema .*$"
                "|" r"^MAPI  = .*@.*:[0-9]*$"
                 ,  re.MULTILINE),
        # differing error messages when loading non-existing modules in dynamic and static Mserver
        re.compile( r"^!ERROR: DL_open: Unknown error.$"
                "|" r"^!ERROR: DL_open: library not found \(STATIC\).$"
                 ,  re.MULTILINE),
        re.compile( r"^!ERROR: TBL_loadmod: module load .* cancelled.$"
                 ,  re.MULTILINE),
        re.compile( r"^!ERROR: module\(.*\): load error.$"
                 ,  re.MULTILINE),
        # differences due to property-checking, which we want to treat as "minor differences"
        re.compile( r'^synced\(x,[yz]\) := (true|false)$'
                #dir(): # name                 htype          ttype          count       heat        dirty                      status             kind               refcnt      lrefcnt     #
                "|" r'^\[ "[A-Za-z0-9_]+",\t* +"[a-z_]+",\t* +"[a-z_]+",\t* +[0-9]+,\t* +[0-9]+,\t* +"(dirty|clean|diffs)",\t* +"(load|disk)",\t* +"(tran|pers)",\t* +[0-9]+,\t* +[0-9]+\t* +\]$'
                "|" r'^\[ ".+",\t* +0,\t* +"(load|disk)",\t* +"(tran|pers)",\t* +0\t* +\]$'
                # tests/from_Twente/Bugs/Arjen_01:
                "|" r'^\[ "((bat|cur)Stamp|[ht]align(|flushed))",\t* +"[0-9\-]+",\t* +"[0-9\-]+",\t* +"[0-9\-]+",\t* +"[0-9\-]+",\t* +"[0-9\-]+",\t* +"[0-9\-]+",\t* +"[0-9\-]+",\t* +"[0-9\-]+",\t* +"[0-9\-]+",\t* +"[0-9\-]+",\t* +"[0-9\-]+"\t* +\]$'
                "|" r'^\[ "batId",\t* +"tmp_[0-9]+",\t* +"tmp_[0-9]+",\t* +"tmp_[0-9]+",\t* +"tmp_[0-9]+",\t* +"tmp_[0-9]+",\t* +"tmp_[0-9]+",\t* +"tmp_[0-9]+",\t* +"tmp_[0-9]+",\t* +"tmp_[0-9]+",\t* +"tmp_[0-9]+",\t* +"tmp_[0-9]+"\t* +\]$'
                "|" r'^\[ "lastUsed",\t* +"[0-9]+",\t* +"[0-9]+",\t* +"[0-9]+",\t* +"[0-9]+",\t* +"[0-9]+",\t* +"[0-9]+",\t* +"[0-9]+",\t* +"[0-9]+",\t* +"[0-9]+",\t* +"[0-9]+",\t* +"[0-9]+"\t* +\]$'
                "|" r'^\[ "bat(Cacheid|Parentid)",\t* +"[0-9\-]+",\t* +"[0-9\-]+",\t* +"[0-9\-]+",\t* +"[0-9\-]+",\t* +"[0-9\-]+",\t* +"[0-9\-]+",\t* +"[0-9\-]+",\t* +"[0-9\-]+",\t* +"[0-9\-]+",\t* +"[0-9\-]+",\t* +"[0-9\-]+"\t* +\]$'
                "|" r'^\[ "bat(Share|Ref)cnt",\t* +"[0-3]",\t* +"[0-3]",\t* +"[0-3]",\t* +"[0-3]",\t* +"[0-3]",\t* +"[0-3]",\t* +"[0-3]",\t* +"[0-3]",\t* +"[0-3]",\t* +"[0-3]",\t* +"[0-3]"\t* +\]$'
                "|" r'^\[ "batDirtydesc",\t* +"dirty",\t* +"dirty",\t* +"dirty",\t* +"dirty",\t* +"dirty",\t* +"dirty",\t* +"(dirty|clean)",\t* +"dirty",\t* +"dirty",\t* +"dirty",\t* +"dirty"\t* +\]$'
                "|" r'^\[ "batBuns\.(free|(max)?size)",\t* +"(20|212|40|424)",\t* +"(20|212)",\t* +"(8|56)",\t* +"(4|16|212)",\t* +"(8|56)",\t* +"(16|212|32|424)",\t* +"(3|24|424)",\t* +"(3|24|424)",\t* +"(12|212|24|424)",\t* +"(3|24|424)",\t* +"(12|212)"\t* +\]$'
                "|" r'^\[ "head",\t* +"void",\t* +"void",\t* +"void",\t* +"v?oid",\t* +"void",\t* +"oid",\t* +"v?oid",\t* +"v?oid",\t* +"oid",\t* +"void",\t* +"void"\t* +\]$'
                "|" r'^\[ "hdense",\t* +"1",\t* +"1",\t* +"1",\t* +"[01]",\t* +"1",\t* +"[01]",\t* +"[01]",\t* +"[01]",\t* +"[01]",\t* +"1",\t* +"1"\t* +\]$'
                "|" r'^\[ "hvarsized",\t* +"1",\t* +"1",\t* +"1",\t* +"[01]",\t* +"1",\t* +"0",\t* +"[01]",\t* +"[01]",\t* +"0",\t* +"1",\t* +"1"\t* +\]$'
                "|" r'^\[ "hloc",\t* +"0",\t* +"0",\t* +"0",\t* +"0",\t* +"0",\t* +"0",\t* +"0",\t* +"0",\t* +"0",\t* +"[04]",\t* +"0"\t* +\]$'
                "|" r'^\[ "hsorted",\t* +"65",\t* +"65",\t* +"65",\t* +"65",\t* +"65",\t* +"65",\t* +"65",\t* +"65",\t* +"(1|65)",\t* +"65",\t* +"65"\t* +\]$'
                "|" r'^\[ "hseqbase",\t* +"0@0",\t* +"0@0",\t* +"0@0",\t* +"(1@0|nil)",\t* +"0@0",\t* +"(0@0|nil)",\t* +"(1@0|nil)",\t* +"(1@0|nil)",\t* +"(1@0|nil)",\t* +"0@0",\t* +"0@0"\t* +\]$'
                "|" r'^\[ "tail",\t* +"oid",\t* +"int",\t* +"bit",\t* +"void",\t* +"bit",\t* +"void",\t* +"v?oid",\t* +"void",\t* +"void",\t* +"v?oid",\t* +"int"\t* +\]$'
                "|" r'^\[ "tdense",\t* +"1",\t* +"0",\t* +"0",\t* +"1",\t* +"0",\t* +"1",\t* +"[01]",\t* +"1",\t* +"1",\t* +"[01]",\t* +"0"\t* +\]$'
                "|" r'^\[ "tvarsized",\t* +"0",\t* +"0",\t* +"0",\t* +"1",\t* +"0",\t* +"1",\t* +"[01]",\t* +"1",\t* +"1",\t* +"[01]",\t* +"0"\t* +\]$'
                "|" r'^\[ "tloc",\t* +"0",\t* +"0",\t* +"0",\t* +"0",\t* +"0",\t* +"0",\t* +"[04]",\t* +"[04]",\t* +"0",\t* +"0",\t* +"0"\t* +\]$'
                "|" r'^\[ "tsorted",\t* +"(1|65)",\t* +"(1|65)",\t* +"(0|65)",\t* +"65",\t* +"0",\t* +"65",\t* +"65",\t* +"65",\t* +"65",\t* +"65",\t* +"(1|65)"\t* +\]$'
                "|" r'^\[ "tseqbase",\t* +"0@0",\t* +"nil",\t* +"nil",\t* +"0@0",\t* +"nil",\t* +"0@0",\t* +"(0@0|nil)",\t* +"0@0",\t* +"0@0",\t* +"(1@0|nil)",\t* +"nil"\t* +\]$'
                "|" r'^\[ "batCopiedtodisk",\t* +"[01]",\t* +"0",\t* +"0",\t* +"0",\t* +"0",\t* +"0",\t* +"0",\t* +"0",\t* +"0",\t* +"0",\t* +"0"\t* +\]$'
                # tests/from_Twente/Bugs/Arjen_02:
                "|" r'^\[ "((bat|cur)Stamp|[ht]align(|flushed))",\t* +"[0-9\-]+",\t* +"[0-9\-]+",\t* +"[0-9\-]+"\t* +\]$'
                "|" r'^\[ "batId",\t* +"tmp_[0-9]+",\t* +"tmp_[0-9]+",\t* +"tmp_[0-9]+"\t* +\]$'
                "|" r'^\[ "lastUsed",\t* +"[0-9]+",\t* +"[0-9]+",\t* +"[0-9]+"\t* +\]$'
                "|" r'^\[ "bat(Cacheid|Parentid)",\t* +"[0-9\-]+",\t* +"[0-9\-]+",\t* +"[0-9\-]+"\t* +\]$'
                "|" r'^\[ "bat(Share|Ref)cnt",\t* +"[0-2]",\t* +"[0-2]",\t* +"[0-2]"\t* +\]$'
                "|" r'^\[ "batBuns\.(free|(max)?size)",\t* +"(16|212)",\t* +"(7|56)",\t* +"(2|8|212|16|424)"\t* +\]$'
                "|" r'^\[ "head",\t* +"void",\t* +"void",\t* +"v?oid"\t* +\]$'
                "|" r'^\[ "h(dense|varsized)",\t* +"1",\t* +"1",\t* +"[01]"\t* +\]$'
                "|" r'^\[ "hseqbase",\t* +"0@0",\t* +"0@0",\t* +"(2@0|nil)"\t* +\]$'
                "|" r'^\[ "tsorted",\t* +"(1|65)",\t* +"(0|65)",\t* +"65"\t* +\]$'
                "|" r'^\[ "batCopiedtodisk",\t* +"[01]",\t* +"0",\t* +"0"\t* +\]$'
                # tests/from_Twente/moa/test:
                "|" r'^\[ [01]@0,\t* +[10]@0\t* +\]$'
                "|" r'^\[ ([01]@0,\t* +)?(40[89]@0|[89]000)\t* +\]$'
                "|" r'^\[ ([24]@0,\t* +)?(40[57]@0|[57]000)\t* +\]$'
                "|" r'^\[ ([58]@0,\t* +)?(40[14]@0|[14]000)\t* +\]$'
                "|" r'^\[ ([67]@0,\t* +)?(40[23]@0|[23]000)\t* +\]$'
                "|" r'^\[ 3@0,\t* +40[1234]@0\t* +\]$'
                "|" r'^\[ 2@0,\t* +406@0\t* +\]$'
                "|" r'^_MMjoin_18\.find\(7@0\)\.print;$'
                # src/modules/plain/salgebra (on WindowsNT):
                "|" r'^\[ "batId",\t* +"(28|29|30|31)"\t* +\]$'
                "|" r'^\[ (28|29|30|31),\t* +"ti",\t* +1,\t* +ti\t* +\]$'
                # src/modules/plain/mmath[2], tests/BugReports/Tests/no.125 (Linux.GNU.32):
                "|" r'^\[ \-?1\.2246(467991473532|063538223773)e\-0?16 \]$'
                "|" r'^\[ 6\.123(233995736766|0317691118863)e\-0?17 \]$'
                "|" r'^\[ -1\.8369(701987210297|095307335659)e\-0?16 \]$'
                "|" r'^\[ 1\.6331[28]e\+0?16 \]$'
                "|" r'^\[ 5\.443(75|93)e\+0?15 \]$'
                "|" r'^\[ 2\.302585092994045[59] \]$'
                "|" r'^\[ 0\.707106781186547(46|57) \]$'
                "|" r'^\[ 1\.047197551196597[69] \]$'
                "|" r'^\[ 16331(778728383844|239353195370) \]$'
                "|" r'^\[ 5443(926242794615|746451065123) \]$'
                "|" r'^\[ 0\.1000000014901161[12] \]$'
                "|" r'^\[ (0\.99999999999999989|1) \]$'
                "|" r'^\[ \-?0\.523598775598298(93|82) \]$'
                "|" r'^\[ 2\.094395102393195[73] \]$'
                # src/modules/plain/aggr[X3]:
                "|" r'^\[ .*(,\t* ? "?2\.562203[64]3e\+13"?)+\t* ? \]$'
                "|" r'^\[ .*(,\t* ? "?7\.6543209876543(2([13]2?|21)|195)"?)+\t* ? \]$'
                "|" r'^\[ .*(,\t* ? "?6\.6666666666666(572|67)"?)+\t* ? \]$'
                "|" r'^\[ .*(,\t* ? "?6\.6666666666666(288|67)"?)+\t* ? \]$'
                "|" r'^\[ .*(,\t* ? "?158\.765432098765(22|36?|44|59)"?)+\t* ? \]$'
		# src/modules/plain/decimal:
		"|" r'^\[ "[dn]ec_tiny",\t* +1122E\-30\t* +\]$'
		"|" r'^\[ "[dn]ec_small",\t* +2244\t* +\]$'
		"|" r'^\[ "[dn]ec_num",\t* +4488E15\t* +\]$'
		"|" r'^\[ "[dn]ec_big",\t* +1122E40\t* +\]$'
		"|" r'^\[ "[dn]ec_huge",\t* +2244E9010\t* +\]$'
                # src/monet/monet_mod_cnt-copy_C:
                "|" r'^\[ "(mapi_params|tmp_62)",\t* *[10],\t* *[10],\t* *0\t* *\]$'
                # src/gdk/cast:
                "|" r'^\[ (\-|)0 \]$'
                # Tokens depend on flex/bison
                "|" r'^\[ "TOK_[A-Z]+",\t* +"int",\t* +"frozen",\t* +"constant",\t* +"[0-9]+"\t* +\]'
                # Intel compiler seems to do some (re-)compilation for src/mapi/examples/C/
                "|" r'^IPO: using IR for .*$'
                "|" r'^IPO: performing single-file optimizations$'
                # src/tools/{client,multiClientSeq}
                "|" r'^ERROR = (Connection terminated|Lost connection with server)$'
                "|" r'^ERROR = (communication line broken|Connection lost)$'
                # Mtest warnings:
                "|" r'^Over\.\.$'
                "|" r'^(quit)?;$'
                "|" r'^(printf\("\\n)?! Mserver still running after Mshutdown\. Quitting now\. !(\\n"\);)?$'
                "|" r"^! Socket-Check failed for (SQL|MAPI)server on <[a-zA-Z0-9]*:[0-9]+> with #[0-9]+; '.*' !$"
                "|" r'^! Waiting [0-9]+ seconds \([0-9]/[0-9]\) \.\.\. (Done\.)?$'
                "|" r'^! Using new (SQL|MAPI)PORT=[0-9]+ !$'
                "|" r'^! (SQL|MAPI)PORT was not properly released by Mserver !$'
                 ,  re.MULTILINE)
        )

def mFilter (FILE, IGNORE) :
    fin = open(FILE, "r")
    LINE = fin.readline()
    while  len(LINE)  and  ( len(LINE) < 15  or  LINE[:15] not in ("stdout of test ", "stderr of test ") ):
        LINE = fin.readline()
    fin.close()
    if  len(LINE) >= 15  and  LINE[:15] in ("stdout of test ", "stderr of test "):
        WHAT, TST, TSTDIR = re.search("^std(out|err) of test .(.*). in directory .(.*). itself:", LINE, re.MULTILINE).groups()
    else:
        WHAT, TST, TSTDIR = "", "", ""


    ftmp = []
    ig = n = 0
    il = iw = ic = el = ew = ec = al = aw = ac = 0
    for iline in fileinput.input(FILE):
        oline = xline = ""
        if iline == "#~BeginVariableOutput~#\n"  or  iline == "#~BeginProfilingOutput~#\n":
            ig = 1
            n = 0
        if ig  and  ( len(iline) == 0  or  iline[0] != "!"  or  iline[:9] != "ERROR = !" ):
            # ignore differences in "VariableOutput" or "ProfilingOutput"
            oline = "#~ " + iline
            n = n + 1
        elif test[0].match(iline):
            # potential differences, which we what to ignore; see above
            oline = "#~ " + iline
        elif test[4].match(iline):
            # differences due to property-checking, which we want to treat as "minor differences"; see above
            oline = "=" + iline
        elif len(ftmp) > 2              and \
             test[3].match(iline)       and \
             test[2].match(ftmp[-1])    and \
             test[1].match(ftmp[-2]):
            # differing error messages when loading non-existing modules in dynamic and static Mserver; see above
            oline = iline
            for i in -1, -2:
                w = len(string.split(ftmp[i]))
                c = wlen(ftmp[i])
                il = il - 1
                iw = iw - w
                ic = ic - c
                el = el - 1
                ew = ew - w
                ec = ec - c
                ftmp[i] = "#~ " + ftmp[i]
        #TODO
        # properly solve this "hack" to make diff on NT ignore so-called
        # empty lines which actually contain a '\r'
        elif iline == os.linesep  or  iline == "\n":
            oline = "#" + iline
        else:
            oline = iline
        if iline == "#~EndVariableOutput~#\n":
            ig = 0
            xline = "~ " + str(n) + " ~\n"
        if iline == "#~EndProfilingOutput~#\n":
            ig = 0
        for ln in oline, xline:
            if len(ln):
                w = len(string.split(ln))
                c = wlen(ln)
                al = al + 1
                aw = aw + w
                ac = ac + c
                if ln != os.linesep  and  \
                   not re.match(IGNORE,ln, re.MULTILINE):
                    el = el + 1
                    ew = ew + w
                    ec = ec + c
                    if not re.match('^=',ln, re.MULTILINE):
                        il = il + 1
                        iw = iw + w
                        ic = ic + c
                ftmp.append(ln)

    fout = open(FILE + ".FILTERED", "w")
    if (al > 0) or (aw > 0) or (ac >0):
        fout.write("Statistics about std"+WHAT+" of test '"+TST+"` in directory '"+TSTDIR+"`:\n")
        fout.write("  %9d lines, %9d words, %9d chars   in lines not matching '^$|%s|^=`\n" % (il,iw,ic,IGNORE))
        fout.write("= %9d lines, %9d words, %9d chars   in lines not matching '^$|%s`\n"    % (el,ew,ec,IGNORE))
        fout.write("# %9d lines, %9d words, %9d chars   in all lines\n"                     % (al,aw,ac))
        fout.write("\n")
        for ln in ftmp:
            try:
                fout.write(ln)
            except IOError, (IOerrNo, IOerrStr):
                warn(THISFILE, "Writing to output file '%s' failed with #%d: '%s'." % (fout.name, IOerrNo, IOerrStr))
                if IOerrNo == 28:
                    # No space left on device
                    warn(THISFILE, "Removing input file '%s'." % FILE)
                    try:
                        os.remove(FILE)
                        fin = open(FILE,"w")
                        fin.write("%s: Removed '%s' to create space for '%s'.\n" % (THISFILE, FILE, fout.name))
                        fin.close()
                    except:
                        pass
                    try:
                        fout.write(ln)
                    except IOError, (IOerrNo, IOerrStr):
                        warn(THISFILE, "Writing to output file '%s' failed with #%d: '%s'." % (fout.name, IOerrNo, IOerrStr))
        fout.flush()
    fout.close()
    if os.name == "nt":
        time.sleep(1)
### mFilter (FILE, IGNORE) #

#############################################################################
#       MAIN

def main(argv) :
    THISFILE = os.path.basename(argv[0])
    try:
        opts, args = getopt.getopt(argv[1:], "?hI:", ["help"])
    except getopt.GetoptError:
        Usage(THISFILE)
        sys.exit(1)

    IGNORE = "^#"
    for o, a in opts:
        if o in ("-?", "-h", "--help"):
            Usage(THISFILE)
            sys.exit(0)
        if o == "-I":
            IGNORE = a

    for f in args:
        if os.path.isfile(f):
            mFilter(f, IGNORE)
        else:
            warn(THISFILE, "file missing: " + f)
### main(argv) #

if __name__ == "__main__":
    main(sys.argv)

#       END
#############################################################################
