stdout of test 'mprof2` in directory 'src/modules/plain` itself:

#> Mtest (13:31:49):	other mprof2 1200
#> Mtest (13:31:49):	Mtimeout -timeout 1200 ./mprof2 mprof2
#> Mlog (13:31:49):	Mtimeout -timeout 600 Mserver -modulesilent -yaccsilent -d8 -db src_modules_plain mprof2.mil
# Monet Database Server V4.2
# Copyright (c) 1993-1999, CWI & SION. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit.
#script:mprof2.mil

loaded;
#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "algebra",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "kernel",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

Try: modules;                - for other modules.
     ls;                     - for persistent bat listing.
     sigs("<module>")        - for available commands per module.
     help("<command>")       - for help one-liner for a command.

#You are system administrator (adm)!

#line 1391 "../../../../src/modules/plain/mprof.mx"
setoid(oid(20000000));




#line 1417 "../../../../src/modules/plain/mprof.mx"
# A test for the performance analysis
pmB("abc");
monet_atomtbl.count.print;
[ 16 ]
pmE("abc");
pmB("pmPrint");
printf("#~BeginVariableOutput~#\n"); pmPrint; printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------------------------------#
# BAT:	  mprof_id	| clock	| utime_stime	  #
# (int)	  (str)		| (int)	| (Tms)		  #
#-------------------------------------------------#
[ 0,	  "abc",	  0,	  (0,0)		  ]
[ 1,	  "pmPrint",	  0,	  (1,0)		  ]
[ 2,	  "xyz",	  0,	  (0,0)		  ]
[ 3,	  "pmPrint",	  0,	  (0,0)		  ]
[ 3,	  "pmPrint",	  0,	  (1,-1)	  ]
[ 3,	  "pmPrint",	  0,	  (-1,1)	  ]
[ 3,	  "pmPrint",	  0,	  (0,0)		  ]
[ 3,	  "pmPrint",	  -1,	  (0,0)		  ]
[ 3,	  "pmPrint",	  -1,	  (1,-1)	  ]
[ 3,	  "pmPrint",	  -1,	  (-1,1)	  ]
[ 3,	  "pmPrint",	  -1,	  (0,0)		  ]
[ 3,	  "pmPrint",	  1,	  (0,0)		  ]
[ 3,	  "pmPrint",	  1,	  (1,-1)	  ]
[ 3,	  "pmPrint",	  1,	  (-1,1)	  ]
[ 3,	  "pmPrint",	  1,	  (0,0)		  ]
[ 3,	  "pmPrint",	  0,	  (0,0)		  ]
[ 3,	  "pmPrint",	  0,	  (1,-1)	  ]
[ 3,	  "pmPrint",	  0,	  (-1,1)	  ]
[ 3,	  "pmPrint",	  0,	  (0,0)		  ]
[ 3,	  "abc",	  0,	  (0,0)		  ]
[ 3,	  "abc",	  0,	  (1,-1)	  ]
[ 3,	  "abc",	  0,	  (-1,1)	  ]
[ 3,	  "abc",	  0,	  (0,0)		  ]
[ 3,	  "abc",	  -1,	  (0,0)		  ]
[ 3,	  "abc",	  -1,	  (1,-1)	  ]
[ 3,	  "abc",	  -1,	  (-1,1)	  ]
[ 3,	  "abc",	  -1,	  (0,0)		  ]
[ 3,	  "abc",	  1,	  (0,0)		  ]
[ 3,	  "abc",	  1,	  (1,-1)	  ]
[ 3,	  "abc",	  1,	  (-1,1)	  ]
[ 3,	  "abc",	  1,	  (0,0)		  ]
[ 3,	  "abc",	  0,	  (0,0)		  ]
[ 3,	  "abc",	  0,	  (1,-1)	  ]
[ 3,	  "abc",	  0,	  (-1,1)	  ]
[ 3,	  "abc",	  0,	  (0,0)		  ]
[ 4,	  "pmPrint",	  0,	  (0,0)		  ]
#-------------------------------------------------#
# BAT:	  mprof_id	| ru_usage		  #
# (int)	  (str)		| (Rusage)		  #
#-------------------------------------------------#
[ 0,	  "abc",	  (0,0,4,0,0,0,0,0)	  ]
[ 1,	  "pmPrint",	  (0,0,15,0,0,0,0,0)	  ]
[ 2,	  "xyz",	  (0,1,0,0,0,0,0,0)	  ]
[ 3,	  "pmPrint",	  (0,0,1,0,0,0,0,0)	  ]
[ 3,	  "pmPrint",	  (0,1,-16,0,0,0,0,0)	  ]
[ 3,	  "pmPrint",	  (0,-1,21,0,0,0,0,0)	  ]
[ 3,	  "pmPrint",	  (0,0,4,0,0,0,0,0)	  ]
[ 3,	  "abc",	  (0,0,1,0,0,0,0,0)	  ]
[ 3,	  "abc",	  (0,1,-16,0,0,0,0,0)	  ]
[ 3,	  "abc",	  (0,-1,21,0,0,0,0,0)	  ]
[ 3,	  "abc",	  (0,0,4,0,0,0,0,0)	  ]
[ 4,	  "pmPrint",	  (0,0,0,0,0,0,0,0)	  ]
#-------------------------------------------------#
# BAT:	  mprof_id	| mallinfo		  #
# (int)	  (str)		| (Mallinfo)		  #
#-------------------------------------------------#
[ 0,	  "abc",	  (0,0,0,0,0,0,0,0)	  ]
[ 1,	  "pmPrint",	  (0,2,0,0,0,0,0,4624)	  ]
[ 2,	  "xyz",	  (0,1,0,0,0,0,0,-8)	  ]
[ 3,	  "pmPrint",	  (0,3,0,0,0,0,0,200)	  ]
[ 3,	  "pmPrint",	  (0,-22,0,0,0,0,0,4896)  ]
[ 3,	  "pmPrint",	  (0,25,0,0,0,0,0,-4696)  ]
[ 3,	  "pmPrint",	  (0,0,0,0,0,0,0,0)	  ]
[ 3,	  "abc",	  (0,3,0,0,0,0,0,200)	  ]
[ 3,	  "abc",	  (0,-22,0,0,0,0,0,4896)  ]
[ 3,	  "abc",	  (0,25,0,0,0,0,0,-4696)  ]
[ 3,	  "abc",	  (0,0,0,0,0,0,0,0)	  ]
[ 4,	  "pmPrint",	  (0,0,0,0,0,0,0,0)	  ]
#~EndVariableOutput~#
pmE("pmPrint");
pmB("xyz");
monet_fcn_fcn.count;
pmE("xyz");
pmB("pmPrint");
printf("#~BeginVariableOutput~#\n"); pmPrint; printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------------------------------#
# BAT:	  mprof_id	| clock	| utime_stime	  #
# (int)	  (str)		| (int)	| (Tms)		  #
#-------------------------------------------------#
[ 0,	  "abc",	  0,	  (0,0)		  ]
[ 1,	  "pmPrint",	  0,	  (1,0)		  ]
[ 2,	  "xyz",	  0,	  (0,0)		  ]
[ 3,	  "pmPrint",	  0,	  (0,0)		  ]
[ 3,	  "pmPrint",	  0,	  (1,-1)	  ]
[ 3,	  "pmPrint",	  0,	  (-1,1)	  ]
[ 3,	  "pmPrint",	  0,	  (0,0)		  ]
[ 3,	  "pmPrint",	  -1,	  (0,0)		  ]
[ 3,	  "pmPrint",	  -1,	  (1,-1)	  ]
[ 3,	  "pmPrint",	  -1,	  (-1,1)	  ]
[ 3,	  "pmPrint",	  -1,	  (0,0)		  ]
[ 3,	  "pmPrint",	  1,	  (0,0)		  ]
[ 3,	  "pmPrint",	  1,	  (1,-1)	  ]
[ 3,	  "pmPrint",	  1,	  (-1,1)	  ]
[ 3,	  "pmPrint",	  1,	  (0,0)		  ]
[ 3,	  "pmPrint",	  0,	  (0,0)		  ]
[ 3,	  "pmPrint",	  0,	  (1,-1)	  ]
[ 3,	  "pmPrint",	  0,	  (-1,1)	  ]
[ 3,	  "pmPrint",	  0,	  (0,0)		  ]
[ 3,	  "abc",	  0,	  (0,0)		  ]
[ 3,	  "abc",	  0,	  (1,-1)	  ]
[ 3,	  "abc",	  0,	  (-1,1)	  ]
[ 3,	  "abc",	  0,	  (0,0)		  ]
[ 3,	  "abc",	  -1,	  (0,0)		  ]
[ 3,	  "abc",	  -1,	  (1,-1)	  ]
[ 3,	  "abc",	  -1,	  (-1,1)	  ]
[ 3,	  "abc",	  -1,	  (0,0)		  ]
[ 3,	  "abc",	  1,	  (0,0)		  ]
[ 3,	  "abc",	  1,	  (1,-1)	  ]
[ 3,	  "abc",	  1,	  (-1,1)	  ]
[ 3,	  "abc",	  1,	  (0,0)		  ]
[ 3,	  "abc",	  0,	  (0,0)		  ]
[ 3,	  "abc",	  0,	  (1,-1)	  ]
[ 3,	  "abc",	  0,	  (-1,1)	  ]
[ 3,	  "abc",	  0,	  (0,0)		  ]
[ 4,	  "pmPrint",	  0,	  (0,0)		  ]
[ 5,	  "xyz",	  0,	  (0,0)		  ]
[ 6,	  "pmPrint",	  0,	  (0,0)		  ]
#-------------------------------------------------#
# BAT:	  mprof_id	| ru_usage		  #
# (int)	  (str)		| (Rusage)		  #
#-------------------------------------------------#
[ 0,	  "abc",	  (0,0,4,0,0,0,0,0)	  ]
[ 1,	  "pmPrint",	  (0,0,15,0,0,0,0,0)	  ]
[ 2,	  "xyz",	  (0,1,0,0,0,0,0,0)	  ]
[ 3,	  "pmPrint",	  (0,0,1,0,0,0,0,0)	  ]
[ 3,	  "pmPrint",	  (0,1,-16,0,0,0,0,0)	  ]
[ 3,	  "pmPrint",	  (0,-1,21,0,0,0,0,0)	  ]
[ 3,	  "pmPrint",	  (0,0,4,0,0,0,0,0)	  ]
[ 3,	  "abc",	  (0,0,1,0,0,0,0,0)	  ]
[ 3,	  "abc",	  (0,1,-16,0,0,0,0,0)	  ]
[ 3,	  "abc",	  (0,-1,21,0,0,0,0,0)	  ]
[ 3,	  "abc",	  (0,0,4,0,0,0,0,0)	  ]
[ 4,	  "pmPrint",	  (0,0,13,0,0,0,0,0)	  ]
[ 5,	  "xyz",	  (0,0,0,0,0,0,0,0)	  ]
[ 6,	  "pmPrint",	  (0,0,0,0,0,0,0,0)	  ]
#-------------------------------------------------#
# BAT:	  mprof_id	| mallinfo		  #
# (int)	  (str)		| (Mallinfo)		  #
#-------------------------------------------------#
[ 0,	  "abc",	  (0,0,0,0,0,0,0,0)	  ]
[ 1,	  "pmPrint",	  (0,2,0,0,0,0,0,4624)	  ]
[ 2,	  "xyz",	  (0,1,0,0,0,0,0,-8)	  ]
[ 3,	  "pmPrint",	  (0,3,0,0,0,0,0,200)	  ]
[ 3,	  "pmPrint",	  (0,-22,0,0,0,0,0,4896)  ]
[ 3,	  "pmPrint",	  (0,25,0,0,0,0,0,-4696)  ]
[ 3,	  "pmPrint",	  (0,0,0,0,0,0,0,0)	  ]
[ 3,	  "abc",	  (0,3,0,0,0,0,0,200)	  ]
[ 3,	  "abc",	  (0,-22,0,0,0,0,0,4896)  ]
[ 3,	  "abc",	  (0,25,0,0,0,0,0,-4696)  ]
[ 3,	  "abc",	  (0,0,0,0,0,0,0,0)	  ]
[ 4,	  "pmPrint",	  (0,3,0,0,0,0,0,4696)	  ]
[ 5,	  "xyz",	  (0,0,0,0,0,0,0,0)	  ]
[ 6,	  "pmPrint",	  (0,0,0,0,0,0,0,0)	  ]
#~EndVariableOutput~#
pmE("pmPrint");
printf("#~BeginVariableOutput~#\n"); pmSummary; printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
Label: abc called: 2
		sum	avg	min	max
	time	   0	   0	  -1	   1
	utime	   0	   0	  -1	   1
	stime	   0	   0	  -1	   1
	inblock	   0	   0	   0	   0
	oublock	   0	   0	   0	   0
	majflt	  14	   2	 -16	  21
	cntxsw	   0	   0	   0	   0
	arena	   0	   0	   0	   0

Label: pmPrint called: 4
		sum	avg	min	max
	time	   0	   0	  -1	   1
	utime	   2	   0	  -1	   1
	stime	   0	   0	  -1	   1
	inblock	   0	   0	   0	   0
	oublock	   0	   0	   0	   0
	majflt	  38	   5	 -16	  21
	cntxsw	   0	   0	   0	   0
	arena	   0	   0	   0	   0

Label: xyz called: 2
		sum	avg	min	max
	time	   0	   0	   0	   0
	utime	   0	   0	   0	   0
	stime	   0	   0	   0	   0
	inblock	   0	   0	   0	   0
	oublock	   0	   0	   0	   0
	majflt	   0	   0	   0	   0
	cntxsw	   0	   0	   0	   0
	arena	   0	   0	   0	   0

#~EndVariableOutput~#
drop("mprof");
quit;
