stdout of test 'malalgebra` in directory 'src/modules/plain` itself:

#> Mtest (21:31:53):	other malalgebra 1200
#> Mtest (21:31:53):	Mtimeout -timeout 1200 ./malalgebra malalgebra
#> Mlog (21:31:53):	Mtimeout -timeout 600 Mserver -modulesilent -yaccsilent -d8 -db src_modules_plain malalgebra.mil
# Monet Database Server V4.2
# Copyright (c) 1993-1999, CWI & SION. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit.
#script:malalgebra.mil


# Monet Database Server V4.3.5
# Copyright (c) 1993-2002, CWI. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit; dynamically linked.

#line 203 "/var/tmp/MonetDB/src/modules/plain/malalgebra.mx"

#
# Simple test of some algorithms against the baseline
#

module("malalgebra");

VAR Ndiff, l, r;

dj := new( void, oid ); tf := new( void, int );
dj.insert( nil, 0@0 );  tf.insert( nil, 10 );
dj.insert( nil, 0@0 );  tf.insert( nil, 20 );
dj.insert( nil, 0@0 );  tf.insert( nil, 30 );
dj.insert( nil, 1@0 );  tf.insert( nil, 30 );
dj.insert( nil, 1@0 );  tf.insert( nil, 20 );
dj.insert( nil, 1@0 );  tf.insert( nil, 10 );
dj.insert( nil, 2@0 );  tf.insert( nil, 20 );
dj.insert( nil, 2@0 );  tf.insert( nil, 30 );
dj.insert( nil, 2@0 );  tf.insert( nil, 10 );
dj.seqbase(0@0);        tf.seqbase(0@0);

l := dj.reverse;
r := tf;

Ntestfailed := 0;



#line 244 "/var/tmp/MonetDB/src/modules/plain/malalgebra.mx"


#line 233 "/var/tmp/MonetDB/src/modules/plain/malalgebra.mx"
VAR result_oid := join( [oid](l), [oid](r.reverse).reverse );


#line 245 "/var/tmp/MonetDB/src/modules/plain/malalgebra.mx"


#line 236 "/var/tmp/MonetDB/src/modules/plain/malalgebra.mx"

#line 233 "/var/tmp/MonetDB/src/modules/plain/malalgebra.mx"
VAR hashresult_oid := hashjoin( [oid](l), [oid](r.reverse).reverse );


#line 236 "/var/tmp/MonetDB/src/modules/plain/malalgebra.mx"
IF( not( isnil(hashresult_oid) ) ) {
  Ndiff := diff( result_oid, hashresult_oid ).count;
  printf( "Algorithm hash leads to %d different answers.\n", Ndiff );
  IF (Ndiff>0) Ntestfailed :+= 1;
}
Algorithm hash leads to 0 different answers.


#line 246 "/var/tmp/MonetDB/src/modules/plain/malalgebra.mx"


#line 236 "/var/tmp/MonetDB/src/modules/plain/malalgebra.mx"

#line 233 "/var/tmp/MonetDB/src/modules/plain/malalgebra.mx"
VAR fetchresult_oid := fetchjoin( [oid](l), [oid](r.reverse).reverse );


#line 236 "/var/tmp/MonetDB/src/modules/plain/malalgebra.mx"
IF( not( isnil(fetchresult_oid) ) ) {
  Ndiff := diff( result_oid, fetchresult_oid ).count;
  printf( "Algorithm fetch leads to %d different answers.\n", Ndiff );
  IF (Ndiff>0) Ntestfailed :+= 1;
}
Algorithm fetch leads to 0 different answers.


#line 247 "/var/tmp/MonetDB/src/modules/plain/malalgebra.mx"


#line 236 "/var/tmp/MonetDB/src/modules/plain/malalgebra.mx"

#line 233 "/var/tmp/MonetDB/src/modules/plain/malalgebra.mx"
VAR mergeresult_oid := mergejoin( [oid](l), [oid](r.reverse).reverse );


#line 236 "/var/tmp/MonetDB/src/modules/plain/malalgebra.mx"
IF( not( isnil(mergeresult_oid) ) ) {
  Ndiff := diff( result_oid, mergeresult_oid ).count;
  printf( "Algorithm merge leads to %d different answers.\n", Ndiff );
  IF (Ndiff>0) Ntestfailed :+= 1;
}
Algorithm merge leads to 0 different answers.


#line 248 "/var/tmp/MonetDB/src/modules/plain/malalgebra.mx"


#line 236 "/var/tmp/MonetDB/src/modules/plain/malalgebra.mx"

#line 233 "/var/tmp/MonetDB/src/modules/plain/malalgebra.mx"
VAR indexresult_oid := indexjoin( [oid](l), [oid](r.reverse).reverse );


#line 236 "/var/tmp/MonetDB/src/modules/plain/malalgebra.mx"
IF( not( isnil(indexresult_oid) ) ) {
  Ndiff := diff( result_oid, indexresult_oid ).count;
  printf( "Algorithm index leads to %d different answers.\n", Ndiff );
  IF (Ndiff>0) Ntestfailed :+= 1;
}
Algorithm index leads to 0 different answers.


#line 249 "/var/tmp/MonetDB/src/modules/plain/malalgebra.mx"



#line 230 "/var/tmp/MonetDB/src/modules/plain/malalgebra.mx"
VAR result_void := join( l, r );


#line 251 "/var/tmp/MonetDB/src/modules/plain/malalgebra.mx"


#line 236 "/var/tmp/MonetDB/src/modules/plain/malalgebra.mx"

#line 230 "/var/tmp/MonetDB/src/modules/plain/malalgebra.mx"
VAR hashresult_void := hashjoin( l, r );


#line 236 "/var/tmp/MonetDB/src/modules/plain/malalgebra.mx"
IF( not( isnil(hashresult_void) ) ) {
  Ndiff := diff( result_void, hashresult_void ).count;
  printf( "Algorithm hash leads to %d different answers.\n", Ndiff );
  IF (Ndiff>0) Ntestfailed :+= 1;
}
Algorithm hash leads to 0 different answers.


#line 252 "/var/tmp/MonetDB/src/modules/plain/malalgebra.mx"


#line 236 "/var/tmp/MonetDB/src/modules/plain/malalgebra.mx"

#line 230 "/var/tmp/MonetDB/src/modules/plain/malalgebra.mx"
VAR fetchresult_void := fetchjoin( l, r );


#line 236 "/var/tmp/MonetDB/src/modules/plain/malalgebra.mx"
IF( not( isnil(fetchresult_void) ) ) {
  Ndiff := diff( result_void, fetchresult_void ).count;
  printf( "Algorithm fetch leads to %d different answers.\n", Ndiff );
  IF (Ndiff>0) Ntestfailed :+= 1;
}
Algorithm fetch leads to 0 different answers.


#line 253 "/var/tmp/MonetDB/src/modules/plain/malalgebra.mx"


#line 236 "/var/tmp/MonetDB/src/modules/plain/malalgebra.mx"

#line 230 "/var/tmp/MonetDB/src/modules/plain/malalgebra.mx"
VAR mergeresult_void := mergejoin( l, r );
!ERROR: Cannot perform mergejoin on void fields.
!ERROR: CMDmergejoin: operation failed.


#line 236 "/var/tmp/MonetDB/src/modules/plain/malalgebra.mx"
IF( not( isnil(mergeresult_void) ) ) {
  Ndiff := diff( result_void, mergeresult_void ).count;
  printf( "Algorithm merge leads to %d different answers.\n", Ndiff );
  IF (Ndiff>0) Ntestfailed :+= 1;
}


#line 254 "/var/tmp/MonetDB/src/modules/plain/malalgebra.mx"


#line 236 "/var/tmp/MonetDB/src/modules/plain/malalgebra.mx"

#line 230 "/var/tmp/MonetDB/src/modules/plain/malalgebra.mx"
VAR indexresult_void := indexjoin( l, r );


#line 236 "/var/tmp/MonetDB/src/modules/plain/malalgebra.mx"
IF( not( isnil(indexresult_void) ) ) {
  Ndiff := diff( result_void, indexresult_void ).count;
  printf( "Algorithm index leads to %d different answers.\n", Ndiff );
  IF (Ndiff>0) Ntestfailed :+= 1;
}
Algorithm index leads to 0 different answers.


#line 255 "/var/tmp/MonetDB/src/modules/plain/malalgebra.mx"


printf( "RESULT: %d tests failed.\n", Ntestfailed );
RESULT: 0 tests failed.

quit;

# 17:06:12 >  
# 17:06:12 >  Done.
# 17:06:12 >  

