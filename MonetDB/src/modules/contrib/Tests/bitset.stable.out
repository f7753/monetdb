stdout of test 'bitset` in directory 'src/modules/contrib` itself:

#> Mtest (13:32:19):	other bitset 1200
#> Mtest (13:32:20):	Mtimeout -timeout 1200 ./bitset bitset
#> Mlog (13:32:20):	Mtimeout -timeout 600 Mserver -modulesilent -yaccsilent -d8 -db src_modules_plain bitset.mil
# Monet Database Server V4.2
# Copyright (c) 1993-1999, CWI & SION. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit.
#script:bitset.mil


# Monet Database Server V4.3.5
# Copyright (c) 1993-2002, CWI. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit; dynamically linked.

#line 417 "/var/tmp/MonetDB/src/modules/plain/bitset.mx"

module(bitset);
sigs("bitset");
#-------------------------------------------------#
# signature					  #
#-------------------------------------------------#
[ "bitset_and(bitset, bitset) : bitset"		  ]
[ "bitset_clearBit(bitset, int) : bitset"	  ]
[ "bitset_flipBit(bitset, int) : bitset"	  ]
[ "bitset_getBit(bitset, int) : bit"		  ]
[ "bitset_not(bitset) : bitset"			  ]
[ "bitset_or(bitset, bitset) : bitset"		  ]
[ "bitset_setBit(bitset, int) : bitset"		  ]
[ "bitset_toInt(bitset) : int"			  ]
[ "bitset_xor(bitset, bitset) : bitset"		  ]
[ "newBitset() : bitset"			  ]
[ "newBitset(int) : bitset"			  ]

printf("constructor\n");
constructor
b := newBitset();
b.print;
[ ffffffffffffffffffffffffffffffff ]

printf("get(15)\n");
get(15)
b.bitset_getBit(15).print;
[ false ]
printf("set(15)\n");
set(15)
b := b.bitset_setBit(15);
b.print;
[ fffffffffffffffftfffffffffffffff ]
printf("get(15)\n");
get(15)
b.bitset_getBit(15).print;
[ true ]
printf("clear(15)\n");
clear(15)
b := b.bitset_clearBit(15);
b.print;
[ ffffffffffffffffffffffffffffffff ]
printf("get(15)\n");
get(15)
b.bitset_getBit(15).print;
[ false ]

printf("flip(7)\n");
flip(7)
b := b.bitset_flipBit(7);
b.print;
[ fffffffffffffffffffffffftfffffff ]
printf("flip(7)\n");
flip(7)
b := b.bitset_flipBit(7);
b.print;
[ ffffffffffffffffffffffffffffffff ]

printf("constructor(35)\n");
constructor(35)
a := newBitset(35);
a.print;
[ fffffffffffffffffffffffffftffftt ]

printf("constructor(0x22)\n");
constructor(0x22)
b := bitset("0x22");
b.print;
[ fffffffffffffffffffffffffftffftf ]

printf("and\n");
and
bitset_and(a,b).print;
[ fffffffffffffffffffffffffftffftf ]
printf("or\n");
or
bitset_or(a,b).print;
[ fffffffffffffffffffffffffftffftt ]
printf("xor\n");
xor
bitset_xor(a,b).print;
[ ffffffffffffffffffffffffffffffft ]
printf("not\n");
not
bitset_not(a).print;
[ ttttttttttttttttttttttttttftttff ]

printf("convert to integer\n");
convert to integer
bitset_toInt(a).print;
[ 35 ]
 
quit;

# 17:05:31 >  
# 17:05:31 >  Done.
# 17:05:31 >  

