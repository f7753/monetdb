stdout of test 'server` in directory 'src/tools` itself:


# 16:56:06 >  
# 16:56:06 >  Mtimeout -timeout 60 Mserver "--config=/var/tmp/niels//SunOS-sun4u/etc/MonetDB.conf" --debug=10 --set "monet_mod_path=/var/tmp/niels//SunOS-sun4u/lib/MonetDB" --set "gdk_dbfarm=/var/tmp/niels//SunOS-sun4u/var/MonetDB/dbfarm" --set "sql_logdir=/var/tmp/niels//SunOS-sun4u/var/MonetDB/log" --set mapi_port=44339 --set sql_port=51380 --set monet_prompt= --trace --dbname=mTests_src_tools server.prelude < server.milM
# 16:56:06 >  

# Monet Database Server V4.4.1
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for sparc-sun-solaris2.8/64bit; dynamically linked.
# Visit http://monetdb.cwi.nl/ for further information.
Start of MIL prelude.
[ 0 ]
##------------------------------------------------------------------------#
## key   | put   | get  | wakeup  | enter | start | duration | action     #
##------------------------------------------------------------------------#
#-------------------------#
# gdk		bbp	  # name
# str		int	  # type
#-------------------------#
[ "bats",	  28	  ]
[ "tmpbats",	  28	  ]
[ "perbats",	  0	  ]
[ "ondisk",	  0	  ]
[ "todisk",	  0	  ]
[ "fromdisk",	  0	  ]
#---------------------------------#
# module		usage_count	  # name
# str		int		  # type
#---------------------------------#
[ "algebra",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "kernel",	  1		  ]
[ "main",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]
#-----------------------------------------------------------------------------------------#
# MIL Procedure										  # name
# str											  # type
#-----------------------------------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"						  ]
[ "ascii(str) : int"									  ]
[ "atoms() : void"									  ]
[ "avg(BAT[any,dbl]) : dbl"								  ]
[ "avg(BAT[any,flt]) : dbl"								  ]
[ "avg(BAT[any,int]) : dbl"								  ]
[ "avg(BAT[any,lng]) : dbl"								  ]
[ "avg(BAT[any,sht]) : dbl"								  ]
[ "bbp() : BAT[str,int]"								  ]
[ "capacity(BAT[any,any]) : lng"							  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"					  ]
[ "clients() : void"									  ]
[ "col_name(BAT[any::1,any::2], str) : BAT[any::1,any::2]"				  ]
[ "cold(BAT[any::1,any::2]) : void"							  ]
[ "count_no_nil(BAT[any,any]) : int"							  ]
[ "cpu() : BAT[str,int]"								  ]
[ "destroy(BAT[any,any]) : bit"								  ]
[ "destroy(str) : bit"									  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"			  ]
[ "dir() : void"									  ]
[ "dir(BAT[int,str]) : void"								  ]
[ "dir(str) : void"									  ]
[ "dir_leaks() : void"									  ]
[ "env() : void"									  ]
[ "environment() : BAT[str,str]"							  ]
[ "exit() : void"									  ]
[ "find_unescaped_occurrence(str, chr) : int"						  ]
[ "head(BAT[any,any]) : str"								  ]
[ "help() : void"									  ]
[ "help(str) : void"									  ]
[ "help_sig(oid) : void"								  ]
[ "help_tpe(int) : str"									  ]
[ "hot(BAT[any::1,any::2]) : void"							  ]
[ "htype(any) : int"									  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "io() : BAT[str,int]"									  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3]) : BAT[any::1,any::3]"			  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], lng, str, ..any..) : BAT[any::1,any::3]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"	  ]
[ "likeselect(BAT[any::1,str], str) : BAT[any::1,oid]"					  ]
[ "load(str) : BAT[any,any]"								  ]
[ "loaded() : void"									  ]
[ "locate(str, str) : int"								  ]
[ "locate(str, str, int) : int"								  ]
[ "ls() : void"										  ]
[ "ls(str) : void"									  ]
[ "madvise(BAT[any::1,any::2], int) : BAT[any::1,any::2]"				  ]
[ "mem_usage() : BAT[str,lng]"								  ]
[ "mem_usage(int) : BAT[str,lng]"							  ]
[ "memory() : BAT[str,int]"								  ]
[ "mil_select(BAT[any::1,any::2], str, ..any..) : BAT[any::1,any::2]"			  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"		  ]
[ "mmap(BAT[any::1,any::2], int) : BAT[any::1,any::2]"					  ]
[ "modules() : void"									  ]
[ "neg_select(BAT[any::1,any::2], str, ..any..) : BAT[any::1,any::2]"			  ]
[ "new(BAT[any,any], BAT[any,any], int) : BAT[any,any]"					  ]
[ "new(int, int) : BAT[any,any]"							  ]
[ "new(int, int, int) : BAT[any,any]"							  ]
[ "new(int, int, lng) : BAT[any,any]"							  ]
[ "outerjoin(BAT[any::1,any::2], BAT[any::2,any::3]) : BAT[any::1,any::3]"		  ]
[ "procs() : void"									  ]
[ "prod(BAT[any,dbl]) : dbl"								  ]
[ "prod(BAT[any,flt]) : flt"								  ]
[ "prod(BAT[any,int]) : int"								  ]
[ "prod(BAT[any,lng]) : lng"								  ]
[ "prod(BAT[any,sht]) : sht"								  ]
[ "project(BAT[any::1,any]) : BAT[any::1,void]"						  ]
[ "readonly(BAT[any::1,any::2]) : int"							  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"				  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"				  ]
[ "repeat(str, int) : str"								  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"			  ]
[ "save(BAT[any::1,any::2]) : BAT[any::1,any::2]"					  ]
[ "semijoin(BAT[any::1,any::2], BAT[any::1,any]) : BAT[any::1,any::2]"			  ]
[ "sigs(str) : void"									  ]
[ "sort_ht(BAT[any::1,any::2]) : BAT[any::1,any::2]"					  ]
[ "space(int) : str"									  ]
[ "stringinsert(str, int, int, str) : str"						  ]
[ "stringleft(str, int) : str"								  ]
[ "stringlength(str) : int"								  ]
[ "stringreplace(str, str, str) : str"							  ]
[ "stringright(str, int) : str"								  ]
[ "substring(str, int) : str"								  ]
[ "substring(str, int, int) : str"							  ]
[ "sum(BAT[any,dbl]) : dbl"								  ]
[ "sum(BAT[any,flt]) : flt"								  ]
[ "sum(BAT[any,int]) : int"								  ]
[ "sum(BAT[any,lng]) : lng"								  ]
[ "sum(BAT[any,sht]) : sht"								  ]
[ "tail(BAT[any,any]) : str"								  ]
[ "test_arith() : void"									  ]
[ "test_str() : void"									  ]
[ "threads() : void"									  ]
[ "ttype(any) : int"									  ]
[ "tunique(BAT[any,any::1]) : BAT[any::1,void]"						  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"			  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"					  ]
[ "vars() : void"									  ]
[ "vars(str) : void"									  ]
[ "vm_usage() : BAT[str,lng]"								  ]
[ "vm_usage(int) : BAT[str,lng]"							  ]
#-----------------------------------------------------------------------------------------#
# tmp_28			type	type_status	value_status	value_value		  # name
# str			str	str		str		str			  # type
#-----------------------------------------------------------------------------------------#
[ "BBPTRIM_ALL",	  "lng",  "frozen",	  "constant",	  "4611686018427387904"	  ]
[ "monet_environment",	  "BAT",  "frozen",	  "constant",	  "<monet_environment>"	  ]
[ "GE",			  "int",  "frozen",	  "constant",	  "2"			  ]
[ "GT",			  "int",  "frozen",	  "constant",	  "1"			  ]
[ "LE",			  "int",  "frozen",	  "constant",	  "-2"			  ]
[ "LT",			  "int",  "frozen",	  "constant",	  "-1"			  ]
[ "EQ",			  "int",  "frozen",	  "constant",	  "0"			  ]
[ "BAT_WRITE",		  "int",  "frozen",	  "constant",	  "0"			  ]
[ "BAT_APPEND",		  "int",  "frozen",	  "constant",	  "2"			  ]
[ "BAT_READ",		  "int",  "frozen",	  "constant",	  "1"			  ]
[ "BUF_DONTNEED",	  "int",  "frozen",	  "constant",	  "4"			  ]
[ "BUF_WILLNEED",	  "int",  "frozen",	  "constant",	  "3"			  ]
[ "BUF_SEQUENTIAL",	  "int",  "frozen",	  "constant",	  "2"			  ]
[ "BUF_RANDOM",		  "int",  "frozen",	  "constant",	  "1"			  ]
[ "BUF_NORMAL",		  "int",  "frozen",	  "constant",	  "0"			  ]
[ "STORE_COMPR",	  "int",  "frozen",	  "constant",	  "2"			  ]
[ "STORE_MMAP",		  "int",  "frozen",	  "constant",	  "1"			  ]
[ "STORE_MEM",		  "int",  "frozen",	  "constant",	  "0"			  ]
[ "monet_mod_var",	  "BAT",  "frozen",	  "constant",	  "<monet_mod_var>"	  ]
[ "monet_mod_use",	  "BAT",  "frozen",	  "constant",	  "<monet_mod_use>"	  ]
[ "monet_mod_proc",	  "BAT",  "frozen",	  "constant",	  "<monet_mod_proc>"	  ]
[ "monet_mod_nme",	  "BAT",  "frozen",	  "constant",	  "<monet_mod_nme>"	  ]
[ "monet_mod_load",	  "BAT",  "frozen",	  "constant",	  "<monet_mod_load>"	  ]
[ "monet_mod_hdl",	  "BAT",  "frozen",	  "constant",	  "<monet_mod_hdl>"	  ]
[ "monet_mod_drop",	  "BAT",  "frozen",	  "constant",	  "<monet_mod_drop>"	  ]
[ "monet_mod_dep",	  "BAT",  "frozen",	  "constant",	  "<monet_mod_dep>"	  ]
[ "monet_mod_cnt",	  "BAT",  "frozen",	  "constant",	  "<monet_mod_cnt>"	  ]
[ "monet_mod_atm",	  "BAT",  "frozen",	  "constant",	  "<monet_mod_atm>"	  ]
[ "monet_mod_acc",	  "BAT",  "frozen",	  "constant",	  "<monet_mod_acc>"	  ]
[ "monet_fcn_tpe",	  "BAT",  "frozen",	  "constant",	  "<monet_fcn_tpe>"	  ]
[ "monet_fcn_sig",	  "BAT",  "frozen",	  "constant",	  "<monet_fcn_sig>"	  ]
[ "monet_fcn_pro",	  "BAT",  "frozen",	  "constant",	  "<monet_fcn_pro>"	  ]
[ "monet_fcn_nme",	  "BAT",  "frozen",	  "constant",	  "<monet_fcn_nme>"	  ]
[ "monet_fcn_mid",	  "BAT",  "frozen",	  "constant",	  "<monet_fcn_mid>"	  ]
[ "monet_fcn_imp",	  "BAT",  "frozen",	  "constant",	  "<monet_fcn_imp>"	  ]
[ "monet_fcn_fcn",	  "BAT",  "frozen",	  "constant",	  "<monet_fcn_fcn>"	  ]
[ "monet_fcn_dsc",	  "BAT",  "frozen",	  "constant",	  "<monet_fcn_dsc>"	  ]
[ "monet_fcn_dat",	  "BAT",  "frozen",	  "constant",	  "<monet_fcn_dat>"	  ]
[ "monet_fcn_cnt",	  "BAT",  "frozen",	  "constant",	  "<monet_fcn_cnt>"	  ]
[ "monet_fcn_aut",	  "BAT",  "frozen",	  "constant",	  "<monet_fcn_aut>"	  ]
[ "monet_unicode_case",	  "BAT",  "frozen",	  "constant",	  "<monet_unicode_case>"  ]
[ "LNG_MIN",		  "lng",  "frozen",	  "constant",	  "-9223372036854775807"  ]
[ "LNG_MAX",		  "lng",  "frozen",	  "constant",	  "9223372036854775807"	  ]
[ "INT_MIN",		  "int",  "frozen",	  "constant",	  "-2147483647"		  ]
[ "INT_MAX",		  "int",  "frozen",	  "constant",	  "2147483647"		  ]
[ "SHT_MIN",		  "sht",  "frozen",	  "constant",	  "-32767"		  ]
[ "SHT_MAX",		  "sht",  "frozen",	  "constant",	  "32767"		  ]
[ "CHR_MIN",		  "chr",  "frozen",	  "constant",	  ""			  ]
[ "CHR_MAX",		  "chr",  "frozen",	  "constant",	  ""			  ]
[ "RAND_MAX",		  "int",  "frozen",	  "constant",	  "32767"		  ]
[ "TOK_OBJECT",		  "int",  "frozen",	  "constant",	  "294"			  ]
[ "TOK_ITERATOR",	  "int",  "frozen",	  "constant",	  "270"			  ]
[ "TOK_COMMAND",	  "int",  "frozen",	  "constant",	  "285"			  ]
[ "TOK_OPERATOR",	  "int",  "frozen",	  "constant",	  "287"			  ]
[ "TOK_PROC",		  "int",  "frozen",	  "constant",	  "283"			  ]
[ "TOK_BUILTIN",	  "int",  "frozen",	  "constant",	  "277"			  ]
[ "monet_atomtbl",	  "BAT",  "frozen",	  "constant",	  "<adm_atomtbl>"	  ]
[ "monet_acctbl",	  "BAT",  "frozen",	  "constant",	  "<adm_acctbl>"	  ]
[ "monet_fcntbl",	  "BAT",  "frozen",	  "constant",	  "<adm_fcntbl>"	  ]
#-----------------#
# bbp	kind	  # name
# int	str	  # type
#-----------------#
[ 1,	  "tran"  ]
[ 2,	  "tran"  ]
[ 3,	  "tran"  ]
[ 4,	  "tran"  ]
[ 5,	  "tran"  ]
[ 6,	  "tran"  ]
[ 7,	  "tran"  ]
[ 8,	  "tran"  ]
[ 9,	  "tran"  ]
[ 10,	  "tran"  ]
[ 11,	  "tran"  ]
[ 12,	  "tran"  ]
[ 13,	  "tran"  ]
[ 14,	  "tran"  ]
[ 15,	  "tran"  ]
[ 16,	  "tran"  ]
[ 17,	  "tran"  ]
[ 18,	  "tran"  ]
[ 19,	  "tran"  ]
[ 20,	  "tran"  ]
[ 21,	  "tran"  ]
[ 22,	  "tran"  ]
[ 23,	  "tran"  ]
[ 24,	  "tran"  ]
[ 25,	  "tran"  ]
[ 26,	  "tran"  ]
[ 27,	  "tran"  ]
#-------------------------#
# bbp	location		  # name
# int	str		  # type
#-------------------------#
[ 1,	  "1"		  ]
[ 2,	  "2"		  ]
[ 3,	  "3"		  ]
[ 4,	  "4"		  ]
[ 5,	  "5"		  ]
[ 6,	  "6"		  ]
[ 7,	  "7"		  ]
[ 8,	  "8"		  ]
[ 9,	  "9"		  ]
[ 10,	  "10"		  ]
[ 11,	  "11"		  ]
[ 12,	  "12"		  ]
[ 13,	  "13"		  ]
[ 14,	  "14"		  ]
[ 15,	  "15"		  ]
[ 16,	  "16"		  ]
[ 17,	  "17"		  ]
[ 18,	  "18"		  ]
[ 19,	  "19"		  ]
[ 20,	  "20"		  ]
[ 21,	  "21"		  ]
[ 22,	  "22"		  ]
[ 23,	  "23"		  ]
[ 24,	  "24"		  ]
[ 25,	  "25"		  ]
[ 26,	  "26"		  ]
[ 27,	  "27"		  ]
#---------------------------------#
# bbp	name			  # name
# int	str			  # type
#---------------------------------#
[ 1,	  "monet_environment"	  ]
[ 2,	  "monet_fcn_fcn"	  ]
[ 3,	  "monet_fcn_imp"	  ]
[ 4,	  "monet_fcn_tpe"	  ]
[ 5,	  "monet_fcn_mid"	  ]
[ 6,	  "monet_fcn_sig"	  ]
[ 7,	  "monet_fcn_dsc"	  ]
[ 8,	  "monet_fcn_aut"	  ]
[ 9,	  "monet_fcn_dat"	  ]
[ 10,	  "monet_fcn_nme"	  ]
[ 11,	  "monet_fcn_pro"	  ]
[ 12,	  "monet_fcn_cnt"	  ]
[ 13,	  "monet_mod_nme"	  ]
[ 14,	  "monet_mod_cnt"	  ]
[ 15,	  "monet_mod_atm"	  ]
[ 16,	  "monet_mod_acc"	  ]
[ 17,	  "monet_mod_hdl"	  ]
[ 18,	  "monet_mod_dep"	  ]
[ 19,	  "monet_mod_use"	  ]
[ 20,	  "monet_mod_load"	  ]
[ 21,	  "monet_mod_drop"	  ]
[ 22,	  "monet_mod_proc"	  ]
[ 23,	  "monet_mod_var"	  ]
[ 24,	  "adm_fcntbl"		  ]
[ 25,	  "adm_acctbl"		  ]
[ 26,	  "adm_atomtbl"		  ]
[ 27,	  "monet_unicode_case"	  ]
#-----------------#
# bbp	refcnt	  # name
# int	int	  # type
#-----------------#
[ 1,	  1	  ]
[ 2,	  1	  ]
[ 3,	  1	  ]
[ 4,	  1	  ]
[ 5,	  1	  ]
[ 6,	  1	  ]
[ 7,	  1	  ]
[ 8,	  1	  ]
[ 9,	  1	  ]
[ 10,	  1	  ]
[ 11,	  1	  ]
[ 12,	  1	  ]
[ 13,	  1	  ]
[ 14,	  1	  ]
[ 15,	  1	  ]
[ 16,	  1	  ]
[ 17,	  1	  ]
[ 18,	  1	  ]
[ 19,	  1	  ]
[ 20,	  1	  ]
[ 21,	  1	  ]
[ 22,	  1	  ]
[ 23,	  1	  ]
[ 24,	  1	  ]
[ 25,	  1	  ]
[ 26,	  1	  ]
[ 27,	  1	  ]
#-----------------#
# bbp	status	  # name
# int	str	  # type
#-----------------#
[ 1,	  "load"  ]
[ 2,	  "load"  ]
[ 3,	  "load"  ]
[ 4,	  "load"  ]
[ 5,	  "load"  ]
[ 6,	  "load"  ]
[ 7,	  "load"  ]
[ 8,	  "load"  ]
[ 9,	  "load"  ]
[ 10,	  "load"  ]
[ 11,	  "load"  ]
[ 12,	  "load"  ]
[ 13,	  "load"  ]
[ 14,	  "load"  ]
[ 15,	  "load"  ]
[ 16,	  "load"  ]
[ 17,	  "load"  ]
[ 18,	  "load"  ]
[ 19,	  "load"  ]
[ 20,	  "load"  ]
[ 21,	  "load"  ]
[ 22,	  "load"  ]
[ 23,	  "load"  ]
[ 24,	  "load"  ]
[ 25,	  "load"  ]
[ 26,	  "load"  ]
[ 27,	  "load"  ]
#-------------------------------------------------------------------------------------------------#
# client	tree											  # name
# int	str											  # type
#-------------------------------------------------------------------------------------------------#
[ 0,	  ""											  ]
[ 1,	  "setoid(oid(10000000));printf(\"Start of MIL prelude.\\n\");print(clientid());qstat"	  ]
#-------------------------#
# gdk		bbp	  # name
# str		int	  # type
#-------------------------#
[ "bats",	  28	  ]
[ "tmpbats",	  28	  ]
[ "perbats",	  0	  ]
[ "ondisk",	  0	  ]
[ "todisk",	  0	  ]
[ "fromdisk",	  0	  ]
#-----------------------------------------#
# t			tmp_34		  # name
# str			str		  # type
#-----------------------------------------#
[ "BBPTRIM_ALL",	  "constant"	  ]
[ "monet_environment",	  "constant"	  ]
[ "GE",			  "constant"	  ]
[ "GT",			  "constant"	  ]
[ "LE",			  "constant"	  ]
[ "LT",			  "constant"	  ]
[ "EQ",			  "constant"	  ]
[ "BAT_WRITE",		  "constant"	  ]
[ "BAT_APPEND",		  "constant"	  ]
[ "BAT_READ",		  "constant"	  ]
[ "BUF_DONTNEED",	  "constant"	  ]
[ "BUF_WILLNEED",	  "constant"	  ]
[ "BUF_SEQUENTIAL",	  "constant"	  ]
[ "BUF_RANDOM",		  "constant"	  ]
[ "BUF_NORMAL",		  "constant"	  ]
[ "STORE_COMPR",	  "constant"	  ]
[ "STORE_MMAP",		  "constant"	  ]
[ "STORE_MEM",		  "constant"	  ]
[ "monet_mod_var",	  "constant"	  ]
[ "monet_mod_use",	  "constant"	  ]
[ "monet_mod_proc",	  "constant"	  ]
[ "monet_mod_nme",	  "constant"	  ]
[ "monet_mod_load",	  "constant"	  ]
[ "monet_mod_hdl",	  "constant"	  ]
[ "monet_mod_drop",	  "constant"	  ]
[ "monet_mod_dep",	  "constant"	  ]
[ "monet_mod_cnt",	  "constant"	  ]
[ "monet_mod_atm",	  "constant"	  ]
[ "monet_mod_acc",	  "constant"	  ]
[ "monet_fcn_tpe",	  "constant"	  ]
[ "monet_fcn_sig",	  "constant"	  ]
[ "monet_fcn_pro",	  "constant"	  ]
[ "monet_fcn_nme",	  "constant"	  ]
[ "monet_fcn_mid",	  "constant"	  ]
[ "monet_fcn_imp",	  "constant"	  ]
[ "monet_fcn_fcn",	  "constant"	  ]
[ "monet_fcn_dsc",	  "constant"	  ]
[ "monet_fcn_dat",	  "constant"	  ]
[ "monet_fcn_cnt",	  "constant"	  ]
[ "monet_fcn_aut",	  "constant"	  ]
[ "monet_unicode_case",	  "constant"	  ]
[ "LNG_MIN",		  "constant"	  ]
[ "LNG_MAX",		  "constant"	  ]
[ "INT_MIN",		  "constant"	  ]
[ "INT_MAX",		  "constant"	  ]
[ "SHT_MIN",		  "constant"	  ]
[ "SHT_MAX",		  "constant"	  ]
[ "CHR_MIN",		  "constant"	  ]
[ "CHR_MAX",		  "constant"	  ]
[ "RAND_MAX",		  "constant"	  ]
[ "TOK_OBJECT",		  "constant"	  ]
[ "TOK_ITERATOR",	  "constant"	  ]
[ "TOK_COMMAND",	  "constant"	  ]
[ "TOK_OPERATOR",	  "constant"	  ]
[ "TOK_PROC",		  "constant"	  ]
[ "TOK_BUILTIN",	  "constant"	  ]
[ "monet_atomtbl",	  "constant"	  ]
[ "monet_acctbl",	  "constant"	  ]
[ "monet_fcntbl",	  "constant"	  ]
#-----------------------------------------#
# t			tmp_36		  # name
# str			str		  # type
#-----------------------------------------#
[ "BBPTRIM_ALL",	  "frozen"	  ]
[ "monet_environment",	  "frozen"	  ]
[ "GE",			  "frozen"	  ]
[ "GT",			  "frozen"	  ]
[ "LE",			  "frozen"	  ]
[ "LT",			  "frozen"	  ]
[ "EQ",			  "frozen"	  ]
[ "BAT_WRITE",		  "frozen"	  ]
[ "BAT_APPEND",		  "frozen"	  ]
[ "BAT_READ",		  "frozen"	  ]
[ "BUF_DONTNEED",	  "frozen"	  ]
[ "BUF_WILLNEED",	  "frozen"	  ]
[ "BUF_SEQUENTIAL",	  "frozen"	  ]
[ "BUF_RANDOM",		  "frozen"	  ]
[ "BUF_NORMAL",		  "frozen"	  ]
[ "STORE_COMPR",	  "frozen"	  ]
[ "STORE_MMAP",		  "frozen"	  ]
[ "STORE_MEM",		  "frozen"	  ]
[ "monet_mod_var",	  "frozen"	  ]
[ "monet_mod_use",	  "frozen"	  ]
[ "monet_mod_proc",	  "frozen"	  ]
[ "monet_mod_nme",	  "frozen"	  ]
[ "monet_mod_load",	  "frozen"	  ]
[ "monet_mod_hdl",	  "frozen"	  ]
[ "monet_mod_drop",	  "frozen"	  ]
[ "monet_mod_dep",	  "frozen"	  ]
[ "monet_mod_cnt",	  "frozen"	  ]
[ "monet_mod_atm",	  "frozen"	  ]
[ "monet_mod_acc",	  "frozen"	  ]
[ "monet_fcn_tpe",	  "frozen"	  ]
[ "monet_fcn_sig",	  "frozen"	  ]
[ "monet_fcn_pro",	  "frozen"	  ]
[ "monet_fcn_nme",	  "frozen"	  ]
[ "monet_fcn_mid",	  "frozen"	  ]
[ "monet_fcn_imp",	  "frozen"	  ]
[ "monet_fcn_fcn",	  "frozen"	  ]
[ "monet_fcn_dsc",	  "frozen"	  ]
[ "monet_fcn_dat",	  "frozen"	  ]
[ "monet_fcn_cnt",	  "frozen"	  ]
[ "monet_fcn_aut",	  "frozen"	  ]
[ "monet_unicode_case",	  "frozen"	  ]
[ "LNG_MIN",		  "frozen"	  ]
[ "LNG_MAX",		  "frozen"	  ]
[ "INT_MIN",		  "frozen"	  ]
[ "INT_MAX",		  "frozen"	  ]
[ "SHT_MIN",		  "frozen"	  ]
[ "SHT_MAX",		  "frozen"	  ]
[ "CHR_MIN",		  "frozen"	  ]
[ "CHR_MAX",		  "frozen"	  ]
[ "RAND_MAX",		  "frozen"	  ]
[ "TOK_OBJECT",		  "frozen"	  ]
[ "TOK_ITERATOR",	  "frozen"	  ]
[ "TOK_COMMAND",	  "frozen"	  ]
[ "TOK_OPERATOR",	  "frozen"	  ]
[ "TOK_PROC",		  "frozen"	  ]
[ "TOK_BUILTIN",	  "frozen"	  ]
[ "monet_atomtbl",	  "frozen"	  ]
[ "monet_acctbl",	  "frozen"	  ]
[ "monet_fcntbl",	  "frozen"	  ]
#---------------------------------#
# t			tmp_34	  # name
# str			str	  # type
#---------------------------------#
[ "BBPTRIM_ALL",	  "lng"	  ]
[ "monet_environment",	  "BAT"	  ]
[ "GE",			  "int"	  ]
[ "GT",			  "int"	  ]
[ "LE",			  "int"	  ]
[ "LT",			  "int"	  ]
[ "EQ",			  "int"	  ]
[ "BAT_WRITE",		  "int"	  ]
[ "BAT_APPEND",		  "int"	  ]
[ "BAT_READ",		  "int"	  ]
[ "BUF_DONTNEED",	  "int"	  ]
[ "BUF_WILLNEED",	  "int"	  ]
[ "BUF_SEQUENTIAL",	  "int"	  ]
[ "BUF_RANDOM",		  "int"	  ]
[ "BUF_NORMAL",		  "int"	  ]
[ "STORE_COMPR",	  "int"	  ]
[ "STORE_MMAP",		  "int"	  ]
[ "STORE_MEM",		  "int"	  ]
[ "monet_mod_var",	  "BAT"	  ]
[ "monet_mod_use",	  "BAT"	  ]
[ "monet_mod_proc",	  "BAT"	  ]
[ "monet_mod_nme",	  "BAT"	  ]
[ "monet_mod_load",	  "BAT"	  ]
[ "monet_mod_hdl",	  "BAT"	  ]
[ "monet_mod_drop",	  "BAT"	  ]
[ "monet_mod_dep",	  "BAT"	  ]
[ "monet_mod_cnt",	  "BAT"	  ]
[ "monet_mod_atm",	  "BAT"	  ]
[ "monet_mod_acc",	  "BAT"	  ]
[ "monet_fcn_tpe",	  "BAT"	  ]
[ "monet_fcn_sig",	  "BAT"	  ]
[ "monet_fcn_pro",	  "BAT"	  ]
[ "monet_fcn_nme",	  "BAT"	  ]
[ "monet_fcn_mid",	  "BAT"	  ]
[ "monet_fcn_imp",	  "BAT"	  ]
[ "monet_fcn_fcn",	  "BAT"	  ]
[ "monet_fcn_dsc",	  "BAT"	  ]
[ "monet_fcn_dat",	  "BAT"	  ]
[ "monet_fcn_cnt",	  "BAT"	  ]
[ "monet_fcn_aut",	  "BAT"	  ]
[ "monet_unicode_case",	  "BAT"	  ]
[ "LNG_MIN",		  "lng"	  ]
[ "LNG_MAX",		  "lng"	  ]
[ "INT_MIN",		  "int"	  ]
[ "INT_MAX",		  "int"	  ]
[ "SHT_MIN",		  "sht"	  ]
[ "SHT_MAX",		  "sht"	  ]
[ "CHR_MIN",		  "chr"	  ]
[ "CHR_MAX",		  "chr"	  ]
[ "RAND_MAX",		  "int"	  ]
[ "TOK_OBJECT",		  "int"	  ]
[ "TOK_ITERATOR",	  "int"	  ]
[ "TOK_COMMAND",	  "int"	  ]
[ "TOK_OPERATOR",	  "int"	  ]
[ "TOK_PROC",		  "int"	  ]
[ "TOK_BUILTIN",	  "int"	  ]
[ "monet_atomtbl",	  "BAT"	  ]
[ "monet_acctbl",	  "BAT"	  ]
[ "monet_fcntbl",	  "BAT"	  ]
#-----------------------------------------------------------------------------------------------------------------#
# name			htype	ttype	count	heat	dirty		status	kind	refcnt	lrefcnt		  # name
# str			str	str	lng	int	str		str	str	int	int		  # type
#-----------------------------------------------------------------------------------------------------------------#
[ "adm_acctbl",		  "str",  "int",  2,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "adm_atomtbl",	  "str",  "int",  13,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "adm_fcntbl",		  "str",  "oid",  674,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_environment",	  "str",  "str",  29,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_fcn_aut",	  "oid",  "str",  614,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_fcn_cnt",	  "oid",  "int",  674,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_fcn_dat",	  "oid",  "str",  614,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_fcn_dsc",	  "oid",  "str",  614,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_fcn_fcn",	  "oid",  "ptr",  573,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_fcn_imp",	  "oid",  "ptr",  674,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_fcn_mid",	  "oid",  "oid",  614,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_fcn_nme",	  "oid",  "str",  674,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_fcn_pro",	  "oid",  "str",  1672,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_fcn_sig",	  "oid",  "str",  39,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_fcn_tpe",	  "oid",  "int",  674,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_mod_acc",	  "oid",  "str",  0,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_mod_atm",	  "oid",  "str",  0,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_mod_cnt",	  "oid",  "int",  15,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_mod_dep",	  "oid",  "str",  7,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_mod_drop",	  "oid",  "int",  0,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_mod_hdl",	  "oid",  "ptr",  7,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_mod_load",	  "oid",  "str",  0,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_mod_nme",	  "oid",  "str",  15,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_mod_proc",	  "str",  "oid",  101,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_mod_use",	  "oid",  "int",  15,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_mod_var",	  "str",  "ptr",  50,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_unicode_case",	  "int",  "int",  732,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
#-------------------------------------------------------------------------------------------------#
# name	htype	ttype	count	heat	dirty		status	kind	refcnt	lrefcnt		  # name
# str	str	str	lng	int	str		str	str	int	int		  # type
#-------------------------------------------------------------------------------------------------#
#-----------------#
# bbp	heat	  # name
# int	int	  # type
#-----------------#
[ 1,	  0	  ]
[ 2,	  0	  ]
[ 3,	  0	  ]
[ 4,	  0	  ]
[ 5,	  0	  ]
[ 6,	  0	  ]
[ 7,	  0	  ]
[ 8,	  0	  ]
[ 9,	  0	  ]
[ 10,	  0	  ]
[ 11,	  0	  ]
[ 12,	  0	  ]
[ 13,	  0	  ]
[ 14,	  0	  ]
[ 15,	  0	  ]
[ 16,	  0	  ]
[ 17,	  0	  ]
[ 18,	  0	  ]
[ 19,	  0	  ]
[ 20,	  0	  ]
[ 21,	  0	  ]
[ 22,	  0	  ]
[ 23,	  0	  ]
[ 24,	  0	  ]
[ 25,	  0	  ]
[ 26,	  0	  ]
[ 27,	  0	  ]
#~BeginVariableOutput~#
[ 10 ]
##------------------------------------------------------------------#
## req      | tid      | status   | wakeup | action                 #
##------------------------------------------------------------------#
#[      1,         0,         1,         0, "unknown(0)#"                   ]
#[      0,         1,   running,         1, "source("/scratch/niels/Su#"    ]
[ 1 ]
#-----------------------------------------------------------------------------------------------------------------------------------------#
# client	name	login				tree											  # name
# int	str	str				str											  # type
#-----------------------------------------------------------------------------------------------------------------------------------------#
[ 0,	  "adm",  "Wed Oct 27 22:14:39 2004",	  "clients()"										  ]
[ 1,	  "adm",  "Wed Oct 27 22:14:39 2004",	  "setoid(oid(10000000));printf(\"Start of MIL prelude.\\n\");print(clientid());qstat"	  ]
#-------------------------#
# gdk		cpu	  # name
# str		int	  # type
#-------------------------#
[ "elapsed",	  0	  ]
[ "user",	  590	  ]
[ "elapuser",	  0	  ]
[ "system",	  100	  ]
[ "elapsystem",	  0	  ]
#---------------------------------------------------------------------------------#
# h			monet_environment					  # name
# str			str							  # type
#---------------------------------------------------------------------------------#
[ "config",		  "/local/home/monet//IRIX64-IP27/etc/MonetDB.conf"	  ]
[ "gdk_arch",		  "64bitmips-sgi-irix6.5"				  ]
[ "gdk_version",	  "4.5.0"						  ]
[ "monet_pid",		  "81591507"						  ]
[ "prefix",		  "/local/home/monet//IRIX64-IP27"			  ]
[ "exec_prefix",	  "/local/home/monet//IRIX64-IP27"			  ]
[ "gdk_dbname",		  "mTests_src_tools"					  ]
[ "gdk_dbfarm",		  "/local/home/monet//IRIX64-IP27/var/MonetDB/dbfarm"	  ]
[ "gdk_debug",		  "10"							  ]
[ "gdk_mem_bigsize",	  "33554432"						  ]
[ "gdk_vm_minsize",	  "134217728"						  ]
[ "gdk_alloc_map",	  "yes"							  ]
[ "monet_admin",	  "adm"							  ]
[ "monet_prompt",	  ""							  ]
[ "monet_welcome",	  "yes"							  ]
[ "monet_nostalgic",	  "no"							  ]
[ "monet_mod_path",	  "/local/home/monet//IRIX64-IP27/lib/MonetDB"		  ]
[ "monet_daemon",	  "no"							  ]
[ "host",		  "localhost"						  ]
[ "mapi_port",		  "40408"						  ]
[ "mapi_noheaders",	  "no"							  ]
[ "mapi_debug",		  "0"							  ]
[ "sql_port",		  "51287"						  ]
[ "sql_debug",		  "0"							  ]
[ "sql_user",		  "monetdb"						  ]
[ "sql_schema",		  "sys"							  ]
[ "sql_logdir",		  "/local/home/monet//IRIX64-IP27/var/MonetDB/log"	  ]
[ "gdk_embedded",	  "no"							  ]
[ "monet_cwd",		  "/local/home/monet/IRIX64-IP27/mTests/src/tools"	  ]
#---------------------------------------------------------------------------------#
# h			monet_environment					  # name
# str			str							  # type
#---------------------------------------------------------------------------------#
[ "config",		  "/local/home/monet//IRIX64-IP27/etc/MonetDB.conf"	  ]
[ "gdk_arch",		  "64bitmips-sgi-irix6.5"				  ]
[ "gdk_version",	  "4.5.0"						  ]
[ "monet_pid",		  "81591507"						  ]
[ "prefix",		  "/local/home/monet//IRIX64-IP27"			  ]
[ "exec_prefix",	  "/local/home/monet//IRIX64-IP27"			  ]
[ "gdk_dbname",		  "mTests_src_tools"					  ]
[ "gdk_dbfarm",		  "/local/home/monet//IRIX64-IP27/var/MonetDB/dbfarm"	  ]
[ "gdk_debug",		  "10"							  ]
[ "gdk_mem_bigsize",	  "33554432"						  ]
[ "gdk_vm_minsize",	  "134217728"						  ]
[ "gdk_alloc_map",	  "yes"							  ]
[ "monet_admin",	  "adm"							  ]
[ "monet_prompt",	  ""							  ]
[ "monet_welcome",	  "yes"							  ]
[ "monet_nostalgic",	  "no"							  ]
[ "monet_mod_path",	  "/local/home/monet//IRIX64-IP27/lib/MonetDB"		  ]
[ "monet_daemon",	  "no"							  ]
[ "host",		  "localhost"						  ]
[ "mapi_port",		  "40408"						  ]
[ "mapi_noheaders",	  "no"							  ]
[ "mapi_debug",		  "0"							  ]
[ "sql_port",		  "51287"						  ]
[ "sql_debug",		  "0"							  ]
[ "sql_user",		  "monetdb"						  ]
[ "sql_schema",		  "sys"							  ]
[ "sql_logdir",		  "/local/home/monet//IRIX64-IP27/var/MonetDB/log"	  ]
[ "gdk_embedded",	  "no"							  ]
[ "monet_cwd",		  "/local/home/monet/IRIX64-IP27/mTests/src/tools"	  ]
#-------------------------#
# gdk		io	  # name
# str		int	  # type
#-------------------------#
[ "maxrss",	  5760	  ]
[ "minflt",	  245	  ]
[ "majflt",	  0	  ]
[ "nswap",	  0	  ]
[ "inblock",	  3	  ]
[ "oublock",	  0	  ]
[ "nvcsw",	  1	  ]
[ "ninvcsw",	  1	  ]
#---------------------------------#
# gdk		mem		  # name
# str		int		  # type
#---------------------------------#
[ "memincr",	  2908160	  ]
[ "arena",	  2965472	  ]
[ "ordblks",	  10177		  ]
[ "smblks",	  3900		  ]
[ "hblkhd",	  1872		  ]
[ "hblks",	  39		  ]
[ "usmblks",	  114992	  ]
[ "fsmblks",	  9808		  ]
[ "uordblks",	  2590832	  ]
[ "fordblks",	  247968	  ]
#-------------------------#
# gdk	thread		  # name
# int	str		  # type
#-------------------------#
[ 1,	  "Interpreter"	  ]
#-----------------------------------------#
# client	login				  # name
# int	str				  # type
#-----------------------------------------#
[ 0,	  "Wed Oct 27 22:14:39 2004"	  ]
[ 1,	  "Wed Oct 27 22:14:39 2004"	  ]
#-----------------#
# client	name	  # name
# int	str	  # type
#-----------------#
[ 0,	  "adm"	  ]
[ 1,	  "adm"	  ]
#-------------------------#
# gdk		cpu	  # name
# str		int	  # type
#-------------------------#
[ "elapsed",	  0	  ]
[ "user",	  600	  ]
[ "elapuser",	  10	  ]
[ "system",	  100	  ]
[ "elapsystem",	  0	  ]
#---------------------------------------------------------------------------------#
# h			monet_environment					  # name
# str			str							  # type
#---------------------------------------------------------------------------------#
[ "config",		  "/local/home/monet//IRIX64-IP27/etc/MonetDB.conf"	  ]
[ "gdk_arch",		  "64bitmips-sgi-irix6.5"				  ]
[ "gdk_version",	  "4.5.0"						  ]
[ "monet_pid",		  "81591507"						  ]
[ "prefix",		  "/local/home/monet//IRIX64-IP27"			  ]
[ "exec_prefix",	  "/local/home/monet//IRIX64-IP27"			  ]
[ "gdk_dbname",		  "mTests_src_tools"					  ]
[ "gdk_dbfarm",		  "/local/home/monet//IRIX64-IP27/var/MonetDB/dbfarm"	  ]
[ "gdk_debug",		  "10"							  ]
[ "gdk_mem_bigsize",	  "33554432"						  ]
[ "gdk_vm_minsize",	  "134217728"						  ]
[ "gdk_alloc_map",	  "yes"							  ]
[ "monet_admin",	  "adm"							  ]
[ "monet_prompt",	  ""							  ]
[ "monet_welcome",	  "yes"							  ]
[ "monet_nostalgic",	  "no"							  ]
[ "monet_mod_path",	  "/local/home/monet//IRIX64-IP27/lib/MonetDB"		  ]
[ "monet_daemon",	  "no"							  ]
[ "host",		  "localhost"						  ]
[ "mapi_port",		  "40408"						  ]
[ "mapi_noheaders",	  "no"							  ]
[ "mapi_debug",		  "0"							  ]
[ "sql_port",		  "51287"						  ]
[ "sql_debug",		  "0"							  ]
[ "sql_user",		  "monetdb"						  ]
[ "sql_schema",		  "sys"							  ]
[ "sql_logdir",		  "/local/home/monet//IRIX64-IP27/var/MonetDB/log"	  ]
[ "gdk_embedded",	  "no"							  ]
[ "monet_cwd",		  "/local/home/monet/IRIX64-IP27/mTests/src/tools"	  ]
#-------------------------#
# gdk		io	  # name
# str		int	  # type
#-------------------------#
[ "maxrss",	  5760	  ]
[ "minflt",	  245	  ]
[ "majflt",	  0	  ]
[ "nswap",	  0	  ]
[ "inblock",	  3	  ]
[ "oublock",	  0	  ]
[ "nvcsw",	  1	  ]
[ "ninvcsw",	  1	  ]
#---------------------------------#
# gdk		mem		  # name
# str		int		  # type
#---------------------------------#
[ "memincr",	  8192		  ]
[ "arena",	  2973664	  ]
[ "ordblks",	  10199		  ]
[ "smblks",	  3900		  ]
[ "hblkhd",	  1872		  ]
[ "hblks",	  39		  ]
[ "usmblks",	  115056	  ]
[ "fsmblks",	  9744		  ]
[ "uordblks",	  2600352	  ]
[ "fordblks",	  246640	  ]
#-------------------------#
# gdk	thread		  # name
# int	str		  # type
#-------------------------#
[ 1,	  "Interpreter"	  ]
#~EndVariableOutput~#
End of MIL prelude.
setoid(oid(20000000));

printf("Start of MIL script.\n");
Start of MIL script.

clientid().print();
[ 0 ]
qstat();
##------------------------------------------------------------------------#
## key   | put   | get  | wakeup  | enter | start | duration | action     #
##------------------------------------------------------------------------#

bbp().print();
#-------------------------#
# gdk		bbp	  # name
# str		int	  # type
#-------------------------#
[ "bats",	  28	  ]
[ "tmpbats",	  28	  ]
[ "perbats",	  0	  ]
[ "ondisk",	  0	  ]
[ "todisk",	  0	  ]
[ "fromdisk",	  0	  ]
loaded();
#---------------------------------#
# module		usage_count	  # name
# str		int		  # type
#---------------------------------#
[ "algebra",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "kernel",	  1		  ]
[ "main",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]
procs();
#-----------------------------------------------------------------------------------------#
# MIL Procedure										  # name
# str											  # type
#-----------------------------------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"						  ]
[ "ascii(str) : int"									  ]
[ "atoms() : void"									  ]
[ "avg(BAT[any,dbl]) : dbl"								  ]
[ "avg(BAT[any,flt]) : dbl"								  ]
[ "avg(BAT[any,int]) : dbl"								  ]
[ "avg(BAT[any,lng]) : dbl"								  ]
[ "avg(BAT[any,sht]) : dbl"								  ]
[ "bbp() : BAT[str,int]"								  ]
[ "capacity(BAT[any,any]) : lng"							  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"					  ]
[ "clients() : void"									  ]
[ "col_name(BAT[any::1,any::2], str) : BAT[any::1,any::2]"				  ]
[ "cold(BAT[any::1,any::2]) : void"							  ]
[ "count_no_nil(BAT[any,any]) : int"							  ]
[ "cpu() : BAT[str,int]"								  ]
[ "destroy(BAT[any,any]) : bit"								  ]
[ "destroy(str) : bit"									  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"			  ]
[ "dir() : void"									  ]
[ "dir(BAT[int,str]) : void"								  ]
[ "dir(str) : void"									  ]
[ "dir_leaks() : void"									  ]
[ "env() : void"									  ]
[ "environment() : BAT[str,str]"							  ]
[ "exit() : void"									  ]
[ "find_unescaped_occurrence(str, chr) : int"						  ]
[ "head(BAT[any,any]) : str"								  ]
[ "help() : void"									  ]
[ "help(str) : void"									  ]
[ "help_sig(oid) : void"								  ]
[ "help_tpe(int) : str"									  ]
[ "hot(BAT[any::1,any::2]) : void"							  ]
[ "htype(any) : int"									  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "io() : BAT[str,int]"									  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3]) : BAT[any::1,any::3]"			  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], lng, str, ..any..) : BAT[any::1,any::3]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"	  ]
[ "likeselect(BAT[any::1,str], str) : BAT[any::1,oid]"					  ]
[ "load(str) : BAT[any,any]"								  ]
[ "loaded() : void"									  ]
[ "locate(str, str) : int"								  ]
[ "locate(str, str, int) : int"								  ]
[ "ls() : void"										  ]
[ "ls(str) : void"									  ]
[ "madvise(BAT[any::1,any::2], int) : BAT[any::1,any::2]"				  ]
[ "mem_usage() : BAT[str,lng]"								  ]
[ "mem_usage(int) : BAT[str,lng]"							  ]
[ "memory() : BAT[str,int]"								  ]
[ "mil_select(BAT[any::1,any::2], str, ..any..) : BAT[any::1,any::2]"			  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"		  ]
[ "mmap(BAT[any::1,any::2], int) : BAT[any::1,any::2]"					  ]
[ "modules() : void"									  ]
[ "neg_select(BAT[any::1,any::2], str, ..any..) : BAT[any::1,any::2]"			  ]
[ "new(BAT[any,any], BAT[any,any], int) : BAT[any,any]"					  ]
[ "new(int, int) : BAT[any,any]"							  ]
[ "new(int, int, int) : BAT[any,any]"							  ]
[ "new(int, int, lng) : BAT[any,any]"							  ]
[ "outerjoin(BAT[any::1,any::2], BAT[any::2,any::3]) : BAT[any::1,any::3]"		  ]
[ "procs() : void"									  ]
[ "prod(BAT[any,dbl]) : dbl"								  ]
[ "prod(BAT[any,flt]) : flt"								  ]
[ "prod(BAT[any,int]) : int"								  ]
[ "prod(BAT[any,lng]) : lng"								  ]
[ "prod(BAT[any,sht]) : sht"								  ]
[ "project(BAT[any::1,any]) : BAT[any::1,void]"						  ]
[ "readonly(BAT[any::1,any::2]) : int"							  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"				  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"				  ]
[ "repeat(str, int) : str"								  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"			  ]
[ "save(BAT[any::1,any::2]) : BAT[any::1,any::2]"					  ]
[ "semijoin(BAT[any::1,any::2], BAT[any::1,any]) : BAT[any::1,any::2]"			  ]
[ "sigs(str) : void"									  ]
[ "sort_ht(BAT[any::1,any::2]) : BAT[any::1,any::2]"					  ]
[ "space(int) : str"									  ]
[ "stringinsert(str, int, int, str) : str"						  ]
[ "stringleft(str, int) : str"								  ]
[ "stringlength(str) : int"								  ]
[ "stringreplace(str, str, str) : str"							  ]
[ "stringright(str, int) : str"								  ]
[ "substring(str, int) : str"								  ]
[ "substring(str, int, int) : str"							  ]
[ "sum(BAT[any,dbl]) : dbl"								  ]
[ "sum(BAT[any,flt]) : flt"								  ]
[ "sum(BAT[any,int]) : int"								  ]
[ "sum(BAT[any,lng]) : lng"								  ]
[ "sum(BAT[any,sht]) : sht"								  ]
[ "tail(BAT[any,any]) : str"								  ]
[ "test_arith() : void"									  ]
[ "test_str() : void"									  ]
[ "threads() : void"									  ]
[ "ttype(any) : int"									  ]
[ "tunique(BAT[any,any::1]) : BAT[any::1,void]"						  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"			  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"					  ]
[ "vars() : void"									  ]
[ "vars(str) : void"									  ]
[ "vm_usage() : BAT[str,lng]"								  ]
[ "vm_usage(int) : BAT[str,lng]"							  ]
vars();
#-----------------------------------------------------------------------------------------#
# tmp_34			type	type_status	value_status	value_value		  # name
# str			str	str		str		str			  # type
#-----------------------------------------------------------------------------------------#
[ "BBPTRIM_ALL",	  "lng",  "frozen",	  "constant",	  "4611686018427387904"	  ]
[ "monet_environment",	  "BAT",  "frozen",	  "constant",	  "<monet_environment>"	  ]
[ "GE",			  "int",  "frozen",	  "constant",	  "2"			  ]
[ "GT",			  "int",  "frozen",	  "constant",	  "1"			  ]
[ "LE",			  "int",  "frozen",	  "constant",	  "-2"			  ]
[ "LT",			  "int",  "frozen",	  "constant",	  "-1"			  ]
[ "EQ",			  "int",  "frozen",	  "constant",	  "0"			  ]
[ "BAT_WRITE",		  "int",  "frozen",	  "constant",	  "0"			  ]
[ "BAT_APPEND",		  "int",  "frozen",	  "constant",	  "2"			  ]
[ "BAT_READ",		  "int",  "frozen",	  "constant",	  "1"			  ]
[ "BUF_DONTNEED",	  "int",  "frozen",	  "constant",	  "4"			  ]
[ "BUF_WILLNEED",	  "int",  "frozen",	  "constant",	  "3"			  ]
[ "BUF_SEQUENTIAL",	  "int",  "frozen",	  "constant",	  "2"			  ]
[ "BUF_RANDOM",		  "int",  "frozen",	  "constant",	  "1"			  ]
[ "BUF_NORMAL",		  "int",  "frozen",	  "constant",	  "0"			  ]
[ "STORE_COMPR",	  "int",  "frozen",	  "constant",	  "2"			  ]
[ "STORE_MMAP",		  "int",  "frozen",	  "constant",	  "1"			  ]
[ "STORE_MEM",		  "int",  "frozen",	  "constant",	  "0"			  ]
[ "monet_mod_var",	  "BAT",  "frozen",	  "constant",	  "<monet_mod_var>"	  ]
[ "monet_mod_use",	  "BAT",  "frozen",	  "constant",	  "<monet_mod_use>"	  ]
[ "monet_mod_proc",	  "BAT",  "frozen",	  "constant",	  "<monet_mod_proc>"	  ]
[ "monet_mod_nme",	  "BAT",  "frozen",	  "constant",	  "<monet_mod_nme>"	  ]
[ "monet_mod_load",	  "BAT",  "frozen",	  "constant",	  "<monet_mod_load>"	  ]
[ "monet_mod_hdl",	  "BAT",  "frozen",	  "constant",	  "<monet_mod_hdl>"	  ]
[ "monet_mod_drop",	  "BAT",  "frozen",	  "constant",	  "<monet_mod_drop>"	  ]
[ "monet_mod_dep",	  "BAT",  "frozen",	  "constant",	  "<monet_mod_dep>"	  ]
[ "monet_mod_cnt",	  "BAT",  "frozen",	  "constant",	  "<monet_mod_cnt>"	  ]
[ "monet_mod_atm",	  "BAT",  "frozen",	  "constant",	  "<monet_mod_atm>"	  ]
[ "monet_mod_acc",	  "BAT",  "frozen",	  "constant",	  "<monet_mod_acc>"	  ]
[ "monet_fcn_tpe",	  "BAT",  "frozen",	  "constant",	  "<monet_fcn_tpe>"	  ]
[ "monet_fcn_sig",	  "BAT",  "frozen",	  "constant",	  "<monet_fcn_sig>"	  ]
[ "monet_fcn_pro",	  "BAT",  "frozen",	  "constant",	  "<monet_fcn_pro>"	  ]
[ "monet_fcn_nme",	  "BAT",  "frozen",	  "constant",	  "<monet_fcn_nme>"	  ]
[ "monet_fcn_mid",	  "BAT",  "frozen",	  "constant",	  "<monet_fcn_mid>"	  ]
[ "monet_fcn_imp",	  "BAT",  "frozen",	  "constant",	  "<monet_fcn_imp>"	  ]
[ "monet_fcn_fcn",	  "BAT",  "frozen",	  "constant",	  "<monet_fcn_fcn>"	  ]
[ "monet_fcn_dsc",	  "BAT",  "frozen",	  "constant",	  "<monet_fcn_dsc>"	  ]
[ "monet_fcn_dat",	  "BAT",  "frozen",	  "constant",	  "<monet_fcn_dat>"	  ]
[ "monet_fcn_cnt",	  "BAT",  "frozen",	  "constant",	  "<monet_fcn_cnt>"	  ]
[ "monet_fcn_aut",	  "BAT",  "frozen",	  "constant",	  "<monet_fcn_aut>"	  ]
[ "monet_unicode_case",	  "BAT",  "frozen",	  "constant",	  "<monet_unicode_case>"  ]
[ "LNG_MIN",		  "lng",  "frozen",	  "constant",	  "-9223372036854775807"  ]
[ "LNG_MAX",		  "lng",  "frozen",	  "constant",	  "9223372036854775807"	  ]
[ "INT_MIN",		  "int",  "frozen",	  "constant",	  "-2147483647"		  ]
[ "INT_MAX",		  "int",  "frozen",	  "constant",	  "2147483647"		  ]
[ "SHT_MIN",		  "sht",  "frozen",	  "constant",	  "-32767"		  ]
[ "SHT_MAX",		  "sht",  "frozen",	  "constant",	  "32767"		  ]
[ "CHR_MIN",		  "chr",  "frozen",	  "constant",	  ""			  ]
[ "CHR_MAX",		  "chr",  "frozen",	  "constant",	  ""			  ]
[ "RAND_MAX",		  "int",  "frozen",	  "constant",	  "32767"		  ]
[ "TOK_OBJECT",		  "int",  "frozen",	  "constant",	  "294"			  ]
[ "TOK_ITERATOR",	  "int",  "frozen",	  "constant",	  "270"			  ]
[ "TOK_COMMAND",	  "int",  "frozen",	  "constant",	  "285"			  ]
[ "TOK_OPERATOR",	  "int",  "frozen",	  "constant",	  "287"			  ]
[ "TOK_PROC",		  "int",  "frozen",	  "constant",	  "283"			  ]
[ "TOK_BUILTIN",	  "int",  "frozen",	  "constant",	  "277"			  ]
[ "monet_atomtbl",	  "BAT",  "frozen",	  "constant",	  "<adm_atomtbl>"	  ]
[ "monet_acctbl",	  "BAT",  "frozen",	  "constant",	  "<adm_acctbl>"	  ]
[ "monet_fcntbl",	  "BAT",  "frozen",	  "constant",	  "<adm_fcntbl>"	  ]
view_bbp_kind().print();
#-----------------#
# bbp	kind	  # name
# int	str	  # type
#-----------------#
[ 1,	  "tran"  ]
[ 2,	  "tran"  ]
[ 3,	  "tran"  ]
[ 4,	  "tran"  ]
[ 5,	  "tran"  ]
[ 6,	  "tran"  ]
[ 7,	  "tran"  ]
[ 8,	  "tran"  ]
[ 9,	  "tran"  ]
[ 10,	  "tran"  ]
[ 11,	  "tran"  ]
[ 12,	  "tran"  ]
[ 13,	  "tran"  ]
[ 14,	  "tran"  ]
[ 15,	  "tran"  ]
[ 16,	  "tran"  ]
[ 17,	  "tran"  ]
[ 18,	  "tran"  ]
[ 19,	  "tran"  ]
[ 20,	  "tran"  ]
[ 21,	  "tran"  ]
[ 22,	  "tran"  ]
[ 23,	  "tran"  ]
[ 24,	  "tran"  ]
[ 25,	  "tran"  ]
[ 26,	  "tran"  ]
[ 27,	  "tran"  ]
view_bbp_location().print();
#-------------------------#
# bbp	location		  # name
# int	str		  # type
#-------------------------#
[ 1,	  "1"		  ]
[ 2,	  "2"		  ]
[ 3,	  "3"		  ]
[ 4,	  "4"		  ]
[ 5,	  "5"		  ]
[ 6,	  "6"		  ]
[ 7,	  "7"		  ]
[ 8,	  "8"		  ]
[ 9,	  "9"		  ]
[ 10,	  "10"		  ]
[ 11,	  "11"		  ]
[ 12,	  "12"		  ]
[ 13,	  "13"		  ]
[ 14,	  "14"		  ]
[ 15,	  "15"		  ]
[ 16,	  "16"		  ]
[ 17,	  "17"		  ]
[ 18,	  "18"		  ]
[ 19,	  "19"		  ]
[ 20,	  "20"		  ]
[ 21,	  "21"		  ]
[ 22,	  "22"		  ]
[ 23,	  "23"		  ]
[ 24,	  "24"		  ]
[ 25,	  "25"		  ]
[ 26,	  "26"		  ]
[ 27,	  "27"		  ]
view_bbp_name().print();
#---------------------------------#
# bbp	name			  # name
# int	str			  # type
#---------------------------------#
[ 1,	  "monet_environment"	  ]
[ 2,	  "monet_fcn_fcn"	  ]
[ 3,	  "monet_fcn_imp"	  ]
[ 4,	  "monet_fcn_tpe"	  ]
[ 5,	  "monet_fcn_mid"	  ]
[ 6,	  "monet_fcn_sig"	  ]
[ 7,	  "monet_fcn_dsc"	  ]
[ 8,	  "monet_fcn_aut"	  ]
[ 9,	  "monet_fcn_dat"	  ]
[ 10,	  "monet_fcn_nme"	  ]
[ 11,	  "monet_fcn_pro"	  ]
[ 12,	  "monet_fcn_cnt"	  ]
[ 13,	  "monet_mod_nme"	  ]
[ 14,	  "monet_mod_cnt"	  ]
[ 15,	  "monet_mod_atm"	  ]
[ 16,	  "monet_mod_acc"	  ]
[ 17,	  "monet_mod_hdl"	  ]
[ 18,	  "monet_mod_dep"	  ]
[ 19,	  "monet_mod_use"	  ]
[ 20,	  "monet_mod_load"	  ]
[ 21,	  "monet_mod_drop"	  ]
[ 22,	  "monet_mod_proc"	  ]
[ 23,	  "monet_mod_var"	  ]
[ 24,	  "adm_fcntbl"		  ]
[ 25,	  "adm_acctbl"		  ]
[ 26,	  "adm_atomtbl"		  ]
[ 27,	  "monet_unicode_case"	  ]
view_bbp_refcnt().print();
#-----------------#
# bbp	refcnt	  # name
# int	int	  # type
#-----------------#
[ 1,	  1	  ]
[ 2,	  1	  ]
[ 3,	  1	  ]
[ 4,	  1	  ]
[ 5,	  1	  ]
[ 6,	  1	  ]
[ 7,	  1	  ]
[ 8,	  1	  ]
[ 9,	  1	  ]
[ 10,	  1	  ]
[ 11,	  1	  ]
[ 12,	  1	  ]
[ 13,	  1	  ]
[ 14,	  1	  ]
[ 15,	  1	  ]
[ 16,	  1	  ]
[ 17,	  1	  ]
[ 18,	  1	  ]
[ 19,	  1	  ]
[ 20,	  1	  ]
[ 21,	  1	  ]
[ 22,	  1	  ]
[ 23,	  1	  ]
[ 24,	  1	  ]
[ 25,	  1	  ]
[ 26,	  1	  ]
[ 27,	  1	  ]
view_bbp_status().print();
#-----------------#
# bbp	status	  # name
# int	str	  # type
#-----------------#
[ 1,	  "load"  ]
[ 2,	  "load"  ]
[ 3,	  "load"  ]
[ 4,	  "load"  ]
[ 5,	  "load"  ]
[ 6,	  "load"  ]
[ 7,	  "load"  ]
[ 8,	  "load"  ]
[ 9,	  "load"  ]
[ 10,	  "load"  ]
[ 11,	  "load"  ]
[ 12,	  "load"  ]
[ 13,	  "load"  ]
[ 14,	  "load"  ]
[ 15,	  "load"  ]
[ 16,	  "load"  ]
[ 17,	  "load"  ]
[ 18,	  "load"  ]
[ 19,	  "load"  ]
[ 20,	  "load"  ]
[ 21,	  "load"  ]
[ 22,	  "load"  ]
[ 23,	  "load"  ]
[ 24,	  "load"  ]
[ 25,	  "load"  ]
[ 26,	  "load"  ]
[ 27,	  "load"  ]
view_client_tree().print();
#-----------------------------------------#
# client	tree				  # name
# int	str				  # type
#-----------------------------------------#
[ 0,	  "print(view_client_tree())"	  ]
view_gdk_bbp().print();
#-------------------------#
# gdk		bbp	  # name
# str		int	  # type
#-------------------------#
[ "bats",	  28	  ]
[ "tmpbats",	  28	  ]
[ "perbats",	  0	  ]
[ "ondisk",	  0	  ]
[ "todisk",	  0	  ]
[ "fromdisk",	  0	  ]
view_var_name().reverse().join(view_var_constant()).print();
#-----------------------------------------#
# t			tmp_28		  # name
# str			str		  # type
#-----------------------------------------#
[ "BBPTRIM_ALL",	  "constant"	  ]
[ "monet_environment",	  "constant"	  ]
[ "GE",			  "constant"	  ]
[ "GT",			  "constant"	  ]
[ "LE",			  "constant"	  ]
[ "LT",			  "constant"	  ]
[ "EQ",			  "constant"	  ]
[ "BAT_WRITE",		  "constant"	  ]
[ "BAT_APPEND",		  "constant"	  ]
[ "BAT_READ",		  "constant"	  ]
[ "BUF_DONTNEED",	  "constant"	  ]
[ "BUF_WILLNEED",	  "constant"	  ]
[ "BUF_SEQUENTIAL",	  "constant"	  ]
[ "BUF_RANDOM",		  "constant"	  ]
[ "BUF_NORMAL",		  "constant"	  ]
[ "STORE_COMPR",	  "constant"	  ]
[ "STORE_MMAP",		  "constant"	  ]
[ "STORE_MEM",		  "constant"	  ]
[ "monet_mod_var",	  "constant"	  ]
[ "monet_mod_use",	  "constant"	  ]
[ "monet_mod_proc",	  "constant"	  ]
[ "monet_mod_nme",	  "constant"	  ]
[ "monet_mod_load",	  "constant"	  ]
[ "monet_mod_hdl",	  "constant"	  ]
[ "monet_mod_drop",	  "constant"	  ]
[ "monet_mod_dep",	  "constant"	  ]
[ "monet_mod_cnt",	  "constant"	  ]
[ "monet_mod_atm",	  "constant"	  ]
[ "monet_mod_acc",	  "constant"	  ]
[ "monet_fcn_tpe",	  "constant"	  ]
[ "monet_fcn_sig",	  "constant"	  ]
[ "monet_fcn_pro",	  "constant"	  ]
[ "monet_fcn_nme",	  "constant"	  ]
[ "monet_fcn_mid",	  "constant"	  ]
[ "monet_fcn_imp",	  "constant"	  ]
[ "monet_fcn_fcn",	  "constant"	  ]
[ "monet_fcn_dsc",	  "constant"	  ]
[ "monet_fcn_dat",	  "constant"	  ]
[ "monet_fcn_cnt",	  "constant"	  ]
[ "monet_fcn_aut",	  "constant"	  ]
[ "monet_unicode_case",	  "constant"	  ]
[ "LNG_MIN",		  "constant"	  ]
[ "LNG_MAX",		  "constant"	  ]
[ "INT_MIN",		  "constant"	  ]
[ "INT_MAX",		  "constant"	  ]
[ "SHT_MIN",		  "constant"	  ]
[ "SHT_MAX",		  "constant"	  ]
[ "CHR_MIN",		  "constant"	  ]
[ "CHR_MAX",		  "constant"	  ]
[ "RAND_MAX",		  "constant"	  ]
[ "TOK_OBJECT",		  "constant"	  ]
[ "TOK_ITERATOR",	  "constant"	  ]
[ "TOK_COMMAND",	  "constant"	  ]
[ "TOK_OPERATOR",	  "constant"	  ]
[ "TOK_PROC",		  "constant"	  ]
[ "TOK_BUILTIN",	  "constant"	  ]
[ "monet_atomtbl",	  "constant"	  ]
[ "monet_acctbl",	  "constant"	  ]
[ "monet_fcntbl",	  "constant"	  ]
view_var_name().reverse().join(view_var_kind()).print();
#-----------------------------------------#
# t			tmp_31		  # name
# str			str		  # type
#-----------------------------------------#
[ "BBPTRIM_ALL",	  "frozen"	  ]
[ "monet_environment",	  "frozen"	  ]
[ "GE",			  "frozen"	  ]
[ "GT",			  "frozen"	  ]
[ "LE",			  "frozen"	  ]
[ "LT",			  "frozen"	  ]
[ "EQ",			  "frozen"	  ]
[ "BAT_WRITE",		  "frozen"	  ]
[ "BAT_APPEND",		  "frozen"	  ]
[ "BAT_READ",		  "frozen"	  ]
[ "BUF_DONTNEED",	  "frozen"	  ]
[ "BUF_WILLNEED",	  "frozen"	  ]
[ "BUF_SEQUENTIAL",	  "frozen"	  ]
[ "BUF_RANDOM",		  "frozen"	  ]
[ "BUF_NORMAL",		  "frozen"	  ]
[ "STORE_COMPR",	  "frozen"	  ]
[ "STORE_MMAP",		  "frozen"	  ]
[ "STORE_MEM",		  "frozen"	  ]
[ "monet_mod_var",	  "frozen"	  ]
[ "monet_mod_use",	  "frozen"	  ]
[ "monet_mod_proc",	  "frozen"	  ]
[ "monet_mod_nme",	  "frozen"	  ]
[ "monet_mod_load",	  "frozen"	  ]
[ "monet_mod_hdl",	  "frozen"	  ]
[ "monet_mod_drop",	  "frozen"	  ]
[ "monet_mod_dep",	  "frozen"	  ]
[ "monet_mod_cnt",	  "frozen"	  ]
[ "monet_mod_atm",	  "frozen"	  ]
[ "monet_mod_acc",	  "frozen"	  ]
[ "monet_fcn_tpe",	  "frozen"	  ]
[ "monet_fcn_sig",	  "frozen"	  ]
[ "monet_fcn_pro",	  "frozen"	  ]
[ "monet_fcn_nme",	  "frozen"	  ]
[ "monet_fcn_mid",	  "frozen"	  ]
[ "monet_fcn_imp",	  "frozen"	  ]
[ "monet_fcn_fcn",	  "frozen"	  ]
[ "monet_fcn_dsc",	  "frozen"	  ]
[ "monet_fcn_dat",	  "frozen"	  ]
[ "monet_fcn_cnt",	  "frozen"	  ]
[ "monet_fcn_aut",	  "frozen"	  ]
[ "monet_unicode_case",	  "frozen"	  ]
[ "LNG_MIN",		  "frozen"	  ]
[ "LNG_MAX",		  "frozen"	  ]
[ "INT_MIN",		  "frozen"	  ]
[ "INT_MAX",		  "frozen"	  ]
[ "SHT_MIN",		  "frozen"	  ]
[ "SHT_MAX",		  "frozen"	  ]
[ "CHR_MIN",		  "frozen"	  ]
[ "CHR_MAX",		  "frozen"	  ]
[ "RAND_MAX",		  "frozen"	  ]
[ "TOK_OBJECT",		  "frozen"	  ]
[ "TOK_ITERATOR",	  "frozen"	  ]
[ "TOK_COMMAND",	  "frozen"	  ]
[ "TOK_OPERATOR",	  "frozen"	  ]
[ "TOK_PROC",		  "frozen"	  ]
[ "TOK_BUILTIN",	  "frozen"	  ]
[ "monet_atomtbl",	  "frozen"	  ]
[ "monet_acctbl",	  "frozen"	  ]
[ "monet_fcntbl",	  "frozen"	  ]
view_var_name().reverse().join(view_var_type()).print();
#---------------------------------#
# t			tmp_28	  # name
# str			str	  # type
#---------------------------------#
[ "BBPTRIM_ALL",	  "lng"	  ]
[ "monet_environment",	  "BAT"	  ]
[ "GE",			  "int"	  ]
[ "GT",			  "int"	  ]
[ "LE",			  "int"	  ]
[ "LT",			  "int"	  ]
[ "EQ",			  "int"	  ]
[ "BAT_WRITE",		  "int"	  ]
[ "BAT_APPEND",		  "int"	  ]
[ "BAT_READ",		  "int"	  ]
[ "BUF_DONTNEED",	  "int"	  ]
[ "BUF_WILLNEED",	  "int"	  ]
[ "BUF_SEQUENTIAL",	  "int"	  ]
[ "BUF_RANDOM",		  "int"	  ]
[ "BUF_NORMAL",		  "int"	  ]
[ "STORE_COMPR",	  "int"	  ]
[ "STORE_MMAP",		  "int"	  ]
[ "STORE_MEM",		  "int"	  ]
[ "monet_mod_var",	  "BAT"	  ]
[ "monet_mod_use",	  "BAT"	  ]
[ "monet_mod_proc",	  "BAT"	  ]
[ "monet_mod_nme",	  "BAT"	  ]
[ "monet_mod_load",	  "BAT"	  ]
[ "monet_mod_hdl",	  "BAT"	  ]
[ "monet_mod_drop",	  "BAT"	  ]
[ "monet_mod_dep",	  "BAT"	  ]
[ "monet_mod_cnt",	  "BAT"	  ]
[ "monet_mod_atm",	  "BAT"	  ]
[ "monet_mod_acc",	  "BAT"	  ]
[ "monet_fcn_tpe",	  "BAT"	  ]
[ "monet_fcn_sig",	  "BAT"	  ]
[ "monet_fcn_pro",	  "BAT"	  ]
[ "monet_fcn_nme",	  "BAT"	  ]
[ "monet_fcn_mid",	  "BAT"	  ]
[ "monet_fcn_imp",	  "BAT"	  ]
[ "monet_fcn_fcn",	  "BAT"	  ]
[ "monet_fcn_dsc",	  "BAT"	  ]
[ "monet_fcn_dat",	  "BAT"	  ]
[ "monet_fcn_cnt",	  "BAT"	  ]
[ "monet_fcn_aut",	  "BAT"	  ]
[ "monet_unicode_case",	  "BAT"	  ]
[ "LNG_MIN",		  "lng"	  ]
[ "LNG_MAX",		  "lng"	  ]
[ "INT_MIN",		  "int"	  ]
[ "INT_MAX",		  "int"	  ]
[ "SHT_MIN",		  "sht"	  ]
[ "SHT_MAX",		  "sht"	  ]
[ "CHR_MIN",		  "chr"	  ]
[ "CHR_MAX",		  "chr"	  ]
[ "RAND_MAX",		  "int"	  ]
[ "TOK_OBJECT",		  "int"	  ]
[ "TOK_ITERATOR",	  "int"	  ]
[ "TOK_COMMAND",	  "int"	  ]
[ "TOK_OPERATOR",	  "int"	  ]
[ "TOK_PROC",		  "int"	  ]
[ "TOK_BUILTIN",	  "int"	  ]
[ "monet_atomtbl",	  "BAT"	  ]
[ "monet_acctbl",	  "BAT"	  ]
[ "monet_fcntbl",	  "BAT"	  ]

dir();
#-----------------------------------------------------------------------------------------------------------------#
# name			htype	ttype	count	heat	dirty		status	kind	refcnt	lrefcnt		  # name
# str			str	str	lng	int	str		str	str	int	int		  # type
#-----------------------------------------------------------------------------------------------------------------#
[ "adm_acctbl",		  "str",  "int",  2,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "adm_atomtbl",	  "str",  "int",  13,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "adm_fcntbl",		  "str",  "oid",  674,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_environment",	  "str",  "str",  29,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_fcn_aut",	  "oid",  "str",  614,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_fcn_cnt",	  "oid",  "int",  674,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_fcn_dat",	  "oid",  "str",  614,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_fcn_dsc",	  "oid",  "str",  614,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_fcn_fcn",	  "oid",  "ptr",  573,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_fcn_imp",	  "oid",  "ptr",  674,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_fcn_mid",	  "oid",  "oid",  614,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_fcn_nme",	  "oid",  "str",  674,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_fcn_pro",	  "oid",  "str",  1672,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_fcn_sig",	  "oid",  "str",  39,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_fcn_tpe",	  "oid",  "int",  674,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_mod_acc",	  "oid",  "str",  0,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_mod_atm",	  "oid",  "str",  0,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_mod_cnt",	  "oid",  "int",  15,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_mod_dep",	  "oid",  "str",  7,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_mod_drop",	  "oid",  "int",  0,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_mod_hdl",	  "oid",  "ptr",  7,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_mod_load",	  "oid",  "str",  0,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_mod_nme",	  "oid",  "str",  15,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_mod_proc",	  "str",  "oid",  101,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_mod_use",	  "oid",  "int",  15,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_mod_var",	  "str",  "ptr",  50,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
[ "monet_unicode_case",	  "int",  "int",  732,	  0,	  "dirty",	  "load", "tran", 1,	  1		  ]
ls();
#-------------------------------------------------------------------------------------------------#
# name	htype	ttype	count	heat	dirty		status	kind	refcnt	lrefcnt		  # name
# str	str	str	lng	int	str		str	str	int	int		  # type
#-------------------------------------------------------------------------------------------------#
view_bbp_heat().print();
#-----------------#
# bbp	heat	  # name
# int	int	  # type
#-----------------#
[ 1,	  0	  ]
[ 2,	  0	  ]
[ 3,	  0	  ]
[ 4,	  0	  ]
[ 5,	  0	  ]
[ 6,	  0	  ]
[ 7,	  0	  ]
[ 8,	  0	  ]
[ 9,	  0	  ]
[ 10,	  0	  ]
[ 11,	  0	  ]
[ 12,	  0	  ]
[ 13,	  0	  ]
[ 14,	  0	  ]
[ 15,	  0	  ]
[ 16,	  0	  ]
[ 17,	  0	  ]
[ 18,	  0	  ]
[ 19,	  0	  ]
[ 20,	  0	  ]
[ 21,	  0	  ]
[ 22,	  0	  ]
[ 23,	  0	  ]
[ 24,	  0	  ]
[ 25,	  0	  ]
[ 26,	  0	  ]
[ 27,	  0	  ]

printf("#~BeginVariableOutput~#\n");
#~BeginVariableOutput~#

debugmask().print();
[ 10 ]
queue();
##------------------------------------------------------------------#
## req      | tid      | status   | wakeup | action                 #
##------------------------------------------------------------------#
#[     54,         0,         1,         0, "unknown(0)#"                   ]
#[     55,         1,   running,        54, "queue()#"                      ]
threadid().print();
[ 1 ]

clients();
#-----------------------------------------------------------------#
# client	name	login				tree		  # name
# int	str	str				str		  # type
#-----------------------------------------------------------------#
[ 0,	  "adm",  "Wed Oct 27 22:14:39 2004",	  "clients()"	  ]
cpu().print();
#-------------------------#
# gdk		cpu	  # name
# str		int	  # type
#-------------------------#
[ "elapsed",	  0	  ]
[ "user",	  740	  ]
[ "elapuser",	  140	  ]
[ "system",	  110	  ]
[ "elapsystem",	  10	  ]
env();
#---------------------------------------------------------------------------------#
# h			monet_environment					  # name
# str			str							  # type
#---------------------------------------------------------------------------------#
[ "config",		  "/local/home/monet//IRIX64-IP27/etc/MonetDB.conf"	  ]
[ "gdk_arch",		  "64bitmips-sgi-irix6.5"				  ]
[ "gdk_version",	  "4.5.0"						  ]
[ "monet_pid",		  "81591507"						  ]
[ "prefix",		  "/local/home/monet//IRIX64-IP27"			  ]
[ "exec_prefix",	  "/local/home/monet//IRIX64-IP27"			  ]
[ "gdk_dbname",		  "mTests_src_tools"					  ]
[ "gdk_dbfarm",		  "/local/home/monet//IRIX64-IP27/var/MonetDB/dbfarm"	  ]
[ "gdk_debug",		  "10"							  ]
[ "gdk_mem_bigsize",	  "33554432"						  ]
[ "gdk_vm_minsize",	  "134217728"						  ]
[ "gdk_alloc_map",	  "yes"							  ]
[ "monet_admin",	  "adm"							  ]
[ "monet_prompt",	  ""							  ]
[ "monet_welcome",	  "yes"							  ]
[ "monet_nostalgic",	  "no"							  ]
[ "monet_mod_path",	  "/local/home/monet//IRIX64-IP27/lib/MonetDB"		  ]
[ "monet_daemon",	  "no"							  ]
[ "host",		  "localhost"						  ]
[ "mapi_port",		  "40408"						  ]
[ "mapi_noheaders",	  "no"							  ]
[ "mapi_debug",		  "0"							  ]
[ "sql_port",		  "51287"						  ]
[ "sql_debug",		  "0"							  ]
[ "sql_user",		  "monetdb"						  ]
[ "sql_schema",		  "sys"							  ]
[ "sql_logdir",		  "/local/home/monet//IRIX64-IP27/var/MonetDB/log"	  ]
[ "gdk_embedded",	  "no"							  ]
[ "monet_cwd",		  "/local/home/monet/IRIX64-IP27/mTests/src/tools"	  ]
environment().print();
#---------------------------------------------------------------------------------#
# h			monet_environment					  # name
# str			str							  # type
#---------------------------------------------------------------------------------#
[ "config",		  "/local/home/monet//IRIX64-IP27/etc/MonetDB.conf"	  ]
[ "gdk_arch",		  "64bitmips-sgi-irix6.5"				  ]
[ "gdk_version",	  "4.5.0"						  ]
[ "monet_pid",		  "81591507"						  ]
[ "prefix",		  "/local/home/monet//IRIX64-IP27"			  ]
[ "exec_prefix",	  "/local/home/monet//IRIX64-IP27"			  ]
[ "gdk_dbname",		  "mTests_src_tools"					  ]
[ "gdk_dbfarm",		  "/local/home/monet//IRIX64-IP27/var/MonetDB/dbfarm"	  ]
[ "gdk_debug",		  "10"							  ]
[ "gdk_mem_bigsize",	  "33554432"						  ]
[ "gdk_vm_minsize",	  "134217728"						  ]
[ "gdk_alloc_map",	  "yes"							  ]
[ "monet_admin",	  "adm"							  ]
[ "monet_prompt",	  ""							  ]
[ "monet_welcome",	  "yes"							  ]
[ "monet_nostalgic",	  "no"							  ]
[ "monet_mod_path",	  "/local/home/monet//IRIX64-IP27/lib/MonetDB"		  ]
[ "monet_daemon",	  "no"							  ]
[ "host",		  "localhost"						  ]
[ "mapi_port",		  "40408"						  ]
[ "mapi_noheaders",	  "no"							  ]
[ "mapi_debug",		  "0"							  ]
[ "sql_port",		  "51287"						  ]
[ "sql_debug",		  "0"							  ]
[ "sql_user",		  "monetdb"						  ]
[ "sql_schema",		  "sys"							  ]
[ "sql_logdir",		  "/local/home/monet//IRIX64-IP27/var/MonetDB/log"	  ]
[ "gdk_embedded",	  "no"							  ]
[ "monet_cwd",		  "/local/home/monet/IRIX64-IP27/mTests/src/tools"	  ]
io().print();
#-------------------------#
# gdk		io	  # name
# str		int	  # type
#-------------------------#
[ "maxrss",	  5760	  ]
[ "minflt",	  245	  ]
[ "majflt",	  0	  ]
[ "nswap",	  0	  ]
[ "inblock",	  4	  ]
[ "oublock",	  0	  ]
[ "nvcsw",	  2	  ]
[ "ninvcsw",	  1	  ]
memory().print();
#---------------------------------#
# gdk		mem		  # name
# str		int		  # type
#---------------------------------#
[ "memincr",	  0		  ]
[ "arena",	  2973664	  ]
[ "ordblks",	  9756		  ]
[ "smblks",	  3900		  ]
[ "hblkhd",	  1872		  ]
[ "hblks",	  39		  ]
[ "usmblks",	  102896	  ]
[ "fsmblks",	  21904		  ]
[ "uordblks",	  2438720	  ]
[ "fordblks",	  408272	  ]
threads();
#-------------------------#
# gdk	thread		  # name
# int	str		  # type
#-------------------------#
[ 1,	  "Interpreter"	  ]
view_client_login().print();
#-----------------------------------------#
# client	login				  # name
# int	str				  # type
#-----------------------------------------#
[ 0,	  "Wed Oct 27 22:14:39 2004"	  ]
view_client_name().print();
#-----------------#
# client	name	  # name
# int	str	  # type
#-----------------#
[ 0,	  "adm"	  ]
view_gdk_cpu().print();
#-------------------------#
# gdk		cpu	  # name
# str		int	  # type
#-------------------------#
[ "elapsed",	  0	  ]
[ "user",	  750	  ]
[ "elapuser",	  10	  ]
[ "system",	  110	  ]
[ "elapsystem",	  0	  ]
view_gdk_env().print();
#---------------------------------------------------------------------------------#
# h			monet_environment					  # name
# str			str							  # type
#---------------------------------------------------------------------------------#
[ "config",		  "/local/home/monet//IRIX64-IP27/etc/MonetDB.conf"	  ]
[ "gdk_arch",		  "64bitmips-sgi-irix6.5"				  ]
[ "gdk_version",	  "4.5.0"						  ]
[ "monet_pid",		  "81591507"						  ]
[ "prefix",		  "/local/home/monet//IRIX64-IP27"			  ]
[ "exec_prefix",	  "/local/home/monet//IRIX64-IP27"			  ]
[ "gdk_dbname",		  "mTests_src_tools"					  ]
[ "gdk_dbfarm",		  "/local/home/monet//IRIX64-IP27/var/MonetDB/dbfarm"	  ]
[ "gdk_debug",		  "10"							  ]
[ "gdk_mem_bigsize",	  "33554432"						  ]
[ "gdk_vm_minsize",	  "134217728"						  ]
[ "gdk_alloc_map",	  "yes"							  ]
[ "monet_admin",	  "adm"							  ]
[ "monet_prompt",	  ""							  ]
[ "monet_welcome",	  "yes"							  ]
[ "monet_nostalgic",	  "no"							  ]
[ "monet_mod_path",	  "/local/home/monet//IRIX64-IP27/lib/MonetDB"		  ]
[ "monet_daemon",	  "no"							  ]
[ "host",		  "localhost"						  ]
[ "mapi_port",		  "40408"						  ]
[ "mapi_noheaders",	  "no"							  ]
[ "mapi_debug",		  "0"							  ]
[ "sql_port",		  "51287"						  ]
[ "sql_debug",		  "0"							  ]
[ "sql_user",		  "monetdb"						  ]
[ "sql_schema",		  "sys"							  ]
[ "sql_logdir",		  "/local/home/monet//IRIX64-IP27/var/MonetDB/log"	  ]
[ "gdk_embedded",	  "no"							  ]
[ "monet_cwd",		  "/local/home/monet/IRIX64-IP27/mTests/src/tools"	  ]
view_gdk_io().print();
#-------------------------#
# gdk		io	  # name
# str		int	  # type
#-------------------------#
[ "maxrss",	  5760	  ]
[ "minflt",	  245	  ]
[ "majflt",	  0	  ]
[ "nswap",	  0	  ]
[ "inblock",	  4	  ]
[ "oublock",	  0	  ]
[ "nvcsw",	  2	  ]
[ "ninvcsw",	  1	  ]
view_gdk_memory().print();
#---------------------------------#
# gdk		mem		  # name
# str		int		  # type
#---------------------------------#
[ "memincr",	  0		  ]
[ "arena",	  2973664	  ]
[ "ordblks",	  9755		  ]
[ "smblks",	  3900		  ]
[ "hblkhd",	  1872		  ]
[ "hblks",	  39		  ]
[ "usmblks",	  102864	  ]
[ "fsmblks",	  21936		  ]
[ "uordblks",	  2438096	  ]
[ "fordblks",	  408896	  ]
view_gdk_thread().print();
#-------------------------#
# gdk	thread		  # name
# int	str		  # type
#-------------------------#
[ 1,	  "Interpreter"	  ]

printf("#~EndVariableOutput~#\n");
#~EndVariableOutput~#

printf("End of MIL script.\n");
End of MIL script.

quit();

# 16:56:06 >  
# 16:56:06 >  Done.
# 16:56:06 >  

