stdout of test 'bat_insert` in directory 'monet/src/gdk` itself:

#> Mtest (18:51:37):	milM bat_insert milM
#> Mtest (18:51:37):	Mtimeout -timeout 600 Mserver -modulesilent -yaccsilent -d8 -db monet_src_gdk bat_insert.milM
# Monet Database Server V4.2
# Copyright (c) 1993-1999, CWI & SION. All rights reserved.
# compiled for mips-sgi-irix6.5/32bit.
#script:bat_insert.milM

loaded;
#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "algebra",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "kernel",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

Try: modules;                - for other modules.
     ls;                     - for persistent bat listing.
     sigs("<module>")        - for available commands per module.
     help("<command>")       - for help one-liner for a command.

#You are system administrator (adm)!
PROC check_cap(BAT _b) : void := {
	VAR inserted := count(_b);
	VAR deleted := count(delta(_b));
	VAR cap := capacity(_b);
	VAR overflow := (inserted + deleted) - cap;
	IF (overflow > 0) {
		printf("!ERROR: wrote %d BUNs beyond capacity\n",overflow);
	}
}

VAR b := new(oid,oid);
b.rename("b");
b.persists(true);

VAR cap := (capacity(b) / 4) + 1;

VAR i := cap * 3;
WHILE (i > 0) {
	b.insert(oid(i),oid(i));
	i := i - 1;
}

commit;

VAR i := cap * 2;
WHILE (i > 0) {
        b.delete(oid(i));
        i := i - 1;
}

VAR c := new(oid,oid);
VAR i := cap * 2;
WHILE (i > 0) {
	c.insert(oid(i),oid(i));
	i := i - 1;
}

b := b.insert(c);
check_cap(b);

b.persists(false);

commit;
