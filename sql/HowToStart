This document will help you compile and install the Monet SQL front end.

This document assumes that you have installed MonetDB
on a Unix system (e.g., Linux, IRIX, Solaris, AIX, or CYGWIN).

Prerequisites:
==============

CVS
	You need to have a working CVS.  For instructions, see
	http://sourceforge.net/docman/?group_id=1 and look under the
	heading CVS Instructions.

Python
	MonetDB uses Python (version 1.5.2 or better) during
	configuration of the software.  See http://www.python.org/ for
	more information.

autoconf/automake/libtool 
	MonetDB uses GNU autoconf, automake, and libtool during
	configuration of the software.  See
	http://www.gnu.org/software/autoconf/,
	http://www.gnu.org/software/automake/, and
	http://www.gnu.org/software/libtool/ for more information.
	Libtool is also used during the build.

standard software development tools
	To compile MonetDB, you also need to have a the following 
	standard software development tools installed and ready for use
	on you system:
	 - a C/C++ compiler (e.g., GNU's gcc/g++)
	 - a lexical analyzer generator (e.g., "lex" or "flex")
	 - a parser generator (e.g., "yacc" or "bison")

disk space
	After downloading, MonetDB takes up about 45 MB of disk space;
	compilation adds another 30 MB.  Testing takes about 150 MB, and
	the installation about 10 MB (not including any databases).


Getting the Software:
=====================

This command should be done once.  It records a password on the local
machine to be used for all subsequent CVS accesses with this server.

 cvs -d:pserver:anonymous@cvs.monetdb.sourceforge.net:/cvsroot/monetdb login

Just type RETURN when asked for the password.

Then get the software by using the command:

 cvs -d:pserver:anonymous@cvs.monetdb.sourceforge.net:/cvsroot/monetdb checkout sql

This will create a directory 'sql' in your current working directory.

Also see http://sourceforge.net/cvs/?group_id=56967 for more
information.


Configure and Make:
===================

In the top-level directory of 'sql' type the command:

 ./bootstrap

If it responds with an error message, it means the Monet server 
could not be found, or less likely, you have not installed 
MonetDB properly.

Then in any directory (a new empty directory or in the sql top-level
directory) give the command

 .../configure --prefix=<monet_dir>

where ... is replaced with the (absolute or relative) path to the
sql top-level directory and <monet_dir> denotes the location where you
have installed Monet (default /usr/local).
The directory where you execute configure is the place where all 
intermediate source and object files are generated during compilation 
via "make".

The Monet SQL front end is installed this way in the same location
as the Monet server code. If you prefer installation in the current
directory, you need to call  configure  without arguments.
(Use the --help option of configure to find out about configure options).

In the same directory (where you called configure) give the command

 make

to compile the source code.

On my lightly loaded, dual 1.4 GHz Athlon Linux system, configure takes
about 15 seconds, and make about one minute.


Installing:
===========
Give the command

 make install

By default this will install in <monet_dir>.  Make sure you have appropriate 
privileges.


Testing the Installation:
=========================

Testing the sql front end is preferably done before you install the 
components in their final location. If you install the code base in its
default location, you can test the system as follows.
In the sql top-level directory issue the command

 Mtest_sql  -r

It will run a large number of SQL tests to assure correct installation.

If, however, you have installed the code in <monet_dir> you need to type
more. Let ... denote the absolute or relative path to the sql top-level
directory. Then, the test runs as follows from the sql top-level directory :

Mtest.py --TSTSRCBASE=... --TSTBLDBASE=.../Linux --TSTTRGBASE=<monet_dir> -r

Make sure that /usr/local/bin (respectively <prefixdir>/bin, where
<prefixdir> is the directory you specified with --prefix when calling
configure) is in your PATH.

You need write permissions on part of the installation directory for
this command: it will create subdirectories var/dbfarm and Tests.


Documentation:
==============

The documentation starts in <monet_dir>/doc/monet.html

NOTE: the current 'make install' does not yet generate this
      documentation to do this manually, execute *after* successful
      'make install'. In the top-level directory of the MonetDB build
      tree, call

 make html


Troubleshooting:
================

Bootstrap fails if any of the requisite programs can not be found or
is an incompatible version.

Bootstrap adds files to the source directory, so it must have write
permissions.

Configure will fail if certain essential programs can't be found or
certain essential tasks (such as compiling a C program) can't be
executed.  The problem will usually be clear from the error message.
