@' The contents of this file are subject to the MonetDB Public
@' License Version 1.0 (the "License"); you may not use this file
@' except in compliance with the License. You may obtain a copy of
@' the License at 
@' http://monetdb.cwi.nl/Legal/MonetDBLicense-1.0.html
@' 
@' Software distributed under the License is distributed on an "AS
@' IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
@' implied. See the License for the specific language governing
@' rights and limitations under the License.
@' 
@' The Original Code is the Monet Database System.
@' 
@' The Initial Developer of the Original Code is CWI.
@' Portions created by CWI are Copyright (C) 1997-2002 CWI.  
@' All Rights Reserved.
@' 
@' Contributor(s):
@' 		Martin Kersten <Martin.Kersten@cwi.nl>
@' 		Niels Nes <Niels.Nes@cwi.nl>
@' 		Stefan Manegold <Stefan.Manegold@cwi.nl>
@' 		Peter Boncz <Peter.Boncz@cwi.nl>

@f mem
@a N.J. Nes
@* 

@h
#ifndef _MEM_H_ 
#define _MEM_H_ 

#include <config.h>

#ifdef _MSC_VER
#include <sql_config.h>
#endif

#include <stdio.h>
#include <assert.h>

#ifdef HAVE_MALLOC_H 
#include <malloc.h>
#endif

#ifdef _MSC_VER
#ifndef LIBSQL
#define sql_export extern __declspec(dllimport)
#else
#define sql_export extern __declspec(dllexport)
#endif
#else
#define sql_export extern
#endif

sql_export void* 	GDKmalloc  (size_t size);
sql_export void* 	GDKrealloc (void* pold, size_t size);
sql_export void		GDKfree    (void* blk); 
sql_export char*	GDKstrdup  (char *s);

#define NEW( type ) (type*)GDKmalloc(sizeof(type) )
#define NEW_ARRAY( type, size ) (type*)GDKmalloc((size)*sizeof(type))
#define RENEW_ARRAY( type,ptr,size) (type*)GDKrealloc((void*)ptr,(size)*sizeof(type))
#define NEWADT( size ) (adt*)GDKmalloc(size)
#define _DELETE( ptr )	GDKfree(ptr)
#define _strdup( ptr )	GDKstrdup((char*)ptr)

typedef struct sql_ref {
	int refcnt;
} sql_ref;

extern sql_ref *sql_ref_init( sql_ref *r );
extern int sql_ref_inc( sql_ref *r );
extern int sql_ref_dec( sql_ref *r );

#endif /*_MEM_H_*/

@c

#include <mem.h>

sql_ref *sql_ref_init (sql_ref *r)
{
	r->refcnt = 1;
	return r;
}

int sql_ref_inc(sql_ref *r)
{
	return (++r->refcnt);
}

int sql_ref_dec(sql_ref *r)
{
	assert(r->refcnt > 0);
	return (--r->refcnt);
}

