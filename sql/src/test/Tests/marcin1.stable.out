stdout of test 'marcin1` in directory 'src/test` itself:


# 20:07:32 >  
# 20:07:32 >  Mtimeout -timeout 180 Mserver "--config=/ufs/niels/data/Linux-i686/etc/monet.conf" --debug=0 --set "monet_mod_path=/ufs/niels/data/Linux-i686/lib/MonetDB" --dbfarm "/ufs/niels/data/Linux-i686/var/dbfarm" --set monet_prompt= --trace "--dbname=mTests_src_test" --set sql_port=50445 "/ufs/niels/data/Linux-i686/share/MonetDB/sqlserver.mil" ; echo ; echo Over..
# 20:07:32 >  

# Monet Database Server V4.3.9
# Copyright (c) 1993-2003, CWI. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit; dynamically linked.
printf("\nReady.\n");

Ready.
quit;

Over..

# 20:07:32 >  
# 20:07:32 >  Mtimeout -timeout 60 Msql -u monetdb -P monetdb --host=stem --port=50445 < marcin1.sql
# 20:07:32 >  

SQL  connected to database mTests_src_test using schema sys
#     1: 0 ############################
#     2: 0 
#     3: 1 create table t1(id int, val int);
#     4: 1 create table t2(id int, val int);
#     5: 1 insert into t1 values(1,1);
#     6: 1 insert into t1 values(2,2);
#     7: 1 insert into t1 values(3,3);
#     8: 1 insert into t1 values(4,4);
#     9: 1 insert into t1 values(5,5);
#    10: 1 insert into t2 values(1,3);
#    11: 1 insert into t2 values(2,2);
#    12: 1 insert into t2 values(3,1);
#    13: 0 
#    14: 0 #and now some strange queries and even stranger results
#    15: 0 
#    16: 0 #cartesian-product missing
#    17: 1 select * from t1,t2;
#-----------------------
#| id | val | id | val |
#-----------------------
1	1	1	3
2	2	1	3
3	3	1	3
4	4	1	3
5	5	1	3
1	1	2	2
2	2	2	2
3	3	2	2
4	4	2	2
5	5	2	2
1	1	3	1
2	2	3	1
3	3	3	1
4	4	3	1
5	5	3	1
SQL  15 Rows affected
#    18: 0 
#    19: 0 #These actually give good results (cartesian-product like):
#    20: 1 select t1.id,t2.id from t1,t2 where t1.id<>t2.id;
#-----------
#| id | id |
#-----------
1	2
1	3
2	1
2	3
3	1
3	2
4	1
4	2
4	3
5	1
5	2
5	3
SQL  12 Rows affected
#    21: 1 select t1.id,t2.id from t1,t2 where t1.id>t2.id;
#-----------
#| id | id |
#-----------
2	1
3	1
3	2
4	1
4	2
4	3
5	1
5	2
5	3
SQL  9 Rows affected
#    22: 0 
#    23: 0 #does not work (and should, assuming ids are unique)
#    24: 1 select t1.id, (select t2.id from t2 where t1.id=t2.id) from t1;
#-----------
#| id | id |
#-----------
1	1
2	2
3	3
4	nil
5	nil
SQL  5 Rows affected
#    25: 0 
#    26: 0 # As the sub-select returns a single value (3), no error occures
#    27: 1 select t1.id, (select t2.id from t2 where t2.id>2) from t1;
#-----------
#| id | id |
#-----------
1	3
2	3
3	3
4	3
5	3
SQL  5 Rows affected
#    28: 0 
#    29: 0 #Return only columns from first table
#    30: 1 select * from t2,t1 where t1.id=t2.id;
#-----------------------
#| id | val | id | val |
#-----------------------
1	3	1	1
2	2	2	2
3	1	3	3
SQL  3 Rows affected
#    31: 1 select * from t1,t2 where t1.id=t2.id;
#-----------------------
#| id | val | id | val |
#-----------------------
1	1	1	3
2	2	2	2
3	3	3	1
SQL  3 Rows affected
#    32: 0 
#    33: 0 #I'm not sure if t2.* is allowed but anyway it's strange
#    34: 1 select * from t2;
#------------
#| id | val |
#------------
1	3
2	2
3	1
SQL  3 Rows affected
#    35: 1 select t2.* from t2;
#------------
#| id | val |
#------------
1	3
2	2
3	1
SQL  3 Rows affected
#    36: 0 
#    37: 0 #wrong subsets
#    38: 1 select * from t1 where id>2;
#------------
#| id | val |
#------------
3	3
4	4
5	5
SQL  3 Rows affected
#    39: 1 select * from t1 where id>2 and id<2;
#------------
#| id | val |
#------------
SQL  no Rows affected
#    40: 0 
#    41: 1 drop table t1;
#    42: 1 drop table t2;

# 19:16:12 >  
# 19:16:12 >  Done.
# 19:16:12 >  

