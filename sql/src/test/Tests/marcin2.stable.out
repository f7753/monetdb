stdout of test 'marcin2` in directory 'src/test` itself:


# 20:07:33 >  
# 20:07:33 >  Mtimeout -timeout 180 Mserver "--config=/ufs/niels/data/Linux-i686/etc/monet.conf" --debug=0 --set "monet_mod_path=/ufs/niels/data/Linux-i686/lib/MonetDB" --dbfarm "/ufs/niels/data/Linux-i686/var/dbfarm" --set monet_prompt= --trace "--dbname=mTests_src_test" --set sql_port=50445 "/ufs/niels/data/Linux-i686/share/MonetDB/sqlserver.mil" ; echo ; echo Over..
# 20:07:33 >  

# Monet Database Server V4.3.9
# Copyright (c) 1993-2003, CWI. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit; dynamically linked.
printf("\nReady.\n");

Ready.
quit;

Over..

# 20:07:33 >  
# 20:07:33 >  Mtimeout -timeout 60 Msql -u monetdb -P monetdb --host=stem --port=50445 < marcin2.sql
# 20:07:33 >  

SQL  connected to database mTests_src_test using schema sys
#     1: 1 create table t3(id int, val int);
#     2: 1 insert into t3 values(2,6);
#     3: 1 insert into t3 values(2,NULL);
#     4: 1 insert into t3 values(2,5);
#     5: 1 insert into t3 values(1,NULL);
#     6: 1 insert into t3 values(1,5);
#     7: 1 insert into t3 values(1,6);
#     8: 1 insert into t3 values(NULL,5);
#     9: 1 insert into t3 values(NULL,6);
#    10: 1 insert into t3 values(NULL,NULL);
#    11: 0 
#    12: 0 #those 2 don't sort (bad server_output?)
#    13: 1 select * from t3 order by val;
#------------
#| id | val |
#------------
1	nil
nil	nil
2	nil
1	5
2	5
nil	5
2	6
nil	6
1	6
SQL  9 Rows affected
#    14: 1 select * from t3 order by id;
#------------
#| id | val |
#------------
nil	nil
nil	5
nil	6
1	5
1	nil
1	6
2	6
2	5
2	nil
SQL  9 Rows affected
#    15: 0 
#    16: 0 #but those 2 do
#    17: 1 select * from t3 order by val,id;
#------------
#| id | val |
#------------
nil	nil
1	nil
2	nil
nil	5
1	5
2	5
nil	6
1	6
2	6
SQL  9 Rows affected
#    18: 1 select * from t3 order by id,val;
#------------
#| id | val |
#------------
nil	nil
nil	5
nil	6
1	nil
1	5
1	6
2	nil
2	5
2	6
SQL  9 Rows affected
#    19: 0 
#    20: 0 #this one works, and I think it shouldn't
#    21: 0 # postgres just sums the first column (result 9)
#    22: 1 select sum(*) from t3;
SQL ERROR -1 2: Aggregate: Cannot do a sum(*) in:
-- this one works, and I think it shouldn't
--  postgres just sums the first column (result 9)
select sum(*) from t3;

#    23: 0 
#    24: 0 #this one, although wrong, results in core-dump of sql_client :)
#    25: 0 # postgres just sums the first column of the group (result (3,5)(3,6)(3,nil))
#    26: 1 select sum(*),val from t3 group by val ;
SQL ERROR -1 2: Aggregate: Cannot do a sum(*) in:
-- this one, although wrong, results in core-dump of sql_client :)
--  postgres just sums the first column of the group (result (3,5)(3,6)(3,nil))
select sum(*),val from t3 group by val ;

#    27: 0 
#    28: 1 drop table t3;

# 20:07:33 >  
# 20:07:33 >  Done.
# 20:07:33 >  

