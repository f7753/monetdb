stdout of test 'sigs` in directory 'src` itself:


# 21:09:20 >  
# 21:09:20 >  Mtimeout -timeout 60 Mserver "--config=/var/tmp/_PREFIX_MONET_GNU_32_d__/etc/monet.conf" --debug=10 --set "monet_mod_path=/var/tmp/_PREFIX_MONET_GNU_32_d__/lib/MonetDB:/var/tmp/_PREFIX_SQL_GNU_32_d__/lib/MonetDB" --dbfarm "/var/tmp/_PREFIX_MONET_GNU_32_d__/var/dbfarm" --set monet_prompt= --trace --dbname=mTests_src  < sigs.milS
# 21:09:20 >  

# Monet Database Server V4.3.9
# Copyright (c) 1993-2003, CWI. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit; dynamically linked.
var mods := new(void,str);
mods.insert(nil,"sqlserver");

mods@batloop{
	printf("module '%s'\n",$t);
	module($t);
	sigs($t);
	drop($t);
}
module 'sqlserver'
#---------------------------------------------------------------------------------#
# signature									  #
#---------------------------------------------------------------------------------#
[ "append(BAT[void,any::1], BAT[oid,any::1]) : BAT[void,any::1]"		  ]
[ "append(BAT[void,any::1], BAT[void,any::1]) : BAT[void,any::1]"		  ]
[ "isNil(str) : bit"								  ]
[ "mvc_admin_login(mvc) : str"							  ]
[ "mvc_bind(mvc, str, str, str, int) : BAT[any::1,any::2]"			  ]
[ "mvc_bind_column(mvc, sql_table, str) : sql_column"				  ]
[ "mvc_bind_dbat(mvc, str, str, int) : BAT[any::1,any::2]"			  ]
[ "mvc_bind_key(mvc, sql_table, str) : sql_key"					  ]
[ "mvc_bind_obat(mvc, str, str, int) : BAT[any::1,any::2]"			  ]
[ "mvc_bind_schema(mvc, str) : sql_schema"					  ]
[ "mvc_bind_table(mvc, sql_schema, str) : sql_table"				  ]
[ "mvc_bind_ubat(mvc, str, str, str, int) : BAT[any::1,any::2]"			  ]
[ "mvc_commit(mvc, int, str) : int"						  ]
[ "mvc_create(int) : mvc"							  ]
[ "mvc_create_column(mvc, sql_table, str, str, int, int, int) : sql_column"	  ]
[ "mvc_create_key(mvc, str, str, str, int, BAT[str,int], sql_key) : sql_key"	  ]
[ "mvc_create_schema(mvc, str, str) : sql_schema"				  ]
[ "mvc_create_table(mvc, sql_schema, str, int) : sql_table"			  ]
[ "mvc_create_view(mvc, sql_schema, str, str) : sql_table"			  ]
[ "mvc_default(mvc, sql_column, str) : sql_column"				  ]
[ "mvc_destroy(mvc) : void"							  ]
[ "mvc_drop_column(mvc, sql_table, str) : void"					  ]
[ "mvc_drop_schema(mvc, str) : void"						  ]
[ "mvc_drop_table(mvc, sql_schema, str, bit) : void"				  ]
[ "mvc_exit() : void"								  ]
[ "mvc_export(Stream, BAT[void,void], BAT[void,void], str, str) : void"		  ]
[ "mvc_import_table(mvc, Stream, str, str, str, int) : int"			  ]
[ "mvc_init(int, str) : void"							  ]
[ "mvc_login(mvc, str, str) : str"						  ]
[ "mvc_null(mvc, sql_column, int) : sql_column"					  ]
[ "mvc_release(mvc, str) : int"							  ]
[ "mvc_rollback(mvc, int, str) : int"						  ]
[ "mvc_set_iso_level(mvc, int) : int"						  ]
[ "mvc_status(mvc) : int"							  ]
[ "mvc_type(mvc) : int"								  ]
[ "renumber(BAT[oid,any::1], oid) : BAT[oid,any::1]"				  ]
[ "socket_close(int) : void"							  ]
[ "socket_dup(int) : int"							  ]
[ "sql_aggr(str, str, str, str) : void"						  ]
[ "sql_alias(str, str) : void"							  ]
[ "sql_create_context(int, Stream, mvc, str, str) : context"			  ]
[ "sql_destroy_context(context) : void"						  ]
[ "sql_func(str, str, str, str, str, str) : void"				  ]
[ "sql_type(str, str) : void"							  ]
[ "sqlclient( mvc m,  context c, Stream in, Stream out ) "			  ]
[ "sqlserver_start(int port, str cmd) "						  ]
[ "types_exit() : void"								  ]
[ "types_init(int) : void"							  ]

quit;

# 21:09:21 >  
# 21:09:21 >  Done.
# 21:09:21 >  

