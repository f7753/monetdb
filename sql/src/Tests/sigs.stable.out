stdout of test 'sigs` in directory 'src` itself:


# 21:25:54 >  
# 21:25:54 >  Mtimeout -timeout 60 Mserver "--config=/ufs/niels/data/Linux-i686/etc/monet.conf" --debug=10 --set "monet_mod_path=/ufs/niels/data/Linux-i686/lib/MonetDB" --dbfarm "/ufs/niels/data/Linux-i686/var/dbfarm" --set monet_prompt= --trace --dbname=mTests_src  < sigs.milS
# 21:25:54 >  

# Monet Database Server V4.3.9
# Copyright (c) 1993-2004, CWI. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit; dynamically linked.
var mods := new(void,str);
mods.insert(nil,"sql_server");

mods@batloop{
	printf("module '%s'\n",$t);
	module($t);
	sigs($t);
	drop($t);
}
module 'sql_server'
#---------------------------------------------------------------------------------#
# signature									  #
#---------------------------------------------------------------------------------#
[ "append(BAT[oid,any::1], BAT[oid,any::1]) : BAT[oid,any::1]"			  ]
[ "append(BAT[oid,any::1], any::1) : BAT[oid,any::1]"				  ]
[ "append(BAT[oid,void], BAT[oid,void]) : BAT[oid,void]"			  ]
[ "append(BAT[void,any::1], BAT[oid,any::1]) : BAT[void,any::1]"		  ]
[ "append(BAT[void,any::1], BAT[void,any::1]) : BAT[void,any::1]"		  ]
[ "append(BAT[void,any::1], any::1) : BAT[void,any::1]"				  ]
[ "hash(any::1, int) : int"							  ]
[ "mvc_bind(mvc, str, str, str, int) : BAT[any::1,any::2]"			  ]
[ "mvc_bind_column(mvc, sql_table, str) : sql_column"				  ]
[ "mvc_bind_dbat(mvc, str, str, int) : BAT[any::1,any::2]"			  ]
[ "mvc_bind_ibat(mvc, str, str, str, int) : BAT[any::1,any::2]"		  ]
[ "mvc_bind_idx(mvc, sql_schema, str) : sql_idx"			  ]
[ "mvc_bind_key(mvc, sql_schema, str) : sql_key"			  ]
[ "mvc_bind_module(mvc, str) : sql_module"				  ]
[ "mvc_bind_schema(mvc, str) : sql_schema"					  ]
[ "mvc_bind_table(mvc, sql_schema, str) : sql_table"				  ]
[ "mvc_bind_ubat(mvc, str, str, str, int) : BAT[any::1,any::2]"			  ]
[ "mvc_commit(mvc, int, str) : int"						  ]
[ "mvc_create( int debug, Stream rs, Stream ws ) : mvc "		  ]
[ "mvc_create_column(mvc, sql_table, str, str, int, int) : sql_column"	  ]
[ "mvc_create_ic(mvc, sql_idx, str) : sql_idx"				  ]
[ "mvc_create_idx(mvc, sql_table, str, int) : sql_idx"			  ]
[ "mvc_create_kc(mvc, sql_key, str) : sql_key"				  ]
[ "mvc_create_key(mvc, sql_table, str, int) : sql_key"			  ]
[ "mvc_create_key(mvc, sql_table, str, int, sql_key) : sql_key"		  ]
[ "mvc_create_module(mvc, str) : sql_module"				  ]
[ "mvc_create_role(mvc, str, int) : void"				  ]
[ "mvc_create_schema(mvc, str, str) : sql_schema"				  ]
[ "mvc_create_table(mvc, sql_schema, str, int, int) : sql_table"	  ]
[ "mvc_create_user(mvc, str, str, str, str, int) : void"			  ]
[ "mvc_create_view(mvc, sql_schema, str, str) : sql_table"			  ]
[ "mvc_default(mvc, sql_column, str) : sql_column"				  ]
[ "mvc_destroy(mvc) : void"							  ]
[ "mvc_drop_column(mvc, sql_table, str) : void"					  ]
[ "mvc_drop_idx(mvc, sql_schema, str) : void"				  ]
[ "mvc_drop_key(mvc, sql_schema, str) : void"				  ]
[ "mvc_drop_module(mvc, str) : void"					  ]
[ "mvc_drop_role(mvc, str) : void"					  ]
[ "mvc_drop_schema(mvc, str) : void"						  ]
[ "mvc_drop_table(mvc, sql_schema, str, int) : void"			  ]
[ "mvc_drop_user(mvc, str) : void"					  ]
[ "mvc_export_result(mvc, Stream, int) : void"					  ]
[ "mvc_export_table(mvc, Stream, int, int, int) : void"			  ]
[ "mvc_import_table(mvc, Stream, str, str, str, int) : BAT[str,BAT]"		  ]
[ "mvc_init(int debug) "						  ]
[ "mvc_login(mvc, str, str) : str"						  ]
[ "mvc_null(mvc, sql_column, int) : sql_column"					  ]
[ "mvc_release(mvc, str) : int"							  ]
[ "mvc_result_column(mvc, str, str, int, int, BAT[oid,any]) : void"		  ]
[ "mvc_result_column(mvc, str, str, int, int, any) : void"			  ]
[ "mvc_result_table(mvc, int, BAT[oid,any]) : int"				  ]
[ "mvc_result_table(mvc, int, any) : int"					  ]
[ "mvc_rollback(mvc, int, str) : int"						  ]
[ "mvc_set_iso_level(mvc, int) : int"						  ]
[ "mvc_sql(mvc, str) : void"						  ]
[ "mvc_status(mvc) : int"							  ]
[ "mvc_type(mvc) : int"								  ]
[ "quit() "								  ]
[ "replace(BAT[void,any::1], BAT[oid,any::1]) : BAT[void,any::1]"		  ]
[ "senddata(Stream) : void"							  ]
[ "sqlclient( Stream s_in, Stream s_out ) "					  ]

quit;

# 21:25:54 >  
# 21:25:54 >  Done.
# 21:25:54 >  

