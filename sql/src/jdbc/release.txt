RELEASE NOTES
MonetDB JDBC driver version 1.1 (Rise-)
Fabian Groffen <Fabian.Groffen@cwi.nl>

Release date: 2005-01-21

This JDBC driver is designed for use with MonetDB, a main-memory database.  For
more information see http://monetdb.cwi.nl/.

Within the current implementation not all functionalities of the JDBC interface
are available.  It is believed, however, that this implementation is rich enough
to be suitable for a majority of application settings.

Below a list of supported features can be found.  Please read this list if you
intend to use this driver.  If you feel some features are missing, please let
us know at our SourceForge feature request page:
http://sourceforge.net/tracker/?group_id=56967&atid=482471

Feel free to file bugs, when they appear, at our SourceForge bug page as well.


Currently implemented:
  * java.sql.Driver interface
  * javax.sql.DataSource interface (not tested)
  * java.sql.Connection interface
    The next features are not implemented:
    - createStatement with result set holdability
    - nativeSQL (there is no query parsing for JDBC escapes yet)
    - prepareCall (CallableStatement not supported)
    - prepareStatement with more than just an SQL prepare statement
    - getCatalog/setCatalog (there is no catalog management yet)
    - getHoldability/setHoldability (close/hold cursors over commit is not
      configurable)
    - isReadOnly/setReadOnly (updatable result sets are not supported at all)

    NOTE: be sure to check for warnings after setting concurrencies or
          isolation levels; MonetDB currently does not support anything else
          but completely serializable transactions.
  * java.sql.Statement interface
    The next features are not implemented:
    - cancel/getQueryTimeout/setQueryTimeout (query execution cannot be
      terminated, once started)
    - execute with more than just an SQL query
    - executeUpdate with more than just an SQL query
    - getGeneratedKeys
    - getMaxFieldSize/setMaxFieldSize
    - getResultSetHoldability
    - setCursorName
    - setEscapeProcessing
  * java.sql.PreparedStatement interface
    The next features are not implemented:
    - getMetaData
    - getParameterMetaData
    - setArray
    - setAsciiStream, setBinaryStream, setCharacterStream, setUnicodeStream
    - setBlob, setClob
    - setBytes
    - getObject with more than just the index and the object
    - setRef, setURI
  * java.sql.ResultSet interface
    The next features are not implemented:
    - getArray
    - getAsciiStream, getBinaryStream, getUnicodeStream, getCharacterStream
    - getBlob, getClob
    - getRef, getURL
    - all methods related to updatable result sets
    * java.sql.ResultSetMetaData interface
      The next features are not implemented:
      - isCaseSensitive
      - isSearchable
      - isCurrency
      - isNullable
      - isSigned
      - getSchemaName
      - getPrecision
      - getScale
      - getCatalogName
      - getColumnClassName
  * java.sql.DatabaseMetaData interface
  * java.sql.SavePoint interface

- The getObject methods do not return all types correct, and currently ignore
  any given type map.
- The PreparedStatement is currently a client side simulation of a prepared
  statement.  It does not really prepare on the server side.
- Auto-commit behavior is defined by the server which handles the auto-commit.
