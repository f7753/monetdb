module(sqlserver);
module(str);
module(sys);

types_init(1);

sql_type("OID", "oid", "");

sql_type("BOOL", "bit", "");

sql_type("VARCHAR(1)", "chr", "");
sql_type("CHARACTER", "str", "VARCHAR(1)");
sql_type("VARCHAR", "str", "CHARACTER");
sql_type("STRING", "str", "VARCHAR");

sql_type("NUMERIC", "int", "STRING");
sql_type("DECIMAL", "int", "NUMERIC");
sql_type("INTEGER", "int", "DECIMAL");
sql_type("SMALLINT", "int", "INTEGER");
sql_type("UBYTE", "uchr", "INTEGER");

sql_type("FLOAT", "flt", "INTEGER");
sql_type("REAL", "flt", "FLOAT");
sql_type("DOUBLE", "dbl", "REAL");

sql_type("MONTH_INTERVAL", "int", "INTEGER");
sql_type("SEC_INTERVAL", "int", "INTEGER");
sql_type("DATE", "date", "STRING");
sql_type("TIME", "str", "STRING");
sql_type("TIMESTAMP", "str", "STRING");

var strings := new(str,str);
strings.insert("VARCHAR(1)", "chr");
strings.insert("CHARACTER", "str");
strings.insert("VARCHAR", "str");
strings.insert("STRING", "str");

var numerical := new(str,str);
numerical.insert("NUMERIC", "int");
numerical.insert("DECIMAL", "int");
numerical.insert("INTEGER", "int");
numerical.insert("SMALLINT", "int");
numerical.insert("UBYTE", "uchr");
numerical.insert("FLOAT", "flt");
numerical.insert("REAL", "flt");
numerical.insert("DOUBLE", "dbl");

var dates := new(str,str);
dates.insert("MONTH_INTERVAL", "int");
dates.insert("SEC_INTERVAL", "int");
dates.insert("DATE", "date");
dates.insert("TIME", "str");
dates.insert("TIMESTAMP", "str");

var type_sql := bat(str,str);
type_sql.insert(strings.reverse());
type_sql.insert(numerical.reverse());
type_sql.insert(dates.reverse());

type_sql@batloop(){ sql_aggr( "min", "min", $t, $t ); }
type_sql@batloop(){ sql_aggr( "max", "max", $t, $t ); }
type_sql@batloop(){ sql_aggr( "sum", "sum", $t, $t ); }
type_sql@batloop(){ sql_aggr( "avg", "avg", $t, $t ); }
sql_aggr( "count", "count", "", "INTEGER" ); 

numerical@batloop(){ sql_func( "sub", "-", $h, $h, "", $h ); }
numerical@batloop(){ sql_func( "add", "+", $h, $h, "", $h ); }
numerical@batloop(){ sql_func( "mul", "*", $h, $h, "", $h ); }
numerical@batloop(){ sql_func( "div", "/", $h, $h, "", $h ); }

numerical@batloop(){ sql_func( "neg", "-", $h, "", "", $h ); }
numerical@batloop(){ sql_func( "pos", "+", $h, "", "", $h ); }

numerical@batloop(){ 
	var hd := $h; 
	numerical@batloop(){ 
		if ($h != hd){
		    sql_func( "convert", $t, hd, "", "", $h );
		}
	}
}

strings@batloop(){ 
	var hd := $h; 
	strings@batloop(){ 
		if ($h != hd){
		    sql_func( "convert", $t, hd, "", "", $h );
		}
	}
}
strings@batloop(){ 
	var hd := $h; 
	numerical@batloop(){ 
		sql_func( "convert", $t, hd, "", "", $h );
	}
}

var floats := numerical.select("dbl").union(numerical.select("flt"));
floats@batloop(){ 
	sql_func( "floor", "floor", $h, "", "", $h ); 
}

sql_func( "sub", "date_sub_sec_interval", "DATE", "SEC_INTERVAL", "", "DATE");
sql_func( "sub", "date_sub_month_interval", "DATE", "MONTH_INTERVAL", "", "DATE");

sql_func( "add", "date_add_sec_interval", "DATE", "SEC_INTERVAL", "", "DATE");
sql_func( "add", "addmonths", "DATE", "MONTH_INTERVAL", "", "DATE");

sql_func( ">", ">", "DATE", "DATE", "", "BOOL");
sql_func( "<", "<", "DATE", "DATE", "", "BOOL");

sql_func( "year", "year", "DATE", "", "", "INTEGER");
sql_func( "month", "month", "DATE", "", "", "INTEGER");

sql_func( "substring", "string", "STRING", "INTEGER", "INTEGER", "STRING");
sql_func( "strconcat", "+", "STRING", "STRING", "", "STRING");
sql_func( "substring", "string", "VARCHAR", "INTEGER", "INTEGER", "VARCHAR");
sql_func( "strconcat", "+", "VARCHAR", "VARCHAR", "", "VARCHAR");

var sql_log_dir := view_gdk_env.find("gdk_dir");
mvc_init(1,sql_log_dir);

