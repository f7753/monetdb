# Makefile.in generated automatically by automake 1.4 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ../../..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@
AS = @AS@
CC = @CC@
CFLAGS = @CFLAGS@
CPP = @CPP@
CXXFLAGS = @CXXFLAGS@
DLLTOOL = @DLLTOOL@
GDKLIBS = @GDKLIBS@
LEX = @LEX@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
MAKEINFO = @MAKEINFO@
MONETDIST = @MONETDIST@
MONET_CONFIG = @MONET_CONFIG@
MV = @MV@
OBJC = @OBJC@
OBJDUMP = @OBJDUMP@
PACKAGE = @PACKAGE@
RANLIB = @RANLIB@
READLINE_LIBS = @READLINE_LIBS@
RM = @RM@
VERSION = @VERSION@
YACC = @YACC@
thread_safe_flag_spec = @thread_safe_flag_spec@

AUTOMAKE_OPTIONS = no-dependencies 1.4 foreign

CXXEXT = \"cc\"

INCLUDES = -I$(srcdir)/../include -I. $(ODBC_CFLAGS) -I$(top_srcdir)/include -I$(top_srcdir)/src/parser -I$(MONETDIST)/include/plain -I$(top_builddir)/
libMonetODBC_la_LIBADD = ${top_builddir}/src/parser/libsql.la -L$(MONETDIST)/lib -lstream -lm
libMonetODBC_la_SOURCES = SQLAllocConnect.c SQLAllocEnv.c SQLAllocHandle.c SQLAllocStmt.c SQLBindCol.c SQLBindParameter.c SQLBrowseConnect.c SQLBulkOperations.c SQLCancel.c SQLCloseCursor.c SQLColAttribute.c SQLColAttributes.c SQLColumnPrivileges.c SQLColumns.c SQLConnect.c SQLCopyDesc.c SQLDescribeCol.c SQLDescribeParam.c SQLDisconnect.c SQLDriverConnect.c SQLEndTran.c SQLError.c SQLExecDirect.c SQLExecute.c SQLExtendedFetch.c SQLFetch.c SQLFetchScroll.c SQLForeignKeys.c SQLFreeConnect.c SQLFreeEnv.c SQLFreeHandle.c SQLFreeStmt.c SQLGetConnectAttr.c SQLGetConnectOption.c SQLGetCursorName.c SQLGetData.c SQLGetDescField.c SQLGetDescRec.c SQLGetDiagField.c SQLGetDiagRec.c SQLGetEnvAttr.c SQLGetInfo.c SQLGetStmtAttr.c SQLGetStmtOption.c SQLGetTypeInfo.c SQLMoreResults.c SQLNativeSql.c SQLNumParams.c SQLNumResultCols.c SQLParamData.c SQLParamOptions.c SQLPrepare.c SQLPrimaryKeys.c SQLProcedureColumns.c SQLProcedures.c SQLPutData.c SQLRowCount.c SQLSetConnectOption.c SQLSetCursorName.c SQLSetDescField.c SQLSetDescRec.c SQLSetEnvAttr.c SQLSetParam.c SQLSetPos.c SQLSetScrollOptions.c SQLSetStmtAttr.c SQLSetStmtOption.c SQLSpecialColumns.c SQLStatistics.c SQLTablePrivileges.c SQLTables.c SQLTransact.c _FreeDbc.c _FreeStmt.c _FreeDbcList.c _FreeStmtList.c _FreeResults.c _GetData.c _NativeToSQLColumnHeader.c _NativeToSQLType.c _NativeTypeDesc.c _NativeTypeLength.c _NativeTypePrecision.c catalog-aclient.c statement_dump.c comm.c comm.h gdk.c
DEFS = -DUNIXODBC @DEFS@
EXTRA_DIST = Makefile.ag Makefile.msc driver.h driverextras.h
lib_LTLIBRARIES = libMonetODBC.la

MEL = $(MONETDIST)/bin/mel
MX = $(MONETDIST)/bin/Mx
MXFLAGS = -notouch

SUFFIXES = .m .mx .proto.h .mil .glue.c
PRECIOUS = .m 
mkinstalldirs = $(SHELL) $(top_srcdir)/conf/mkinstalldirs
CONFIG_HEADER = ../../../sql_config.h
CONFIG_CLEAN_FILES = 
LTLIBRARIES =  $(lib_LTLIBRARIES)

CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
libMonetODBC_la_LDFLAGS = 
libMonetODBC_la_DEPENDENCIES =  ${top_builddir}/src/parser/libsql.la
libMonetODBC_la_OBJECTS =  SQLAllocConnect.lo SQLAllocEnv.lo \
SQLAllocHandle.lo SQLAllocStmt.lo SQLBindCol.lo SQLBindParameter.lo \
SQLBrowseConnect.lo SQLBulkOperations.lo SQLCancel.lo SQLCloseCursor.lo \
SQLColAttribute.lo SQLColAttributes.lo SQLColumnPrivileges.lo \
SQLColumns.lo SQLConnect.lo SQLCopyDesc.lo SQLDescribeCol.lo \
SQLDescribeParam.lo SQLDisconnect.lo SQLDriverConnect.lo SQLEndTran.lo \
SQLError.lo SQLExecDirect.lo SQLExecute.lo SQLExtendedFetch.lo \
SQLFetch.lo SQLFetchScroll.lo SQLForeignKeys.lo SQLFreeConnect.lo \
SQLFreeEnv.lo SQLFreeHandle.lo SQLFreeStmt.lo SQLGetConnectAttr.lo \
SQLGetConnectOption.lo SQLGetCursorName.lo SQLGetData.lo \
SQLGetDescField.lo SQLGetDescRec.lo SQLGetDiagField.lo SQLGetDiagRec.lo \
SQLGetEnvAttr.lo SQLGetInfo.lo SQLGetStmtAttr.lo SQLGetStmtOption.lo \
SQLGetTypeInfo.lo SQLMoreResults.lo SQLNativeSql.lo SQLNumParams.lo \
SQLNumResultCols.lo SQLParamData.lo SQLParamOptions.lo SQLPrepare.lo \
SQLPrimaryKeys.lo SQLProcedureColumns.lo SQLProcedures.lo SQLPutData.lo \
SQLRowCount.lo SQLSetConnectOption.lo SQLSetCursorName.lo \
SQLSetDescField.lo SQLSetDescRec.lo SQLSetEnvAttr.lo SQLSetParam.lo \
SQLSetPos.lo SQLSetScrollOptions.lo SQLSetStmtAttr.lo \
SQLSetStmtOption.lo SQLSpecialColumns.lo SQLStatistics.lo \
SQLTablePrivileges.lo SQLTables.lo SQLTransact.lo _FreeDbc.lo \
_FreeStmt.lo _FreeDbcList.lo _FreeStmtList.lo _FreeResults.lo \
_GetData.lo _NativeToSQLColumnHeader.lo _NativeToSQLType.lo \
_NativeTypeDesc.lo _NativeTypeLength.lo _NativeTypePrecision.lo \
catalog-aclient.lo statement_dump.lo comm.lo gdk.lo
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
DIST_COMMON =  README Makefile.am Makefile.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = gtar
GZIP_ENV = --best
SOURCES = $(libMonetODBC_la_SOURCES)
OBJECTS = $(libMonetODBC_la_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .glue.c .lo .m .mil .mx .o .proto.h .s
$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) $(top_srcdir)/rules.mk
	cd $(top_srcdir) && $(AUTOMAKE) --foreign src/odbc/driver/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-libLTLIBRARIES:

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)

distclean-libLTLIBRARIES:

maintainer-clean-libLTLIBRARIES:

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo "$(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(libdir)/$$p"; \
	    $(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(libdir)/$$p; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  $(LIBTOOL)  --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

.c.o:
	$(COMPILE) -c $<

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.c.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

libMonetODBC.la: $(libMonetODBC_la_OBJECTS) $(libMonetODBC_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(libMonetODBC_la_LDFLAGS) $(libMonetODBC_la_OBJECTS) $(libMonetODBC_la_LIBADD) $(LIBS)

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = src/odbc/driver

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am: install-libLTLIBRARIES
install-exec: install-exec-am

install-data-am:
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am: uninstall-libLTLIBRARIES
uninstall: uninstall-am
all-am: Makefile $(LTLIBRARIES) all-local
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs:
	$(mkinstalldirs)  $(DESTDIR)$(libdir)


mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
mostlyclean-am:  mostlyclean-libLTLIBRARIES mostlyclean-compile \
		mostlyclean-libtool mostlyclean-tags \
		mostlyclean-generic

mostlyclean: mostlyclean-am

clean-am:  clean-libLTLIBRARIES clean-compile clean-libtool clean-tags \
		clean-generic mostlyclean-am

clean: clean-am

distclean-am:  distclean-libLTLIBRARIES distclean-compile \
		distclean-libtool distclean-tags distclean-generic \
		clean-am
	-rm -f libtool

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-libLTLIBRARIES \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-tags maintainer-clean-generic \
		distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-libLTLIBRARIES distclean-libLTLIBRARIES \
clean-libLTLIBRARIES maintainer-clean-libLTLIBRARIES \
uninstall-libLTLIBRARIES install-libLTLIBRARIES mostlyclean-compile \
distclean-compile clean-compile maintainer-clean-compile \
mostlyclean-libtool distclean-libtool clean-libtool \
maintainer-clean-libtool tags mostlyclean-tags distclean-tags \
clean-tags maintainer-clean-tags distdir info-am info dvi-am dvi check \
check-am installcheck-am installcheck install-exec-am install-exec \
install-data-am install-data install-am install uninstall-am uninstall \
all-local all-redirect all-am all installdirs mostlyclean-generic \
distclean-generic clean-generic maintainer-clean-generic clean \
mostlyclean distclean maintainer-clean

SQLGetEnvAttr.lo SQLGetEnvAttr.o: SQLGetEnvAttr.c
_NativeTypeDesc.lo _NativeTypeDesc.o: _NativeTypeDesc.c
SQLProcedures.lo SQLProcedures.o: SQLProcedures.c
SQLGetConnectAttr.lo SQLGetConnectAttr.o: SQLGetConnectAttr.c
SQLCancel.lo SQLCancel.o: SQLCancel.c
SQLStatistics.lo SQLStatistics.o: SQLStatistics.c
SQLTransact.lo SQLTransact.o: SQLTransact.c
SQLGetDescRec.lo SQLGetDescRec.o: SQLGetDescRec.c
SQLSetDescRec.lo SQLSetDescRec.o: SQLSetDescRec.c
SQLGetTypeInfo.lo SQLGetTypeInfo.o: SQLGetTypeInfo.c
SQLSetEnvAttr.lo SQLSetEnvAttr.o: SQLSetEnvAttr.c
SQLPrepare.lo SQLPrepare.o: SQLPrepare.c
_FreeStmtList.lo _FreeStmtList.o: _FreeStmtList.c
SQLAllocHandle.lo SQLAllocHandle.o: SQLAllocHandle.c
SQLBrowseConnect.lo SQLBrowseConnect.o: SQLBrowseConnect.c
SQLProcedureColumns.lo SQLProcedureColumns.o: SQLProcedureColumns.c
SQLDriverConnect.lo SQLDriverConnect.o: SQLDriverConnect.c
SQLFreeConnect.lo SQLFreeConnect.o: SQLFreeConnect.c
SQLSetParam.lo SQLSetParam.o: SQLSetParam.c
gdk.lo gdk.o: gdk.c
SQLSpecialColumns.lo SQLSpecialColumns.o: SQLSpecialColumns.c
SQLNativeSql.lo SQLNativeSql.o: SQLNativeSql.c
SQLFetch.lo SQLFetch.o: SQLFetch.c
SQLBindCol.lo SQLBindCol.o: SQLBindCol.c
SQLColAttributes.lo SQLColAttributes.o: SQLColAttributes.c
SQLGetStmtAttr.lo SQLGetStmtAttr.o: SQLGetStmtAttr.c
SQLError.lo SQLError.o: SQLError.c
SQLGetDiagRec.lo SQLGetDiagRec.o: SQLGetDiagRec.c
SQLTablePrivileges.lo SQLTablePrivileges.o: SQLTablePrivileges.c
comm.lo comm.o: comm.c
SQLDescribeCol.lo SQLDescribeCol.o: SQLDescribeCol.c
SQLCopyDesc.lo SQLCopyDesc.o: SQLCopyDesc.c
_NativeTypePrecision.lo _NativeTypePrecision.o: _NativeTypePrecision.c
SQLSetStmtAttr.lo SQLSetStmtAttr.o: SQLSetStmtAttr.c
_NativeToSQLType.lo _NativeToSQLType.o: _NativeToSQLType.c
SQLBulkOperations.lo SQLBulkOperations.o: SQLBulkOperations.c
SQLColumnPrivileges.lo SQLColumnPrivileges.o: SQLColumnPrivileges.c
SQLGetInfo.lo SQLGetInfo.o: SQLGetInfo.c
SQLFreeStmt.lo SQLFreeStmt.o: SQLFreeStmt.c
SQLSetConnectOption.lo SQLSetConnectOption.o: SQLSetConnectOption.c
SQLParamData.lo SQLParamData.o: SQLParamData.c
_GetData.lo _GetData.o: _GetData.c
_NativeToSQLColumnHeader.lo _NativeToSQLColumnHeader.o: _NativeToSQLColumnHeader.c
SQLExecute.lo SQLExecute.o: SQLExecute.c
_FreeResults.lo _FreeResults.o: _FreeResults.c
SQLDisconnect.lo SQLDisconnect.o: SQLDisconnect.c
SQLPrimaryKeys.lo SQLPrimaryKeys.o: SQLPrimaryKeys.c
_FreeDbcList.lo _FreeDbcList.o: _FreeDbcList.c
SQLColumns.lo SQLColumns.o: SQLColumns.c
SQLColAttribute.lo SQLColAttribute.o: SQLColAttribute.c
SQLAllocConnect.lo SQLAllocConnect.o: SQLAllocConnect.c
SQLAllocEnv.lo SQLAllocEnv.o: SQLAllocEnv.c
SQLExecDirect.lo SQLExecDirect.o: SQLExecDirect.c
SQLNumResultCols.lo SQLNumResultCols.o: SQLNumResultCols.c
SQLAllocStmt.lo SQLAllocStmt.o: SQLAllocStmt.c
SQLBindParameter.lo SQLBindParameter.o: SQLBindParameter.c
SQLSetCursorName.lo SQLSetCursorName.o: SQLSetCursorName.c
SQLExtendedFetch.lo SQLExtendedFetch.o: SQLExtendedFetch.c
SQLFetchScroll.lo SQLFetchScroll.o: SQLFetchScroll.c
SQLSetDescField.lo SQLSetDescField.o: SQLSetDescField.c
SQLSetScrollOptions.lo SQLSetScrollOptions.o: SQLSetScrollOptions.c
SQLCloseCursor.lo SQLCloseCursor.o: SQLCloseCursor.c
SQLTables.lo SQLTables.o: SQLTables.c
SQLGetCursorName.lo SQLGetCursorName.o: SQLGetCursorName.c
SQLSetStmtOption.lo SQLSetStmtOption.o: SQLSetStmtOption.c
SQLGetConnectOption.lo SQLGetConnectOption.o: SQLGetConnectOption.c
SQLRowCount.lo SQLRowCount.o: SQLRowCount.c
SQLConnect.lo SQLConnect.o: SQLConnect.c
SQLForeignKeys.lo SQLForeignKeys.o: SQLForeignKeys.c
SQLSetPos.lo SQLSetPos.o: SQLSetPos.c
SQLPutData.lo SQLPutData.o: SQLPutData.c
catalog-aclient.lo catalog-aclient.o: catalog-aclient.c
SQLNumParams.lo SQLNumParams.o: SQLNumParams.c
SQLGetData.lo SQLGetData.o: SQLGetData.c
SQLParamOptions.lo SQLParamOptions.o: SQLParamOptions.c
_FreeStmt.lo _FreeStmt.o: _FreeStmt.c
SQLGetDiagField.lo SQLGetDiagField.o: SQLGetDiagField.c
SQLDescribeParam.lo SQLDescribeParam.o: SQLDescribeParam.c
SQLMoreResults.lo SQLMoreResults.o: SQLMoreResults.c
SQLFreeHandle.lo SQLFreeHandle.o: SQLFreeHandle.c
_NativeTypeLength.lo _NativeTypeLength.o: _NativeTypeLength.c
SQLFreeEnv.lo SQLFreeEnv.o: SQLFreeEnv.c
_FreeDbc.lo _FreeDbc.o: _FreeDbc.c
SQLEndTran.lo SQLEndTran.o: SQLEndTran.c
SQLGetDescField.lo SQLGetDescField.o: SQLGetDescField.c
SQLGetStmtOption.lo SQLGetStmtOption.o: SQLGetStmtOption.c
statement_dump.lo statement_dump.o: statement_dump.c

%.h: %.mx
	$(MX) $(MXFLAGS) -x h $<

%.c: %.mx
	$(MX) $(MXFLAGS) -x c $<

%.y: %.mx
	$(MX) $(MXFLAGS) -x y $< 

%.tab.c %.tab.h: %.y
	$(YACC) $(YFLAGS) $<
	if [ -f y.tab.c ]; then $(MV) y.tab.c $*.tab.c ; fi
	if [ -f y.tab.h ]; then $(MV) y.tab.h $*.tab.h ; fi

%.l: %.mx
	$(MX) $(MXFLAGS) -x l $< 

%.yy.c: %.l
	$(LEX) $(LFLAGS) $*.l
	if [ -f lex.yy.c ]; then $(MV) lex.yy.c $*.yy.c ; fi

%.m: %.mx
	$(MX) $(MXFLAGS) -x m $<

%.mil: %.mx
	$(MX) $(MXFLAGS) -x mil $<

%.java: %.mx
	$(MX) $(MXFLAGS) -x java $<

%.tcl: %.mx
	$(MX) $(MXFLAGS) -x tcl $<

%.xsl: %.mx
	$(MX) $(MXFLAGS) -x xsl $<

%: %.mx
	$(MX) $(MXFLAGS) -x sh $<

%.i: %.mx
	$(MX) $(MXFLAGS) -x swig $<

%_wrap.c: %.i
	$(SWIG) -tcl8 -o $@ $<

%.fgr: %.mx
	$(MX) $(MXFLAGS) -x fgr $<

%.proto.h: %.m
	$(MEL) $(INCLUDES) -o $@ -proto $<

%.glue.c: %.m
	$(MEL) $(INCLUDES) -o $@ -glue $<

pkgIndex.tcl: $(TCLFILES)
	@echo "pkg_mkIndex . *.tcl;exit;" | $(TCLSH)	

all-local: $(BUILT_SOURCES)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
