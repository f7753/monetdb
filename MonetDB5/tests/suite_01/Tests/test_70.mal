# Monet Mil to Mal compiler
# Copyright (c) 2001-2004, CWI. All rights reserved.

#Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#include "mil_prelude";
	mil.line("setoid(oid(20000000));");
	aa_a := oid(20000000);
	ba_a := setoid(aa_a);
	mil.line("# The Monet interpreter supports type casts\n");
	mil.line("var p:=  int(\"21\");");
	p := int("21");
	mil.line("p.print();");
	ca_a := print(p);
	mil.line("var pf:= flt(\"23\");");
	pf := flt("23");
	mil.line("pf.print();");
	da_a := print(pf);
	mil.line("var pb:= bit(1);");
	pb := bit(1);
	mil.line("pb.print();");
	ea_a := print(pb);
	mil.line("var z:= int(p);");
	z := int(p);
	mil.line("z.print();");
	fa_a := print(z);
	mil.line("var pi:= bit(0);");
	pi := bit(0);
	mil.line("pi.print();");
	ga_a := print(pi);
	mil.line("var ps:= str(1);");
	ps := str(1);
	mil.line("quit();");
	ha_a := quit();
