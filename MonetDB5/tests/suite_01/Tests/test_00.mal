# Monet Mil to Mal compiler
# Copyright (c) 2001-2004, CWI. All rights reserved.

#Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#include "mil_prelude";
	mil.line("setoid(oid(20000000));");
	aa_a := oid(20000000);
	ba_a := setoid(aa_a);
	mil.line("#problem: Monet -prelude fatal sometimes leaves a monet thread behind.\n");
	mil.line("var b:= new(int,str,0);");
	b := new(nil:int,nil:str,0);
	mil.line("vars();");
	ca_a := vars();
	mil.line("var bn:= fragment(b,1,5,str(nil),str(nil));");
	da_a := str(nil);
	ea_a := str(nil);
	bn := fragment(b,1,5,da_a,ea_a);
	mil.line("vars();");
	fa_a := vars();
	mil.line("print(bn);");
	ga_a := print(bn);
	mil.line("quit();");
	ha_a := quit();
print("test dropped: it uses 4.4. catalogues");
