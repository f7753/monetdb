# Monet Mil to Mal compiler
# Copyright (c) 2001-2004, CWI. All rights reserved.

# Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#setoid(oid(20000000));
	aa_a := oid(20000000);
	ba_a := setoid(aa_a);
#var b:= new(int,str,0);
	b := new(:int,:str,0);
#vars();
	ca_a := vars();
#var bn:= fragment(b,1,5,str(nil),str(nil));
	nil:= mil.take("nil");
	da_a := str(nil);
	ea_a := str(nil);
	bn := fragment(b,1,5,da_a,ea_a);
#vars();
	fa_a := vars();
#print(bn);
	ga_a := print(bn);
#quit();
	ha_a := quit();
