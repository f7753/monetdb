# Monet Mil to Mal compiler
# Copyright (c) 2001-2004, CWI. All rights reserved.

#Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#include "mil_prelude";
	mil.line("setoid(oid(20000000));");
	aa_a := oid(20000000);
	ba_a := setoid(aa_a);
	mil.line("#exercise simple loop\n");
	mil.line("bats@batloop() {");
	bats:= mil.take("bats");
barrier	ca_a := bunStream(bats,ca_aH,ca_aT);
	mil.line("\tprint(\"enter\");");
	da_a := print("enter");
	mil.line("        var tmp := bats.select($2);");
	ea_a := mil.getVarTemp($2);
	tmp := select(bats,ea_a);
	mil.line("        tmp.print();");
	fa_a := print(tmp);
redo	ca_a;
exit	ca_a;
	mil.line("quit();");
	ga_a := quit();
print("test dropped: variable argument list ");
