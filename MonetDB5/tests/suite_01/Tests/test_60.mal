# Monet Mil to Mal compiler
# Copyright (c) 2001-2004, CWI. All rights reserved.

# Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#setoid(oid(20000000));
	aa_a := oid(20000000);
	ba_a := setoid(aa_a);
function newid(x:any, y:any):any;
#	return x+y;
	return ca_a :=+(x,y);
end newid;
#var b:= new(int,int,0);
	b := new(:int,:int,0);
#b.insert(1,15);
	da_a := insert(b,1,15);
#b.insert(2,4);
	ea_a := insert(b,2,4);
#b.insert(3,int(nil));
	nil:= mil.take("nil");
	fa_a := int(nil);
	ga_a := insert(b,3,fa_a);
#b.insert(4,16);
	ha_a := insert(b,4,16);
#b.insert(5,25);
	ia_a := insert(b,5,25);
#b.insert(6,36);
	ja_a := insert(b,6,36);
#b.insert(7,49);
	ka_a := insert(b,7,49);
#b.insert(8,64);
	la_a := insert(b,8,64);
#b.insert(9,int(nil));
	ma_a := int(nil);
	na_a := insert(b,9,ma_a);
#b.insert(int(nil),int(nil));
	oa_a := int(nil);
	pa_a := int(nil);
	qa_a := insert(b,oa_a,pa_a);
#b.insert(int(nil),81);
	ra_a := int(nil);
	sa_a := insert(b,ra_a,81);
#b.rename("tenk1_unique1");
	ta_a := bat.setName(b,"tenk1_unique1");
function dummy():int;
#proc dummy() : int { return 1; }
	return ua_a :=1;
end dummy;
function p(B:any, C:any):any;
#        var local :=newid(B,C); 
	local := newid(B,C);
#        vars(); 
	va_a := vars();
end p;
function s(low:int, high:int):void;
#	vars(); 
	wa_a := vars();
#	var t := select(bat("tenk1_unique1"),low,high); 
	xa_a := new("tenk1_unique1");
	t := select(xa_a,low,high);
#        t.count().print();
	ya_a := count(t,);
	ab_a := print(ya_a,);
end s;
function echo(x:any, y:any):any;
#proc echo(any x,any y) : any { vars(); var z:=x; vars(); return(z); }
	bb_a := vars();
	z := x;
	cb_a := vars();
	return db_a :=z;
end echo;
function New(N:any, A:any, Ahsh:any):void;
#        var Nh := newid(N,"_hsh"); 
	Nh := newid(N,"_hsh");
#        var A := new(int,int,1); 
	A := new(:int,:int,1);
#        rename(A,N); 
	eb_a := bat.setName(A,N);
#        var Ahsh := new(oid,int,1); 
	Ahsh := new(:oid,:int,1);
#        rename(Ahsh,Nh); vars();
	fb_a := bat.setName(Ahsh,Nh);
	gb_a := vars();
end New;
#p("b","1");
	hb_a := p("b","1");
#var a:=35;
	a := 35;
#echo(a,"hello").print();
	ib_a := echo(a,"hello");
	jb_a := print(ib_a,);
#New("r","C","Ch");
	kb_a := New("r","C","Ch");
#vars();
	lb_a := vars();
#s(0,10);
	mb_a := s(0,10);
#s(0,11);
	nb_a := s(0,11);
#s(0,99);
	ob_a := s(0,99);
#s(0,999);
	pb_a := s(0,999);
#quit();
	qb_a := quit();
#Identifer 'rename' mapped to 'bat.setName'
