# Monet Mil to Mal compiler
# Copyright (c) 2001-2004, CWI. All rights reserved.

# Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#setoid(oid(20000000));
	aa_a := oid(20000000);
	ba_a := setoid(aa_a);
#ls();
	ca_a := ls();
#dir();
	da_a := dir();
#table(mmn().reverse().sort().reverse().col_name("static modules"));
	ea_a := mmn();
	fa_a := reverse(ea_a,);
	ga_a := sort(fa_a,);
	ha_a := reverse(ga_a,);
	ia_a := bat.setColumn(ha_a,"static modules");
	ja_a := table(ia_a);
#table(kdiff(view_modules().reverse().kunique(),monet_mod_nme.reverse()).sort().reverse().col_name("dynamic modules"));
	ka_a := view_modules();
	la_a := reverse(ka_a,);
	ma_a := kunique(la_a,);
	monet_mod_nme:= mil.take("monet_mod_nme");
	na_a := reverse(monet_mod_nme,);
	oa_a := kdiff(ma_a,na_a);
	pa_a := sort(oa_a,);
	qa_a := reverse(pa_a,);
	ra_a := bat.setColumn(qa_a,"dynamic modules");
	sa_a := table(ra_a);
#commit();
	ta_a := commit();
#quit();
	ua_a := quit();
#Identifer 'col_name' mapped to 'bat.setColumn'
