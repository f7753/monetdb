# Monet Mil to Mal compiler
# Copyright (c) 2001-2004, CWI. All rights reserved.

# Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#setoid(oid(20000000));
	aa_a := oid(20000000);
	ba_a := setoid(aa_a);
#var b:= new(int,int);
	b := new(:int,:int);
#b.insert(1,15);
	ca_a := insert(b,1,15);
#b.insert(2,4);
	da_a := insert(b,2,4);
#b.insert(3,int(nil));
	nil:= mil.take("nil");
	ea_a := int(nil);
	fa_a := insert(b,3,ea_a);
#b.insert(4,16);
	ga_a := insert(b,4,16);
#b.insert(5,25);
	ha_a := insert(b,5,25);
#b.insert(6,36);
	ia_a := insert(b,6,36);
#b.insert(7,49);
	ja_a := insert(b,7,49);
#b.insert(8,64);
	ka_a := insert(b,8,64);
#b.insert(9,int(nil));
	la_a := int(nil);
	ma_a := insert(b,9,la_a);
#b.insert(int(nil),int(nil));
	na_a := int(nil);
	oa_a := int(nil);
	pa_a := insert(b,na_a,oa_a);
#b.insert(int(nil),81);
	qa_a := int(nil);
	ra_a := insert(b,qa_a,81);
#var c:= b.copy();
	c := copy(b,);
#var t:= b.select(80,int(nil)); print(t);
	sa_a := int(nil);
	t := select(b,80,sa_a);
	ta_a := print(t);
#c.access(BAT_WRITE);
	BAT_WRITE:= mil.take("BAT_WRITE");
	ua_a := access(c,BAT_WRITE);
#insert(c,t);print(c);
	va_a := insert(c,t);
	wa_a := print(c);
#var z:= new(int,int);
	z := new(:int,:int);
#b.replace(1,1);
	xa_a := replace(b,1,1);
#z.insert(2,4);
	ya_a := insert(z,2,4);
#z.insert(3,9);
	ab_a := insert(z,3,9);
#b.replace(z);
	bb_a := replace(b,z);
#b.print();
	cb_a := print(b,);
#c.reverse().print();
	db_a := reverse(c,);
	eb_a := print(db_a,);
#var d:= intersect(reverse(c),b);
	fb_a := reverse(c);
	d := intersect(fb_a,b);
#print(d);
	gb_a := print(d);
#var e:= diff(reverse(c),d);
	hb_a := reverse(c);
	e := diff(hb_a,d);
#print(e);
	ib_a := print(e);
#var f:= union(e,b);
	f := union(e,b);
#print(f);
	jb_a := print(f);
#var marcel:= b.kunion(b);
	marcel := kunion(b,b);
#marcel.print();
	kb_a := print(marcel,);
#quit();
	lb_a := quit();
