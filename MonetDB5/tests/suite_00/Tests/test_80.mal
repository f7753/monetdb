# Monet Mil to Mal compiler
# Copyright (c) 2001-2004, CWI. All rights reserved.

# Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#setoid(oid(20000000));
	aa_a := oid(20000000);
	ba_a := setoid(aa_a);
#var b:= new(int,int);
	b := new(:int,:int);
#b.key(true);
	ca_a := bat.setKey(b,true);
#insert(b,1,2);
	da_a := insert(b,1,2);
#insert(b,2,2);
	ea_a := insert(b,2,2);
#print(b);
	fa_a := print(b);
#insert(b,1,3);
	ga_a := insert(b,1,3);
#print(b);
	ha_a := print(b);
#insert(b,2,4);
	ia_a := insert(b,2,4);
#print(b);
	ja_a := print(b);
#var c:= new(int,int);
	c := new(:int,:int);
#set(c,true);
	ka_a := bat.setSet(c,true);
#insert(c,1,2);
	la_a := insert(c,1,2);
#insert(c,2,2);
	ma_a := insert(c,2,2);
#print(c);
	na_a := print(c);
#insert(c,1,2);
	oa_a := insert(c,1,2);
#print(c);
	pa_a := print(c);
#insert(c,2,2);
	qa_a := insert(c,2,2);
#print(c);
	ra_a := print(c);
#quit();
	sa_a := quit();
#Identifer 'key' mapped to 'bat.setKey'
#Identifer 'set' mapped to 'bat.setSet'
