# Monet Mil to Mal compiler
# Copyright (c) 2001-2004, CWI. All rights reserved.

#Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#use the "mil_schema" for additional support routines
	mil.line("setoid(oid(20000000));");
	aa_a := oid(20000000);
	ba_a := setoid(aa_a);
	mil.line("#This collection of examples is geared at the support\n");
	mil.line("#of the data mining tool\n");
	mil.line("var b:= new(int,int);");
	b := new(nil:int,nil:int);
	mil.line("b.insert(1,15);");
	ca_a := insert(b,1,15);
	mil.line("b.insert(2,15);");
	da_a := insert(b,2,15);
	mil.line("b.sum().print();");
	ea_a := sum(b);
	fa_a := print(ea_a);
	mil.line("b.insert(3,int(nil));");
	ga_a := int(nil);
	ha_a := insert(b,3,ga_a);
	mil.line("b.sum().print();");
	ia_a := sum(b);
	ja_a := print(ia_a);
	mil.line("b.insert(4,15);");
	ka_a := insert(b,4,15);
	mil.line("b.insert(5,25);");
	la_a := insert(b,5,25);
	mil.line("b.insert(6,36);");
	ma_a := insert(b,6,36);
	mil.line("b.insert(7,49);");
	na_a := insert(b,7,49);
	mil.line("b.insert(8,64);");
	oa_a := insert(b,8,64);
	mil.line("b.insert(9,int(nil));");
	pa_a := int(nil);
	qa_a := insert(b,9,pa_a);
	mil.line("var t:= b.histogram();");
	t := histogram(b);
	mil.line("t.print();");
	ra_a := print(t);
	mil.line("commit();");
	sa_a := commit();
	mil.line("var s:= new(int,str);");
	s := new(nil:int,nil:str);
	mil.line("insert(s,1,\"hello\");");
	ta_a := insert(s,1,"hello");
	mil.line("insert(s,2,\"hello\");");
	ua_a := insert(s,2,"hello");
	mil.line("insert(s,3,\"hello\");");
	va_a := insert(s,3,"hello");
	mil.line("insert(s,4,\"dello\");");
	wa_a := insert(s,4,"dello");
	mil.line("insert(s,5,\"eello\");");
	xa_a := insert(s,5,"eello");
	mil.line("insert(s,6,\"fello\");");
	ya_a := insert(s,6,"fello");
	mil.line("insert(s,7,\"fello\");");
	ab_a := insert(s,7,"fello");
	mil.line("insert(s,8,\"fello\");");
	bb_a := insert(s,8,"fello");
	mil.line("var t2:= s.histogram();");
	t2 := histogram(s);
	mil.line("t2.print();");
	cb_a := print(t2);
	mil.line("#It requires a few additional routines\n");
	c := new(nil:int,nil:int);
	mil.line("c.insert(1,15);");
	db_a := insert(c,1,15);
	mil.line("c.insert(2,15);");
	eb_a := insert(c,2,15);
	mil.line("c.insert(3,int(nil));");
	fb_a := int(nil);
	gb_a := insert(c,3,fb_a);
	mil.line("c.insert(4,0);");
	hb_a := insert(c,4,0);
	mil.line("c.insert(5,30);");
	ib_a := insert(c,5,30);
	mil.line("c.print();");
	jb_a := print(c);
	mil.line("var d:= [<](b,c);");
	d := multiplex.tactics("<",b,c);
	mil.line("d.print();");
	kb_a := print(d);
	mil.line("d:= [<](c,b);");
	d := multiplex.tactics("<",c,b);
	mil.line("d.print();");
	lb_a := print(d);
	mil.line("d:= [>](c,b);");
	d := multiplex.tactics(">",c,b);
	mil.line("d.print();");
	mb_a := print(d);
	mil.line("quit();");
	nb_a := quit();
