# Monet Mil to Mal compiler
include "mil_system_procs";
include "mil_algebra_procs";
include "mil_insert";
# Copyright (c) 2001-2004, CWI. All rights reserved.

#Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#use the "mil_schema" for additional support routines
	mil.line("setoid(oid(20000000));");
	aa_a := oid(20000000);
	ba_a := setoid(aa_a);
	mil.line("var s:= new(str,int);");
	s := new(nil:str,nil:int);
	mil.line("insert(s,\"hello\",1);");
	ca_a := insert(s,"hello",1);
	mil.line("print(find(s,\"hello\"));");
	da_a := find(s,"hello");
	ea_a := print(da_a);
	mil.line("insert(s,\"bello\",2);");
	fa_a := insert(s,"bello",2);
	mil.line("insert(s,\"cello\",3);");
	ga_a := insert(s,"cello",3);
	mil.line("insert(s,\"dello\",4);");
	ha_a := insert(s,"dello",4);
	mil.line("insert(s,\"eello\",5);");
	ia_a := insert(s,"eello",5);
	mil.line("insert(s,\"fello\",6);");
	ja_a := insert(s,"fello",6);
	mil.line("insert(s,\"gello\",7);");
	ka_a := insert(s,"gello",7);
	mil.line("insert(s,\"hello\",8);");
	la_a := insert(s,"hello",8);
	mil.line("printf(\"#~BeginVariableOutput~#\\n\"); info(s).print(); printf(\"#~EndVariableOutput~#\\n\");");
	ma_a := printf("#~BeginVariableOutput~#\n");
	na_a := info(s);
	oa_a := print(na_a);
	pa_a := printf("#~EndVariableOutput~#\n");
	mil.line("print(find(s,\"cello\"));");
	qa_a := find(s,"cello");
	ra_a := print(qa_a);
	mil.line("delete(s,\"cello\",3);");
	sa_a := delete(s,"cello",3);
	mil.line("print(s);");
	ta_a := print(s);
	mil.line("var sn:= select(s,1,5);");
	sn := select(s,1,5);
	mil.line("print(sn);");
	ua_a := print(sn);
	mil.line("var s2:= semijoin(s.reverse(),sn.reverse());");
	va_a := reverse(s);
	wa_a := reverse(sn);
	s2 := semijoin(va_a,wa_a);
	mil.line("print(s2);");
	xa_a := print(s2);
	mil.line("var x:= join(s,s2);");
	x := join(s,s2);
	mil.line("print(x);");
	ya_a := print(x);
	mil.line("quit();");
	ab_a := quit();
