stdout of test 'no.031` in directory 'tests/BugReports` itself:

#> Mtest:	milS no.031 milS
#> Mtest:	Mtimeout -timeout 210 Mserver -modulesilent -yaccsilent -d8 -db tests_BugReports -single no.031.milS
# Monet Database Server V4.1
# Copyright (c) 1993-1999, CWI & SION. All rights reserved.
# compiled for IRIX646.5/32bit on Fri Jan 14 01:04:33 MET 2000.
#script:no.031.milS


# Monet Database Server V4.3.5
# Copyright (c) 1993-2002, CWI. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit; dynamically linked.
# >Number:         31
# >Category:       Mserver
# >Synopsis:       Import does not work.
# >Confidential:   no
# >Severity:       serious
# >Priority:       medium
# >Responsible:    quak
# >State:          closed
# >Class:          sw-bug
# >Submitter-Id:   unknown
# >Arrival-Date:   Fri Sep 19 16:00:42 1997
# >Originator:     quak
# >Organization:
# >Release:        970101
# >Environment:
# ALL
# >Description:
# The following script, which creates a bat exports
# it and then tries to import it again fails:
# 
##Predefined code segment
##The compiler can not guarantee an accurate compilation,
##because MIL unlike MAL is a dynamically typed language.
##A few guidelines to maximize usefullness.
##- make the type of variables explicit, in particular 'nil'
##- upon advice of M2m to remap identifiers, change it in your program directly
##include "mil_prelude";
#	mil.line("# >Number:         31\n");
#	mil.line("# >Category:       Mserver");
#	mil.line("# >Category:       Mserver\n");
#	mil.line("# >Synopsis:       Import does not work.");
#	mil.line("# >Synopsis:       Import does not work.\n");
#	mil.line("# >Confidential:   no");
#	mil.line("# >Confidential:   no\n");
#	mil.line("# >Severity:       serious");
#	mil.line("# >Severity:       serious\n");
#	mil.line("# >Priority:       medium");
#	mil.line("# >Priority:       medium\n");
#	mil.line("# >Responsible:    quak");
#	mil.line("# >Responsible:    quak\n");
#	mil.line("# >State:          closed");
#	mil.line("# >State:          closed\n");
#	mil.line("# >Class:          sw-bug");
#	mil.line("# >Class:          sw-bug\n");
#	mil.line("# >Submitter-Id:   unknown");
#	mil.line("# >Submitter-Id:   unknown\n");
#	mil.line("# >Arrival-Date:   Fri Sep 19 16:00:42 1997");
#	mil.line("# >Arrival-Date:   Fri Sep 19 16:00:42 1997\n");
#	mil.line("# >Originator:     quak");
#	mil.line("# >Originator:     quak\n");
#	mil.line("# >Organization:");
#	mil.line("# >Organization:\n");
#	mil.line("# >Release:        970101");
#	mil.line("# >Release:        970101\n");
#	mil.line("# >Environment:");
#	mil.line("# >Environment:\n");
#	mil.line("# ALL");
#	mil.line("# ALL\n");
#	mil.line("# >Description:");
#	mil.line("# >Description:\n");
#	mil.line("# The following script, which creates a bat exports");
#	mil.line("# The following script, which creates a bat exports\n");
#	mil.line("# it and then tries to import it again fails:");
#	mil.line("# it and then tries to import it again fails:\n");
#	mil.line("# ");
#	mil.line("# \n");
#	mil.line("# > a := new(int,int);");
#	mil.line("# > a := new(int,int);\n");
#	mil.line("# > a.insert(1,1);");
#	mil.line("# > a.insert(1,1);\n");
#	mil.line("# > a.export(\"/home/quak/tmp/testt\");");
#	mil.line("# > a.export(\"/home/quak/tmp/testt\");\n");
#	mil.line("# > b := new(int,int);");
#	mil.line("# > b := new(int,int);\n");
#	mil.line("# > b.import(\"/home/quak/tmp/testt\");");
#	mil.line("# > b.import(\"/home/quak/tmp/testt\");\n");
#	mil.line("");
#	mil.line("var a := new(int,int);");
#	a := new(nil:int,nil:int);
#	mil.line("a.insert(1,1);");
#	aa_a := insert(a,1,1);
#	mil.line("a.print();");
#	ba_a := print(a);
#	mil.line("a.export(\"testt\");");
#	ca_a := export(a,"testt");
#	mil.line("var b := new(int,int);");
#	b := new(nil:int,nil:int);
#	mil.line("b.import(\"testt\");");
#	da_a := import(b,"testt");
#	mil.line("b.print();");
#	ea_a := print(b);
#	mil.line("quit();");
#	fa_a := quit();
#
function user.main():int;	# 0  (main:int)
    mil.line("# >Number:         31\n");	# 1 MILline ($1:void)<-($2:str)
    mil.line("# >Category:       Mserver\n");	# 2 MILline ($3:void)<-($4:str)
    mil.line("# >Synopsis:       Import does not work.\n");	# 3 MILline ($5:void)<-($6:str)
    mil.line("# >Confidential:   no\n");	# 4 MILline ($7:void)<-($8:str)
    mil.line("# >Severity:       serious\n");	# 5 MILline ($9:void)<-($10:str)
    mil.line("# >Priority:       medium\n");	# 6 MILline ($11:void)<-($12:str)
    mil.line("# >Responsible:    quak\n");	# 7 MILline ($13:void)<-($14:str)
    mil.line("# >State:          closed\n");	# 8 MILline ($15:void)<-($16:str)
    mil.line("# >Class:          sw-bug\n");	# 9 MILline ($17:void)<-($18:str)
    mil.line("# >Submitter-Id:   unknown\n");	# 10 MILline ($19:void)<-($20:str)
    mil.line("# >Arrival-Date:   Fri Sep 19 16:00:42 1997\n");	# 11 MILline ($21:void)<-($22:str)
    mil.line("# >Originator:     quak\n");	# 12 MILline ($23:void)<-($24:str)
    mil.line("# >Organization:\n");	# 13 MILline ($25:void)<-($26:str)
    mil.line("# >Release:        970101\n");	# 14 MILline ($27:void)<-($28:str)
    mil.line("# >Environment:\n");	# 15 MILline ($29:void)<-($30:str)
    mil.line("# ALL\n");	# 16 MILline ($31:void)<-($32:str)
    mil.line("# >Description:\n");	# 17 MILline ($33:void)<-($34:str)
    mil.line("# The following script, which creates a bat exports\n");	# 18 MILline ($35:void)<-($36:str)
    mil.line("# it and then tries to import it again fails:\n");	# 19 MILline ($37:void)<-($38:str)
    mil.line("# \n");	# 20 MILline ($39:void)<-($40:str)
    mil.line("# > a := bbp.new(int,int);\n");	# 21 MILline ($41:void)<-($42:str)
    mil.line("# > a.insert(1,1);\n");	# 22 MILline ($43:void)<-($44:str)
    mil.line("# > a.export(\"/home/quak/tmp/testt\");\n");	# 23 MILline ($45:void)<-($46:str)
    mil.line("# > b := bbp.new(int,int);\n");	# 24 MILline ($47:void)<-($48:str)
    mil.line("# > b.import(\"/home/quak/tmp/testt\");\n");	# 25 MILline ($49:void)<-($50:str)
    mil.line("var a := bbp.new(int,int);");	# 26 MILline ($51:void)<-($52:str)
    a := bbp.new(nil:int,nil:int);	# 27 CMDBATnew (a:bat[:int,:int])<-($54:int)($54:int)
    mil.line("a.insert(1,1);");	# 28 MILline ($55:void)<-($56:str)
    aa_a := bat.insert(a,1,1);	# 29 BKCinsert_bun (aa_a:bat[:int,:int])<-(a:bat[:int,:int])($58:int)($58:int)
    mil.line("a.print();");	# 30 MILline ($59:void)<-($60:str)
    ba_a := io.print(a);	# 31 IOprint_val (ba_a:int)<-(a:bat[:int,:int])
    mil.line("a.export(\"testt\");");	# 32 MILline ($62:void)<-($63:str)
    ca_a := io.export(a,"testt");	# 33 IOexport (ca_a:bit)<-(a:bat[:int,:int])($65:str)
    mil.line("var b := bbp.new(int,int);");	# 34 MILline ($66:void)<-($67:str)
    b := bbp.new(nil:int,nil:int);	# 35 CMDBATnew (b:bat[:int,:int])<-($54:int)($54:int)
    mil.line("b.import(\"testt\");");	# 36 MILline ($69:void)<-($70:str)
    da_a := io.import(b,"testt");	# 37 IOimport (da_a:bit)<-(b:bat[:int,:int])($65:str)
    mil.line("b.print();");	# 38 MILline ($72:void)<-($73:str)
    ea_a := io.print(b);	# 39 IOprint_val (ea_a:int)<-(b:bat[:int,:int])
    mil.line("quit();");	# 40 MILline ($75:void)<-($76:str)
    fa_a := clients.quit();	# 41 CLTquit (fa_a:void)
end main;	# 42  
## >Number:         31
## >Category:       Mserver
## >Category:       Mserver
## >Synopsis:       Import does not work.
## >Synopsis:       Import does not work.
## >Confidential:   no
## >Confidential:   no
## >Severity:       serious
## >Severity:       serious
## >Priority:       medium
## >Priority:       medium
## >Responsible:    quak
## >Responsible:    quak
## >State:          closed
## >State:          closed
## >Class:          sw-bug
## >Class:          sw-bug
## >Submitter-Id:   unknown
## >Submitter-Id:   unknown
## >Arrival-Date:   Fri Sep 19 16:00:42 1997
## >Arrival-Date:   Fri Sep 19 16:00:42 1997
## >Originator:     quak
## >Originator:     quak
## >Organization:
## >Organization:
## >Release:        970101
## >Release:        970101
## >Environment:
## >Environment:
## ALL
## ALL
## >Description:
## >Description:
## The following script, which creates a bat exports
## The following script, which creates a bat exports
## it and then tries to import it again fails:
## it and then tries to import it again fails:
## 
## 
## > a := new(int,int);
## > a := new(int,int);
## > a.insert(1,1);
## > a.insert(1,1);
## > a.export("/home/quak/tmp/testt");
## > a.export("/home/quak/tmp/testt");
## > b := new(int,int);
## > b := new(int,int);
## > b.import("/home/quak/tmp/testt");
## > b.import("/home/quak/tmp/testt");
#
#var a := new(int,int);
#a.insert(1,1);
#a.print();
#-----------------#
# BAT:	  tmp_25  #
# (int)	  (int)	  #
#-----------------#
[ 1,	  1	  ]
#a.export("testt");
#var b := new(int,int);
#b.import("testt");
#b.print();
#-----------------#
# BAT:	  tmp_26  #
# (int)	  (int)	  #
#-----------------#
[ 1,	  1	  ]
#quit();

# 17:06:47 >  
# 17:06:47 >  Done.
# 17:06:47 >  

