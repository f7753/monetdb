# Monet Mil to Mal compiler
# Copyright (c) 2001-2004, CWI. All rights reserved.
include "mil_insert";
include "mil_system_procs";
include "mil_algebra_procs";

#Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#use the "mil_schema" for additional support routines
	mil.line("# this used to hang because the no longer persistent\n");
	mil.line("# bat got the BBPUNLOADING status but can only be done\n");
	mil.line("# with refs()==0 and lrefs()==0 \n");
	mil.line("");
	abat := new(nil:int,nil:int);
	mil.line("var abat := bat(int,int);");
	aa_a := persists(abat,true);
	mil.line("abat.persists(true);");
	ba_a := commit();
	mil.line("# met of zonder 'abat := nil;'\n");
	mil.line("");
	ca_a := getName(abat);
	t_3 := new(ca_a);
	mil.line("var t_3 := bat(bbpname(abat));");
	da_a := persists(t_3,false);
	mil.line("persists(t_3,false);");
	ea_a := commit();
	mil.line("## Hang:\n");
	fa_a := print(t_3);
	mil.line("");
	ga_a := quit();
#Identifer 'bbpname' mapped to 'getName'
