# Monet Mil to Mal compiler
# Copyright (c) 2001-2004, CWI. All rights reserved.

#Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#include "mil_prelude";
	mil.line("# >Number:         37\n");
	mil.line("# >Category:       Mserver");
	mil.line("# >Category:       Mserver\n");
	mil.line("# >Synopsis:       built-in bats");
	mil.line("# >Synopsis:       built-in bats\n");
	mil.line("# >Confidential:   no");
	mil.line("# >Confidential:   no\n");
	mil.line("# >Severity:       serious");
	mil.line("# >Severity:       serious\n");
	mil.line("# >Priority:       high");
	mil.line("# >Priority:       high\n");
	mil.line("# >Responsible:    mk");
	mil.line("# >Responsible:    mk\n");
	mil.line("# >State:          feedback");
	mil.line("# >State:          feedback\n");
	mil.line("# >Class:          sw-bug");
	mil.line("# >Class:          sw-bug\n");
	mil.line("# >Submitter-Id:   unknown");
	mil.line("# >Submitter-Id:   unknown\n");
	mil.line("# >Arrival-Date:   Tue Oct  7 17:45:11 1997");
	mil.line("# >Arrival-Date:   Tue Oct  7 17:45:11 1997\n");
	mil.line("# >Originator:     mk");
	mil.line("# >Originator:     mk\n");
	mil.line("# >Organization:");
	mil.line("# >Organization:\n");
	mil.line("# >Release:        970101");
	mil.line("# >Release:        970101\n");
	mil.line("# >Environment:");
	mil.line("# >Environment:\n");
	mil.line("# ");
	mil.line("# \n");
	mil.line("# >Description:");
	mil.line("# >Description:\n");
	mil.line("# \"mem\" is not properly handled (like  \"cpu\")");
	mil.line("# \"mem\" is not properly handled (like  \"cpu\")\n");
	mil.line("# ");
	mil.line("# \n");
	mil.line("# >ls;");
	mil.line("# >ls;\n");
	mil.line("# #---------------------------------------------------------#");
	mil.line("# #---------------------------------------------------------#\n");
	mil.line("# # name          | heat  | status| group | role            #");
	mil.line("# # name          | heat  | status| group | role            #\n");
	mil.line("# #---------------------------------------------------------#");
	mil.line("# #---------------------------------------------------------#\n");
	mil.line("# [ \"car_age\",      0,      \"disk\", \"h\",    \"t\"             ]");
	mil.line("# [ \"car_age\",      0,      \"disk\", \"h\",    \"t\"             ]\n");
	mil.line("# [ \"car_gender\",   0,      \"disk\", \"h\",    \"t\"             ]");
	mil.line("# [ \"car_gender\",   0,      \"disk\", \"h\",    \"t\"             ]\n");
	mil.line("# [ \"car_price\",    0,      \"disk\", \"h\",    \"t\"             ]");
	mil.line("# [ \"car_price\",    0,      \"disk\", \"h\",    \"t\"             ]\n");
	mil.line("# [ \"car_category\", 0,      \"disk\", \"h\",    \"t\"             ]");
	mil.line("# [ \"car_category\", 0,      \"disk\", \"h\",    \"t\"             ]\n");
	mil.line("# [ \"car_city\",     0,      \"disk\", \"h\",    \"t\"             ]");
	mil.line("# [ \"car_city\",     0,      \"disk\", \"h\",    \"t\"             ]\n");
	mil.line("# [ \"car_damage\",   0,      \"disk\", \"h\",    \"t\"             ]");
	mil.line("# [ \"car_damage\",   0,      \"disk\", \"h\",    \"t\"             ]\n");
	mil.line("# [ \"a_b\",          0,      \"disk\", \"h\",    \"t\"             ]");
	mil.line("# [ \"a_b\",          0,      \"disk\", \"h\",    \"t\"             ]\n");
	mil.line("# [ \"telephone\",    0,      \"disk\", \"h\",    \"t\"             ]");
	mil.line("# [ \"telephone\",    0,      \"disk\", \"h\",    \"t\"             ]\n");
	mil.line("# [ \"p_name\",       0,      \"disk\", \"h\",    \"t\"             ]");
	mil.line("# [ \"p_name\",       0,      \"disk\", \"h\",    \"t\"             ]\n");
	mil.line("# [ \"p_gender\",     0,      \"disk\", \"h\",    \"t\"             ]");
	mil.line("# [ \"p_gender\",     0,      \"disk\", \"h\",    \"t\"             ]\n");
	mil.line("# [ \"p_age\",        0,      \"disk\", \"h\",    \"t\"             ]");
	mil.line("# [ \"p_age\",        0,      \"disk\", \"h\",    \"t\"             ]\n");
	mil.line("# [ \"p_city\",       0,      \"disk\", \"h\",    \"t\"             ]");
	mil.line("# [ \"p_city\",       0,      \"disk\", \"h\",    \"t\"             ]\n");
	mil.line("# [ \"p_kind\",       0,      \"disk\", \"h\",    \"t\"             ]");
	mil.line("# [ \"p_kind\",       0,      \"disk\", \"h\",    \"t\"             ]\n");
	mil.line("# [ \"mem\",          0,      \"disk\", \"h\",    \"t\"             ]");
	mil.line("# [ \"mem\",          0,      \"disk\", \"h\",    \"t\"             ]\n");
	mil.line("# [ \"io\",           0,      \"disk\", \"h\",    \"t\"             ]");
	mil.line("# [ \"io\",           0,      \"disk\", \"h\",    \"t\"             ]\n");
	mil.line("# [ \"cpu\",          0,      \"disk\", \"h\",    \"t\"             ]");
	mil.line("# [ \"cpu\",          0,      \"disk\", \"h\",    \"t\"             ]\n");
	mil.line("# >mem.print;");
	mil.line("# >mem.print;\n");
	mil.line("# !ERROR: atom 'monet_Mallinfo' unknown, in BAT 'mem'.!ERROR: BATprintf: BAT expected");
	mil.line("# !ERROR: atom 'monet_Mallinfo' unknown, in BAT 'mem'.!ERROR: BATprintf: BAT expected\n");
	mil.line("");
	mil.line("ls();");
	aa_a := ls();
	mil.line("mem.print();");
	mem:= mil.take("mem");
	ba_a := print(mem);
	mil.line("printf(\"#~BeginVariableOutput~#\\n\"); memory().print(); printf(\"#~EndVariableOutput~#\\n\");");
	ca_a := printf("#~BeginVariableOutput~#\n");
	da_a := memory();
	ea_a := print(da_a);
	fa_a := printf("#~EndVariableOutput~#\n");
	mil.line("quit();");
	ga_a := quit();
