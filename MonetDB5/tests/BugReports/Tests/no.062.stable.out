stdout of test 'no.062` in directory 'tests/BugReports` itself:

#> Mtest:	milS no.062 milS
#> Mtest:	Mtimeout -timeout 210 Mserver -modulesilent -yaccsilent -d8 -db tests_BugReports -single no.062.milS
# Monet Database Server V4.1
# Copyright (c) 1993-1999, CWI & SION. All rights reserved.
# compiled for IRIX646.5/32bit on Fri Jan 14 19:36:03 MET 2000.
#script:no.062.milS


# Monet Database Server V4.3.5
# Copyright (c) 1993-2002, CWI. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit; dynamically linked.
# >Number:         62
# >Category:       MIL
# >Synopsis:       Handling of nested arithmetic expressions is inconsistent
# >Confidential:   no
# >Severity:       critical
# >Priority:       high
# >Responsible:    mk
# >State:          feedback
# >Class:          sw-bug
# >Submitter-Id:   unknown
# >Arrival-Date:   Fri Oct 24 14:09:23 1997
# >Originator:     mk
# >Organization:
# >Release:        971007
# >Environment:
# 
# >Description:
# Handlin>t:= new(int,int);
# >t.insert(0,0);
# >t.insert(1+1,0);
# >t.insert(-1,-0);
# >print(t);
# #-----------------#
# # int   | tmp_32  #
# #-----------------#
# [ 0,      0       ]
# [ 2,      0       ]
# [ -1,     0       ]
# ># alles zover is goed
# >t.insert(-1+1,0);
# >t.insert(-1-1,0);
# !ERROR: in syntax at "t.insert(-1-1,0);"
# !                                      ^
# >t.insert(-1 -1, 0);
# !ERROR: in syntax at "t.insert(-1 -1, 0);"
# !                                        ^
# >#not what is expected from nested expression
# >t.print;
# #-----------------#
# # int   | tmp_32  #
# #-----------------#
# [ 0,      0       ]
# [ 2,      0       ]
# [ -1,     0       ]
# [ 0,      0       ]
# >t.insert(0-1+ -1, 0);
# !ERROR: in syntax at "t.insert(0-1+ -1, 0);"
# 
function Admin.main():int;	# 0  (main:int)
    mil.line("# >Number:         62\n");	# 1 MILline ($31:void)<-($32:str)
    mil.line("# >Category:       MIL\n");	# 2 MILline ($33:void)<-($34:str)
    mil.line("# >Synopsis:       Handling of nested arithmetic expressions is inconsistent\n");	# 3 MILline ($35:void)<-($36:str)
    mil.line("# >Confidential:   no\n");	# 4 MILline ($37:void)<-($38:str)
    mil.line("# >Severity:       critical\n");	# 5 MILline ($39:void)<-($40:str)
    mil.line("# >Priority:       high\n");	# 6 MILline ($41:void)<-($42:str)
    mil.line("# >Responsible:    mk\n");	# 7 MILline ($43:void)<-($44:str)
    mil.line("# >State:          feedback\n");	# 8 MILline ($45:void)<-($46:str)
    mil.line("# >Class:          sw-bug\n");	# 9 MILline ($47:void)<-($48:str)
    mil.line("# >Submitter-Id:   unknown\n");	# 10 MILline ($49:void)<-($50:str)
    mil.line("# >Arrival-Date:   Fri Oct 24 14:09:23 1997\n");	# 11 MILline ($51:void)<-($52:str)
    mil.line("# >Originator:     mk\n");	# 12 MILline ($53:void)<-($54:str)
    mil.line("# >Organization:\n");	# 13 MILline ($55:void)<-($56:str)
    mil.line("# >Release:        971007\n");	# 14 MILline ($57:void)<-($58:str)
    mil.line("# >Environment:\n");	# 15 MILline ($59:void)<-($60:str)
    mil.line("# \n");	# 16 MILline ($61:void)<-($62:str)
    mil.line("# >Description:\n");	# 17 MILline ($63:void)<-($64:str)
    mil.line("# Handlin>t:= new(int,int);\n");	# 18 MILline ($65:void)<-($66:str)
    mil.line("# >t.insert(0,0);\n");	# 19 MILline ($67:void)<-($68:str)
    mil.line("# >t.insert(1+1,0);\n");	# 20 MILline ($69:void)<-($70:str)
    mil.line("# >t.insert(-1,-0);\n");	# 21 MILline ($71:void)<-($72:str)
    mil.line("# >print(t);\n");	# 22 MILline ($73:void)<-($74:str)
    mil.line("# #-----------------#\n");	# 23 MILline ($75:void)<-($76:str)
    mil.line("# # int   | tmp_32  #\n");	# 24 MILline ($77:void)<-($78:str)
    mil.line("# #-----------------#\n");	# 25 MILline ($79:void)<-($76:str)
    mil.line("# [ 0,      0       ]\n");	# 26 MILline ($80:void)<-($81:str)
    mil.line("# [ 2,      0       ]\n");	# 27 MILline ($82:void)<-($83:str)
    mil.line("# [ -1,     0       ]\n");	# 28 MILline ($84:void)<-($85:str)
    mil.line("# ># alles zover is goed\n");	# 29 MILline ($86:void)<-($87:str)
    mil.line("# >t.insert(-1+1,0);\n");	# 30 MILline ($88:void)<-($89:str)
    mil.line("# >t.insert(-1 - 1,0);\n");	# 31 MILline ($90:void)<-($91:str)
    mil.line("# !ERROR: in syntax at \"t.insert(-1 - 1,0);\"\n");	# 32 MILline ($92:void)<-($93:str)
    mil.line("# !                                      ^\n");	# 33 MILline ($94:void)<-($95:str)
    mil.line("# >t.insert(-1 -1, 0);\n");	# 34 MILline ($96:void)<-($97:str)
    mil.line("# !ERROR: in syntax at \"t.insert(-1 -1, 0);\"\n");	# 35 MILline ($98:void)<-($99:str)
    mil.line("# !                                        ^\n");	# 36 MILline ($100:void)<-($101:str)
    mil.line("# >#not what is expected from nested expression\n");	# 37 MILline ($102:void)<-($103:str)
    mil.line("# >t.print;\n");	# 38 MILline ($104:void)<-($105:str)
    mil.line("# #-----------------#\n");	# 39 MILline ($106:void)<-($76:str)
    mil.line("# # int   | tmp_32  #\n");	# 40 MILline ($107:void)<-($78:str)
    mil.line("# #-----------------#\n");	# 41 MILline ($108:void)<-($109:str)
    mil.line("# [ 0,      0       ]\n");	# 42 MILline ($110:void)<-($81:str)
    mil.line("# [ 2,      0       ]\n");	# 43 MILline ($111:void)<-($83:str)
    mil.line("# [ -1,     0       ]\n");	# 44 MILline ($112:void)<-($85:str)
    mil.line("# [ 0,      0       ]\n");	# 45 MILline ($113:void)<-($114:str)
    mil.line("# >t.insert(0-1+ -1, 0);\n");	# 46 MILline ($115:void)<-($116:str)
    mil.line("# !ERROR: in syntax at \"t.insert(0-1+ -1, 0);\"\n");	# 47 MILline ($117:void)<-($118:str)
    mil.line("# \n");	# 48 MILline ($119:void)<-($120:str)
    mil.line("# This is not what a user would expect\n");	# 49 MILline ($121:void)<-($122:str)
    mil.line("setoid(oid(20000000));");	# 50 MILline ($123:void)<-($124:str)
    aa_a := calc.oid(20000000);	# 51 CALCint2oid (aa_a:oid)<-($126:int)
    ba_a := calc.setoid(aa_a);	# 52 CALCsetoidInc (ba_a:oid)<-(aa_a:oid)
    mil.line("var t:= new(int,int);");	# 53 MILline ($128:void)<-($129:str)
    t := bbp.new(nil:int,nil:int);	# 54 CMDBATnew (t:bat[:int,:int])<-($131:int)($131:int)
    mil.line("t.insert(0,0);");	# 55 MILline ($132:void)<-($133:str)
    ca_a := mil_insert.insert(t,0,0);	# 56 MILinsert_bun (ca_a:bat[:int,:int])<-(t:bat[:int,:int])($135:int)($135:int)
    mil.line("t.insert(1+1,0);");	# 57 MILline ($136:void)<-($137:str)
    da_a := calc.+(1,1);	# 58 CALCbinaryADDintint (da_a:int)<-($139:int)($139:int)
    ea_a := mil_insert.insert(t,da_a,0);	# 59 MILinsert_bun (ea_a:bat[:int,:int])<-(t:bat[:int,:int])(da_a:int)($135:int)
    mil.line("t.insert(-1,-0);");	# 60 MILline ($141:void)<-($142:str)
    fa_a := mil_insert.insert(t,-1,-0);	# 61 MILinsert_bun (fa_a:bat[:int,:int])<-(t:bat[:int,:int])($144:int)($145:int)
    mil.line("t.insert(0,0);");	# 62 MILline ($146:void)<-($133:str)
    ga_a := mil_insert.insert(t,0,0);	# 63 MILinsert_bun (ga_a:bat[:int,:int])<-(t:bat[:int,:int])($135:int)($135:int)
    mil.line("t.insert(-1+1,0);");	# 64 MILline ($148:void)<-($149:str)
    ha_a := calc.+(-1,1);	# 65 CALCbinaryADDintint (ha_a:int)<-($144:int)($139:int)
    ia_a := mil_insert.insert(t,ha_a,0);	# 66 MILinsert_bun (ia_a:bat[:int,:int])<-(t:bat[:int,:int])(ha_a:int)($135:int)
    mil.line("print(t);");	# 67 MILline ($152:void)<-($153:str)
    ja_a := io.print(t);	# 68 IOprint_val (ja_a:int)<-(t:bat[:int,:int])
    mil.line("# alles zover is goed\n");	# 69 MILline ($155:void)<-($156:str)
end main;	# 70  
## >Number:         62
## >Category:       MIL
## >Synopsis:       Handling of nested arithmetic expressions is inconsistent
## >Confidential:   no
## >Severity:       critical
## >Priority:       high
## >Responsible:    mk
## >State:          feedback
## >Class:          sw-bug
## >Submitter-Id:   unknown
## >Arrival-Date:   Fri Oct 24 14:09:23 1997
## >Originator:     mk
## >Organization:
## >Release:        971007
## >Environment:
## 
## >Description:
## Handlin>t:= new(int,int);
## >t.insert(0,0);
## >t.insert(1+1,0);
## >t.insert(-1,-0);
## >print(t);
## #-----------------#
## # int   | tmp_32  #
## #-----------------#
## [ 0,      0       ]
## [ 2,      0       ]
## [ -1,     0       ]
## ># alles zover is goed
## >t.insert(-1+1,0);
## >t.insert(-1 - 1,0);
## !ERROR: in syntax at "t.insert(-1 - 1,0);"
## !                                      ^
## >t.insert(-1 -1, 0);
## !ERROR: in syntax at "t.insert(-1 -1, 0);"
## !                                        ^
## >#not what is expected from nested expression
## >t.print;
## #-----------------#
## # int   | tmp_32  #
## #-----------------#
## [ 0,      0       ]
## [ 2,      0       ]
## [ -1,     0       ]
## [ 0,      0       ]
## >t.insert(0-1+ -1, 0);
## !ERROR: in syntax at "t.insert(0-1+ -1, 0);"
## 
## This is not what a user would expect
#setoid(oid(20000000));
#var t:= new(int,int);
#t.insert(0,0);
#t.insert(1+1,0);
#t.insert(-1,-0);
#t.insert(0,0);
#t.insert(-1+1,0);
#print(t);
#-----------------#
# BAT:	  tmp_25  #
# (int)	  (int)	  #
#-----------------#
[ 0,	  0	  ]
[ 2,	  0	  ]
[ -1,	  0	  ]
[ 0,	  0	  ]
[ 0,	  0	  ]
## alles zover is goed

# 22:47:44 >  
# 22:47:44 >  Done.
# 22:47:44 >  

