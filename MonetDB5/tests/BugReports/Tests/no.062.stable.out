stdout of test 'no.062` in directory 'tests/BugReports` itself:

#> Mtest:	milS no.062 milS
#> Mtest:	Mtimeout -timeout 210 Mserver -modulesilent -yaccsilent -d8 -db tests_BugReports -single no.062.milS
# Monet Database Server V4.1
# Copyright (c) 1993-1999, CWI & SION. All rights reserved.
# compiled for IRIX646.5/32bit on Fri Jan 14 19:36:03 MET 2000.
#script:no.062.milS


# Monet Database Server V4.3.5
# Copyright (c) 1993-2002, CWI. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit; dynamically linked.
# >Number:         62
# >Category:       MIL
# >Synopsis:       Handling of nested arithmetic expressions is inconsistent
# >Confidential:   no
# >Severity:       critical
# >Priority:       high
# >Responsible:    mk
# >State:          feedback
# >Class:          sw-bug
# >Submitter-Id:   unknown
# >Arrival-Date:   Fri Oct 24 14:09:23 1997
# >Originator:     mk
# >Organization:
# >Release:        971007
# >Environment:
# 
# >Description:
# Handlin>t:= new(int,int);
# >t.insert(0,0);
# >t.insert(1+1,0);
# >t.insert(-1,-0);
# >print(t);
# #-----------------#
# # int   | tmp_32  #
# #-----------------#
# [ 0,      0       ]
# [ 2,      0       ]
# [ -1,     0       ]
# ># alles zover is goed
# >t.insert(-1+1,0);
# >t.insert(-1-1,0);
# !ERROR: in syntax at "t.insert(-1-1,0);"
# !                                      ^
# >t.insert(-1 -1, 0);
# !ERROR: in syntax at "t.insert(-1 -1, 0);"
# !                                        ^
# >#not what is expected from nested expression
# >t.print;
# #-----------------#
# # int   | tmp_32  #
# #-----------------#
# [ 0,      0       ]
# [ 2,      0       ]
# [ -1,     0       ]
# [ 0,      0       ]
# >t.insert(0-1+ -1, 0);
# !ERROR: in syntax at "t.insert(0-1+ -1, 0);"
# 
function Admin.main():int;	# 0  (main:int)
    mil.line("# >Number:         62\n");	# 1 MILline ($1:void)<-($2:str)
    mil.line("# >Category:       MIL\n");	# 2 MILline ($3:void)<-($4:str)
    mil.line("# >Synopsis:       Handling of nested arithmetic expressions is inconsistent\n");	# 3 MILline ($5:void)<-($6:str)
    mil.line("# >Confidential:   no\n");	# 4 MILline ($7:void)<-($8:str)
    mil.line("# >Severity:       critical\n");	# 5 MILline ($9:void)<-($10:str)
    mil.line("# >Priority:       high\n");	# 6 MILline ($11:void)<-($12:str)
    mil.line("# >Responsible:    mk\n");	# 7 MILline ($13:void)<-($14:str)
    mil.line("# >State:          feedback\n");	# 8 MILline ($15:void)<-($16:str)
    mil.line("# >Class:          sw-bug\n");	# 9 MILline ($17:void)<-($18:str)
    mil.line("# >Submitter-Id:   unknown\n");	# 10 MILline ($19:void)<-($20:str)
    mil.line("# >Arrival-Date:   Fri Oct 24 14:09:23 1997\n");	# 11 MILline ($21:void)<-($22:str)
    mil.line("# >Originator:     mk\n");	# 12 MILline ($23:void)<-($24:str)
    mil.line("# >Organization:\n");	# 13 MILline ($25:void)<-($26:str)
    mil.line("# >Release:        971007\n");	# 14 MILline ($27:void)<-($28:str)
    mil.line("# >Environment:\n");	# 15 MILline ($29:void)<-($30:str)
    mil.line("# \n");	# 16 MILline ($31:void)<-($32:str)
    mil.line("# >Description:\n");	# 17 MILline ($33:void)<-($34:str)
    mil.line("# Handlin>t:= new(int,int);\n");	# 18 MILline ($35:void)<-($36:str)
    mil.line("# >t.insert(0,0);\n");	# 19 MILline ($37:void)<-($38:str)
    mil.line("# >t.insert(1+1,0);\n");	# 20 MILline ($39:void)<-($40:str)
    mil.line("# >t.insert(-1,-0);\n");	# 21 MILline ($41:void)<-($42:str)
    mil.line("# >print(t);\n");	# 22 MILline ($43:void)<-($44:str)
    mil.line("# #-----------------#\n");	# 23 MILline ($45:void)<-($46:str)
    mil.line("# # int   | tmp_32  #\n");	# 24 MILline ($47:void)<-($48:str)
    mil.line("# #-----------------#\n");	# 25 MILline ($49:void)<-($46:str)
    mil.line("# [ 0,      0       ]\n");	# 26 MILline ($50:void)<-($51:str)
    mil.line("# [ 2,      0       ]\n");	# 27 MILline ($52:void)<-($53:str)
    mil.line("# [ -1,     0       ]\n");	# 28 MILline ($54:void)<-($55:str)
    mil.line("# ># alles zover is goed\n");	# 29 MILline ($56:void)<-($57:str)
    mil.line("# >t.insert(-1+1,0);\n");	# 30 MILline ($58:void)<-($59:str)
    mil.line("# >t.insert(-1 - 1,0);\n");	# 31 MILline ($60:void)<-($61:str)
    mil.line("# !ERROR: in syntax at \"t.insert(-1 - 1,0);\"\n");	# 32 MILline ($62:void)<-($63:str)
    mil.line("# !                                      ^\n");	# 33 MILline ($64:void)<-($65:str)
    mil.line("# >t.insert(-1 -1, 0);\n");	# 34 MILline ($66:void)<-($67:str)
    mil.line("# !ERROR: in syntax at \"t.insert(-1 -1, 0);\"\n");	# 35 MILline ($68:void)<-($69:str)
    mil.line("# !                                        ^\n");	# 36 MILline ($70:void)<-($71:str)
    mil.line("# >#not what is expected from nested expression\n");	# 37 MILline ($72:void)<-($73:str)
    mil.line("# >t.print;\n");	# 38 MILline ($74:void)<-($75:str)
    mil.line("# #-----------------#\n");	# 39 MILline ($76:void)<-($46:str)
    mil.line("# # int   | tmp_32  #\n");	# 40 MILline ($77:void)<-($48:str)
    mil.line("# #-----------------#\n");	# 41 MILline ($78:void)<-($79:str)
    mil.line("# [ 0,      0       ]\n");	# 42 MILline ($80:void)<-($51:str)
    mil.line("# [ 2,      0       ]\n");	# 43 MILline ($81:void)<-($53:str)
    mil.line("# [ -1,     0       ]\n");	# 44 MILline ($82:void)<-($55:str)
    mil.line("# [ 0,      0       ]\n");	# 45 MILline ($83:void)<-($84:str)
    mil.line("# >t.insert(0-1+ -1, 0);\n");	# 46 MILline ($85:void)<-($86:str)
    mil.line("# !ERROR: in syntax at \"t.insert(0-1+ -1, 0);\"\n");	# 47 MILline ($87:void)<-($88:str)
    mil.line("# \n");	# 48 MILline ($89:void)<-($90:str)
    mil.line("# This is not what a user would expect\n");	# 49 MILline ($91:void)<-($92:str)
    mil.line("setoid(oid(20000000));");	# 50 MILline ($93:void)<-($94:str)
    aa_a := calc.oid(20000000);	# 51 CALCint2oid (aa_a:oid)<-($96:int)
    ba_a := calc.setoid(aa_a);	# 52 CALCsetoidInc (ba_a:oid)<-(aa_a:oid)
    mil.line("var t:= new(int,int);");	# 53 MILline ($98:void)<-($99:str)
    t := bbp.new(nil,nil);	# 54 CMDBATnew (t:bat[:int,:int])<-($101:int)($101:int)
    mil.line("t.insert(0,0);");	# 55 MILline ($102:void)<-($103:str)
    ca_a := bat.insert(t,0,0);	# 56 BKCinsert_bun (ca_a:void)<-(t:bat[:int,:int])($105:int)($105:int)
    mil.line("t.insert(1+1,0);");	# 57 MILline ($106:void)<-($107:str)
    da_a := calc.+(1,1);	# 58 CALCbinaryADDintint (da_a:int)<-($109:int)($109:int)
    ea_a := bat.insert(t,da_a,0);	# 59 BKCinsert_bun (ea_a:void)<-(t:bat[:int,:int])(da_a:int)($105:int)
    mil.line("t.insert(-1,-0);");	# 60 MILline ($111:void)<-($112:str)
    fa_a := bat.insert(t,-1,-0);	# 61 BKCinsert_bun (fa_a:void)<-(t:bat[:int,:int])($114:int)($115:int)
    mil.line("t.insert(0,0);");	# 62 MILline ($116:void)<-($103:str)
    ga_a := bat.insert(t,0,0);	# 63 BKCinsert_bun (ga_a:void)<-(t:bat[:int,:int])($105:int)($105:int)
    mil.line("t.insert(-1+1,0);");	# 64 MILline ($118:void)<-($119:str)
    ha_a := calc.+(-1,1);	# 65 CALCbinaryADDintint (ha_a:int)<-($114:int)($109:int)
    ia_a := bat.insert(t,ha_a,0);	# 66 BKCinsert_bun (ia_a:void)<-(t:bat[:int,:int])(ha_a:int)($105:int)
    mil.line("print(t);");	# 67 MILline ($122:void)<-($123:str)
    ja_a := io.print(t);	# 68 IOprint_val (ja_a:int)<-(t:bat[:int,:int])
    mil.line("# alles zover is goed\n");	# 69 MILline ($125:void)<-($126:str)
end main;	# 70  
## >Number:         62
## >Category:       MIL
## >Synopsis:       Handling of nested arithmetic expressions is inconsistent
## >Confidential:   no
## >Severity:       critical
## >Priority:       high
## >Responsible:    mk
## >State:          feedback
## >Class:          sw-bug
## >Submitter-Id:   unknown
## >Arrival-Date:   Fri Oct 24 14:09:23 1997
## >Originator:     mk
## >Organization:
## >Release:        971007
## >Environment:
## 
## >Description:
## Handlin>t:= new(int,int);
## >t.insert(0,0);
## >t.insert(1+1,0);
## >t.insert(-1,-0);
## >print(t);
## #-----------------#
## # int   | tmp_32  #
## #-----------------#
## [ 0,      0       ]
## [ 2,      0       ]
## [ -1,     0       ]
## ># alles zover is goed
## >t.insert(-1+1,0);
## >t.insert(-1 - 1,0);
## !ERROR: in syntax at "t.insert(-1 - 1,0);"
## !                                      ^
## >t.insert(-1 -1, 0);
## !ERROR: in syntax at "t.insert(-1 -1, 0);"
## !                                        ^
## >#not what is expected from nested expression
## >t.print;
## #-----------------#
## # int   | tmp_32  #
## #-----------------#
## [ 0,      0       ]
## [ 2,      0       ]
## [ -1,     0       ]
## [ 0,      0       ]
## >t.insert(0-1+ -1, 0);
## !ERROR: in syntax at "t.insert(0-1+ -1, 0);"
## 
## This is not what a user would expect
#setoid(oid(20000000));
#var t:= new(int,int);
#t.insert(0,0);
#t.insert(1+1,0);
#t.insert(-1,-0);
#t.insert(0,0);
#t.insert(-1+1,0);
#print(t);
#-----------------#
# BAT:	  tmp_25  #
# (int)	  (int)	  #
#-----------------#
[ 0,	  0	  ]
[ 2,	  0	  ]
[ -1,	  0	  ]
[ 0,	  0	  ]
[ 0,	  0	  ]
## alles zover is goed
>
# 17:18:19 >  
# 17:18:19 >  Done.
# 17:18:19 >  

