# Monet Mil to Mal compiler
# Copyright (c) 2001-2004, CWI. All rights reserved.

#Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#include "mil_prelude";
	mil.line("# >Number:         31\n");
	mil.line("# >Category:       Mserver");
	mil.line("# >Category:       Mserver\n");
	mil.line("# >Synopsis:       Import does not work.");
	mil.line("# >Synopsis:       Import does not work.\n");
	mil.line("# >Confidential:   no");
	mil.line("# >Confidential:   no\n");
	mil.line("# >Severity:       serious");
	mil.line("# >Severity:       serious\n");
	mil.line("# >Priority:       medium");
	mil.line("# >Priority:       medium\n");
	mil.line("# >Responsible:    quak");
	mil.line("# >Responsible:    quak\n");
	mil.line("# >State:          closed");
	mil.line("# >State:          closed\n");
	mil.line("# >Class:          sw-bug");
	mil.line("# >Class:          sw-bug\n");
	mil.line("# >Submitter-Id:   unknown");
	mil.line("# >Submitter-Id:   unknown\n");
	mil.line("# >Arrival-Date:   Fri Sep 19 16:00:42 1997");
	mil.line("# >Arrival-Date:   Fri Sep 19 16:00:42 1997\n");
	mil.line("# >Originator:     quak");
	mil.line("# >Originator:     quak\n");
	mil.line("# >Organization:");
	mil.line("# >Organization:\n");
	mil.line("# >Release:        970101");
	mil.line("# >Release:        970101\n");
	mil.line("# >Environment:");
	mil.line("# >Environment:\n");
	mil.line("# ALL");
	mil.line("# ALL\n");
	mil.line("# >Description:");
	mil.line("# >Description:\n");
	mil.line("# The following script, which creates a bat exports");
	mil.line("# The following script, which creates a bat exports\n");
	mil.line("# it and then tries to import it again fails:");
	mil.line("# it and then tries to import it again fails:\n");
	mil.line("# ");
	mil.line("# \n");
	mil.line("# > a := new(int,int);");
	mil.line("# > a := new(int,int);\n");
	mil.line("# > a.insert(1,1);");
	mil.line("# > a.insert(1,1);\n");
	mil.line("# > a.export(\"/home/quak/tmp/testt\");");
	mil.line("# > a.export(\"/home/quak/tmp/testt\");\n");
	mil.line("# > b := new(int,int);");
	mil.line("# > b := new(int,int);\n");
	mil.line("# > b.import(\"/home/quak/tmp/testt\");");
	mil.line("# > b.import(\"/home/quak/tmp/testt\");\n");
	mil.line("");
	mil.line("var a := new(int,int);");
	a := new(nil:int,nil:int);
	mil.line("a.insert(1,1);");
	aa_a := insert(a,1,1);
	mil.line("a.print();");
	ba_a := print(a);
	mil.line("a.export(\"testt\");");
	ca_a := export(a,"testt");
	mil.line("var b := new(int,int);");
	b := new(nil:int,nil:int);
	mil.line("b.import(\"testt\");");
	da_a := import(b,"testt");
	mil.line("b.print();");
	ea_a := print(b);
	mil.line("quit();");
	fa_a := quit();
