stdout of test 'no.016` in directory 'tests/BugReports` itself:

#> Mtest:	milS no.016 milS
#> Mtest:	Mtimeout -timeout 210 Mserver -modulesilent -yaccsilent -d8 -db tests_BugReports -single no.016.milS
# Monet Database Server V4.1
# Copyright (c) 1993-1999, CWI & SION. All rights reserved.
# compiled for IRIX646.5/32bit on Fri Jan 14 01:04:33 MET 2000.
#script:no.016.milS








# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux//var/MonetDB5/dbfarm
# dbname:mTests_tests_BugReports
# Visit http://monetdb.cwi.nl for further information.
## Monet Mil to Mal compiler
## Copyright (c) 2001-2004, CWI. All rights reserved.
#
## Predefined code segment
##The compiler can not guarantee an accurate compilation,
##because MIL unlike MAL is a dynamically typed language.
##A few guidelines to maximize usefullness.
##- make the type of variables explicit, in particular 'nil'
##- upon advice of M2m to remap identifiers, change it in your program directly
##var a := new(int, int);
#	a := new(:int,:int);
##a.sample(1).print();
#	aa_a := sample(a,1);
#	ba_a := print(aa_a,);
##quit();
#	ca_a := quit();
#
function Admin.main():int;	# 0  (main:int)
    mil.line("# >Number:         16\n");	# 1 MILline ($1:void)<-($2:str)
    mil.line("# >Category:       MIL\n");	# 2 MILline ($3:void)<-($4:str)
    mil.line("# >Synopsis:       MIL: sample, does not handle empty BAT\n");	# 3 MILline ($5:void)<-($6:str)
    mil.line("# >Confidential:   no\n");	# 4 MILline ($7:void)<-($8:str)
    mil.line("# >Severity:       serious\n");	# 5 MILline ($9:void)<-($10:str)
    mil.line("# >Priority:       medium\n");	# 6 MILline ($11:void)<-($12:str)
    mil.line("# >Responsible:    boncz\n");	# 7 MILline ($13:void)<-($14:str)
    mil.line("# >State:          closed\n");	# 8 MILline ($15:void)<-($16:str)
    mil.line("# >Class:          sw-bug\n");	# 9 MILline ($17:void)<-($18:str)
    mil.line("# >Submitter-Id:   unknown\n");	# 10 MILline ($19:void)<-($20:str)
    mil.line("# >Arrival-Date:   Wed Jul 16 15:00:00 1997\n");	# 11 MILline ($21:void)<-($22:str)
    mil.line("# >Originator:     jonas\n");	# 12 MILline ($23:void)<-($24:str)
    mil.line("# >Organization:\n");	# 13 MILline ($25:void)<-($26:str)
    mil.line("# >Release:        970101\n");	# 14 MILline ($27:void)<-($28:str)
    mil.line("# >Environment:\n");	# 15 MILline ($29:void)<-($30:str)
    mil.line("# general/IRIX monet3.0.6\n");	# 16 MILline ($31:void)<-($32:str)
    mil.line("# >Description:\n");	# 17 MILline ($33:void)<-($34:str)
    mil.line("# >a := new(int, int);\n");	# 18 MILline ($35:void)<-($36:str)
    mil.line("# >a.sample(1).print;\n");	# 19 MILline ($37:void)<-($38:str)
    mil.line("# !FATAL GDKmalloc called with size 0\n");	# 20 MILline ($39:void)<-($40:str)
    mil.line("var a := new(int, int);");	# 21 MILline ($41:void)<-($42:str)
    a := bbp.new(nil,nil);	# 22 CMDBATnew (a:bat[:int,:int])<-($44:int)($44:int)
    mil.line("a.sample(1).print();");	# 23 MILline ($45:void)<-($46:str)
    aa_a := algebra.sample(a,1);	# 24 ALGsample (aa_a:bat[:int,:int])<-(a:bat[:int,:int])($48:int)
    ba_a := io.print(aa_a);	# 25 IOprint_val (ba_a:int)<-(aa_a:bat[:int,:int])
    mil.line("quit();");	# 26 MILline ($50:void)<-($51:str)
    ca_a := clients.quit();	# 27 CLTquit (ca_a:void)
end main;	# 28  
## >Number:         16
## >Category:       MIL
## >Category:       MIL
## >Synopsis:       MIL: sample, does not handle empty BAT
## >Synopsis:       MIL: sample, does not handle empty BAT
## >Confidential:   no
## >Confidential:   no
## >Severity:       serious
## >Severity:       serious
## >Priority:       medium
## >Priority:       medium
## >Responsible:    boncz
## >Responsible:    boncz
## >State:          closed
## >State:          closed
## >Class:          sw-bug
## >Class:          sw-bug
## >Submitter-Id:   unknown
## >Submitter-Id:   unknown
## >Arrival-Date:   Wed Jul 16 15:00:00 1997
## >Arrival-Date:   Wed Jul 16 15:00:00 1997
## >Originator:     jonas
## >Originator:     jonas
## >Organization:
## >Organization:
## >Release:        970101
## >Release:        970101
## >Environment:
## >Environment:
## general/IRIX monet3.0.6
## general/IRIX monet3.0.6
## >Description:
## >Description:
## >a := new(int, int);
## >a := new(int, int);
## >a.sample(1).print;
## >a.sample(1).print;
## !FATAL GDKmalloc called with size 0
## !FATAL GDKmalloc called with size 0
#
#var a := new(int, int);
#a.sample(1).print();
#-----------------#
# BAT:	  tmp_26  #
# (int)	  (int)	  #
#-----------------#

# 17:06:45 >  
# 17:06:45 >  Done.
# 17:06:45 >  

