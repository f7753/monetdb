stdout of test 'no.037` in directory 'tests/BugReports` itself:

#> Mtest:	milS no.037 milS
#> Mtest:	Mtimeout -timeout 210 Mserver -modulesilent -yaccsilent -d8 -db tests_BugReports -single no.037.milS
# Monet Database Server V4.1
# Copyright (c) 1993-1999, CWI & SION. All rights reserved.
# compiled for IRIX646.5/32bit on Fri Jan 14 19:36:03 MET 2000.
#script:no.037.milS


# Monet Database Server V4.3.5
# Copyright (c) 1993-2002, CWI. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit; dynamically linked.
# >Number:         37
# >Category:       Mserver
# >Synopsis:       built-in bats
# >Confidential:   no
# >Severity:       serious
# >Priority:       high
# >Responsible:    mk
# >State:          feedback
# >Class:          sw-bug
# >Submitter-Id:   unknown
# >Arrival-Date:   Tue Oct  7 17:45:11 1997
# >Originator:     mk
# >Organization:
# >Release:        970101
# >Environment:
# 
# >Description:
# "mem" is not properly handled (like  "cpu")
# 
function Admin.main():int;	# 0  (main:int)
    mil.line("# >Number:         37\n");	# 1 MILline ($1:void)<-($2:str)
    mil.line("# >Category:       Mserver\n");	# 2 MILline ($3:void)<-($4:str)
    mil.line("# >Synopsis:       built-in bats\n");	# 3 MILline ($5:void)<-($6:str)
    mil.line("# >Confidential:   no\n");	# 4 MILline ($7:void)<-($8:str)
    mil.line("# >Severity:       serious\n");	# 5 MILline ($9:void)<-($10:str)
    mil.line("# >Priority:       high\n");	# 6 MILline ($11:void)<-($12:str)
    mil.line("# >Responsible:    mk\n");	# 7 MILline ($13:void)<-($14:str)
    mil.line("# >State:          feedback\n");	# 8 MILline ($15:void)<-($16:str)
    mil.line("# >Class:          sw-bug\n");	# 9 MILline ($17:void)<-($18:str)
    mil.line("# >Submitter-Id:   unknown\n");	# 10 MILline ($19:void)<-($20:str)
    mil.line("# >Arrival-Date:   Tue Oct  7 17:45:11 1997\n");	# 11 MILline ($21:void)<-($22:str)
    mil.line("# >Originator:     mk\n");	# 12 MILline ($23:void)<-($24:str)
    mil.line("# >Organization:\n");	# 13 MILline ($25:void)<-($26:str)
    mil.line("# >Release:        970101\n");	# 14 MILline ($27:void)<-($28:str)
    mil.line("# >Environment:\n");	# 15 MILline ($29:void)<-($30:str)
    mil.line("# \n");	# 16 MILline ($31:void)<-($32:str)
    mil.line("# >Description:\n");	# 17 MILline ($33:void)<-($34:str)
    mil.line("# \"mem\" is not properly handled (like  \"cpu\")\n");	# 18 MILline ($35:void)<-($36:str)
    mil.line("# \n");	# 19 MILline ($37:void)<-($32:str)
    mil.line("# >ls;\n");	# 20 MILline ($38:void)<-($39:str)
    mil.line("# #---------------------------------------------------------#\n");	# 21 MILline ($40:void)<-($41:str)
    mil.line("# # name          | heat  | status| group | role            #\n");	# 22 MILline ($42:void)<-($43:str)
    mil.line("# #---------------------------------------------------------#\n");	# 23 MILline ($44:void)<-($41:str)
    mil.line("# [ \"car_age\",      0,      \"disk\", \"h\",    \"t\"             ]\n");	# 24 MILline ($45:void)<-($46:str)
    mil.line("# [ \"car_gender\",   0,      \"disk\", \"h\",    \"t\"             ]\n");	# 25 MILline ($47:void)<-($48:str)
    mil.line("# [ \"car_price\",    0,      \"disk\", \"h\",    \"t\"             ]\n");	# 26 MILline ($49:void)<-($50:str)
    mil.line("# [ \"car_category\", 0,      \"disk\", \"h\",    \"t\"             ]\n");	# 27 MILline ($51:void)<-($52:str)
    mil.line("# [ \"car_city\",     0,      \"disk\", \"h\",    \"t\"             ]\n");	# 28 MILline ($53:void)<-($54:str)
    mil.line("# [ \"car_damage\",   0,      \"disk\", \"h\",    \"t\"             ]\n");	# 29 MILline ($55:void)<-($56:str)
    mil.line("# [ \"a_b\",          0,      \"disk\", \"h\",    \"t\"             ]\n");	# 30 MILline ($57:void)<-($58:str)
    mil.line("# [ \"telephone\",    0,      \"disk\", \"h\",    \"t\"             ]\n");	# 31 MILline ($59:void)<-($60:str)
    mil.line("# [ \"p_name\",       0,      \"disk\", \"h\",    \"t\"             ]\n");	# 32 MILline ($61:void)<-($62:str)
    mil.line("# [ \"p_gender\",     0,      \"disk\", \"h\",    \"t\"             ]\n");	# 33 MILline ($63:void)<-($64:str)
    mil.line("# [ \"p_age\",        0,      \"disk\", \"h\",    \"t\"             ]\n");	# 34 MILline ($65:void)<-($66:str)
    mil.line("# [ \"p_city\",       0,      \"disk\", \"h\",    \"t\"             ]\n");	# 35 MILline ($67:void)<-($68:str)
    mil.line("# [ \"p_kind\",       0,      \"disk\", \"h\",    \"t\"             ]\n");	# 36 MILline ($69:void)<-($70:str)
    mil.line("# [ \"mem\",          0,      \"disk\", \"h\",    \"t\"             ]\n");	# 37 MILline ($71:void)<-($72:str)
    mil.line("# [ \"io\",           0,      \"disk\", \"h\",    \"t\"             ]\n");	# 38 MILline ($73:void)<-($74:str)
    mil.line("# [ \"cpu\",          0,      \"disk\", \"h\",    \"t\"             ]\n");	# 39 MILline ($75:void)<-($76:str)
    mil.line("# >mem.print;\n");	# 40 MILline ($77:void)<-($78:str)
    mil.line("# !ERROR: atom 'monet_Mallinfo' unknown, in BAT 'mem'.!ERROR: BATprintf: BAT expected\n");	# 41 MILline ($79:void)<-($80:str)
    mil.line("ls();");	# 42 MILline ($81:void)<-($82:str)
    aa_a := mil_sys_procs.ls();	# 43  (aa_a:void)
    mil.line("mem.print();");	# 44 MILline ($84:void)<-($85:str)
    mil.line("printf(\"#~BeginVariableOutput~#\\n\"); memory().print(); printf(\"#~EndVariableOutput~#\\n\");");	# 45 MILline ($86:void)<-($87:str)
    ca_a := io.printf("#~BeginVariableOutput~#\n");	# 46 IOprint_str (ca_a:int)<-($89:str)
    da_a := status.memStatistics();	# 47 SYSmemStatistics (da_a:bat[:str,:int])
    ea_a := io.print(da_a);	# 48 IOprint_val (ea_a:int)<-(da_a:bat[:str,:int])
    fa_a := io.printf("#~EndVariableOutput~#\n");	# 49 IOprint_str (fa_a:int)<-($93:str)
    mil.line("quit();");	# 50 MILline ($94:void)<-($95:str)
    ga_a := clients.quit();	# 51 CLTquit (ga_a:void)
end main;	# 52  
## >Number:         37
## >Category:       Mserver
## >Synopsis:       built-in bats
## >Confidential:   no
## >Severity:       serious
## >Priority:       high
## >Responsible:    mk
## >State:          feedback
## >Class:          sw-bug
## >Submitter-Id:   unknown
## >Arrival-Date:   Tue Oct  7 17:45:11 1997
## >Originator:     mk
## >Organization:
## >Release:        970101
## >Environment:
## 
## >Description:
## "mem" is not properly handled (like  "cpu")
## 
## >ls;
## #---------------------------------------------------------#
## # name          | heat  | status| group | role            #
## #---------------------------------------------------------#
## [ "car_age",      0,      "disk", "h",    "t"             ]
## [ "car_gender",   0,      "disk", "h",    "t"             ]
## [ "car_price",    0,      "disk", "h",    "t"             ]
## [ "car_category", 0,      "disk", "h",    "t"             ]
## [ "car_city",     0,      "disk", "h",    "t"             ]
## [ "car_damage",   0,      "disk", "h",    "t"             ]
## [ "a_b",          0,      "disk", "h",    "t"             ]
## [ "telephone",    0,      "disk", "h",    "t"             ]
## [ "p_name",       0,      "disk", "h",    "t"             ]
## [ "p_gender",     0,      "disk", "h",    "t"             ]
## [ "p_age",        0,      "disk", "h",    "t"             ]
## [ "p_city",       0,      "disk", "h",    "t"             ]
## [ "p_kind",       0,      "disk", "h",    "t"             ]
## [ "mem",          0,      "disk", "h",    "t"             ]
## [ "io",           0,      "disk", "h",    "t"             ]
## [ "cpu",          0,      "disk", "h",    "t"             ]
## >mem.print;
## !ERROR: atom 'monet_Mallinfo' unknown, in BAT 'mem'.!ERROR: BATprintf: BAT expected
#ls();
#---------------------------------------------------------------------------------------------------------#
# tmp_20	tmp_21	tmp_22	tmp_23	heat	dirty		status	kind		refcnt	lrefcnt		  # name
# str	str	str	lng	int	str		str	str	int	int		  # type
#---------------------------------------------------------------------------------------------------------#
#mem.print();
#printf("#~BeginVariableOutput~#\n"); memory().print(); printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#---------------------------------#
# BAT:		  mem		  #
# (str)		  (int)		  #
#---------------------------------#
[ "memincr",	  0		  ]
[ "arena",	  2973696	  ]
[ "ordblks",	  24		  ]
[ "smblks",	  116		  ]
[ "hblkhd",	  266240	  ]
[ "hblks",	  1		  ]
[ "usmblks",	  0		  ]
[ "fsmblks",	  3760		  ]
[ "uordblks",	  2735520	  ]
[ "fordblks",	  238176	  ]
#~EndVariableOutput~#
#quit();

# 17:06:48 >  
# 17:06:48 >  Done.
# 17:06:48 >  

