stdout of test 'no.168` in directory 'tests/BugReports` itself:

#> Mtest:	milS no.168 milS
#> Mtest:	Mtimeout -timeout 210 Mserver -modulesilent -yaccsilent -d8 -db tests_BugReports -single no.168.milS
# Monet Database Server V4.1
# Copyright (c) 1993-1999, CWI & SION. All rights reserved.
# compiled for IRIX646.5/32bit on Fri Jan 14 01:04:33 MET 2000.
#script:no.168.milS


# Monet Database Server V4.3.5
# Copyright (c) 1993-2002, CWI. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit; dynamically linked.
# 
# >Number:         168
# >Category:       Module_url
# >Synopsis:       cast url(str) returns nil
# >Confidential:   no
# >Severity:       serious
# >Priority:       medium
# >Responsible:    mk (Martin Kersten)
# >State:          open
# >Class:          sw-bug
# >Submitter-Id:   unknown
# >Arrival-Date:   Thu Aug 13 22:21:00 1998
# >Originator:     manegold@cwi.nl
# >Organization:
# CWI
# >Release:        980101
# >Environment:
# any
# >Description:
# cast url(str) returns nil.
# this bug occurs only today, i.e. after the recent checkins by Menzo & Peter.
# so, it's no bug in module url, but somewhere else.
# 
function Admin.main():int;	# 0  (main:int)
    mil.line("# \n");	# 1 MILline ($1:void)<-($2:str)
    mil.line("# >Number:         168\n");	# 2 MILline ($3:void)<-($4:str)
    mil.line("# >Category:       Module_url\n");	# 3 MILline ($5:void)<-($6:str)
    mil.line("# >Synopsis:       cast url(str) returns nil\n");	# 4 MILline ($7:void)<-($8:str)
    mil.line("# >Confidential:   no\n");	# 5 MILline ($9:void)<-($10:str)
    mil.line("# >Severity:       serious\n");	# 6 MILline ($11:void)<-($12:str)
    mil.line("# >Priority:       medium\n");	# 7 MILline ($13:void)<-($14:str)
    mil.line("# >Responsible:    mk (Martin Kersten)\n");	# 8 MILline ($15:void)<-($16:str)
    mil.line("# >State:          open\n");	# 9 MILline ($17:void)<-($18:str)
    mil.line("# >Class:          sw-bug\n");	# 10 MILline ($19:void)<-($20:str)
    mil.line("# >Submitter-Id:   unknown\n");	# 11 MILline ($21:void)<-($22:str)
    mil.line("# >Arrival-Date:   Thu Aug 13 22:21:00 1998\n");	# 12 MILline ($23:void)<-($24:str)
    mil.line("# >Originator:     manegold@cwi.nl\n");	# 13 MILline ($25:void)<-($26:str)
    mil.line("# >Organization:\n");	# 14 MILline ($27:void)<-($28:str)
    mil.line("# CWI\n");	# 15 MILline ($29:void)<-($30:str)
    mil.line("# >Release:        980101\n");	# 16 MILline ($31:void)<-($32:str)
    mil.line("# >Environment:\n");	# 17 MILline ($33:void)<-($34:str)
    mil.line("# any\n");	# 18 MILline ($35:void)<-($36:str)
    mil.line("# >Description:\n");	# 19 MILline ($37:void)<-($38:str)
    mil.line("# cast url(str) returns nil.\n");	# 20 MILline ($39:void)<-($40:str)
    mil.line("# this bug occurs only today, i.e. after the recent checkins by Menzo & Peter.\n");	# 21 MILline ($41:void)<-($42:str)
    mil.line("# so, it's no bug in module url, but somewhere else.\n");	# 22 MILline ($43:void)<-($44:str)
    mil.line("# \n");	# 23 MILline ($45:void)<-($46:str)
    mil.line("# ========\n");	# 24 MILline ($47:void)<-($48:str)
    mil.line("# test script\n");	# 25 MILline ($49:void)<-($50:str)
    mil.line("# --------\n");	# 26 MILline ($51:void)<-($52:str)
    mil.line("# module(url);\n");	# 27 MILline ($53:void)<-($54:str)
    mil.line("# u:= url(\"http://www.cwi.nl/~mk/Acoi/index.html\");\n");	# 28 MILline ($55:void)<-($56:str)
    mil.line("# u.print();\n");	# 29 MILline ($57:void)<-($58:str)
    mil.line("# u.getHost.print();\n");	# 30 MILline ($59:void)<-($60:str)
    mil.line("# u.getPort.print();\n");	# 31 MILline ($61:void)<-($62:str)
    mil.line("# u.getDomain.print();\n");	# 32 MILline ($63:void)<-($64:str)
    mil.line("# u.getFile.print();\n");	# 33 MILline ($65:void)<-($66:str)
    mil.line("# u.getAnchor.print();\n");	# 34 MILline ($67:void)<-($68:str)
    mil.line("# u.getBasename.print();\n");	# 35 MILline ($69:void)<-($70:str)
    mil.line("# u.getProtocol.print();\n");	# 36 MILline ($71:void)<-($72:str)
    mil.line("# u.getUser.print();\n");	# 37 MILline ($73:void)<-($74:str)
    mil.line("# u.getDirectory.print();\n");	# 38 MILline ($75:void)<-($76:str)
    mil.line("# quit;\n");	# 39 MILline ($77:void)<-($78:str)
    mil.line("# ========\n");	# 40 MILline ($79:void)<-($48:str)
    mil.line("# \n");	# 41 MILline ($80:void)<-($81:str)
    mil.line("# ========\n");	# 42 MILline ($82:void)<-($83:str)
    mil.line("# output\n");	# 43 MILline ($84:void)<-($85:str)
    mil.line("# --------\n");	# 44 MILline ($86:void)<-($87:str)
    mil.line("# [...]\n");	# 45 MILline ($88:void)<-($89:str)
    mil.line("# module(url);\n");	# 46 MILline ($90:void)<-($91:str)
    mil.line("# u:= url(\"http://www.cwi.nl/~mk/Acoi/index.html\");\n");	# 47 MILline ($92:void)<-($93:str)
    mil.line("# u.print();\n");	# 48 MILline ($94:void)<-($95:str)
    mil.line("# [ nil ]\n");	# 49 MILline ($96:void)<-($97:str)
    mil.line("# u.getHost.print();\n");	# 50 MILline ($98:void)<-($99:str)
    mil.line("# [ nil ]\n");	# 51 MILline ($100:void)<-($97:str)
    mil.line("# u.getPort.print();\n");	# 52 MILline ($101:void)<-($102:str)
    mil.line("# [ nil ]\n");	# 53 MILline ($103:void)<-($97:str)
    mil.line("# u.getDomain.print();\n");	# 54 MILline ($104:void)<-($105:str)
    mil.line("# [ nil ]\n");	# 55 MILline ($106:void)<-($97:str)
    mil.line("# u.getFile.print();\n");	# 56 MILline ($107:void)<-($108:str)
    mil.line("# [ nil ]\n");	# 57 MILline ($109:void)<-($97:str)
    mil.line("# u.getAnchor.print();\n");	# 58 MILline ($110:void)<-($111:str)
    mil.line("# [ nil ]\n");	# 59 MILline ($112:void)<-($97:str)
    mil.line("# u.getBasename.print();\n");	# 60 MILline ($113:void)<-($114:str)
    mil.line("# [ nil ]\n");	# 61 MILline ($115:void)<-($97:str)
    mil.line("# u.getProtocol.print();\n");	# 62 MILline ($116:void)<-($117:str)
    mil.line("# [ nil ]\n");	# 63 MILline ($118:void)<-($97:str)
    mil.line("# u.getUser.print();\n");	# 64 MILline ($119:void)<-($120:str)
    mil.line("# [ nil ]\n");	# 65 MILline ($121:void)<-($97:str)
    mil.line("# u.getDirectory.print();\n");	# 66 MILline ($122:void)<-($123:str)
    mil.line("# ========\n");	# 67 MILline ($124:void)<-($125:str)
    mil.line("setoid(oid(20000000));");	# 68 MILline ($126:void)<-($127:str)
    aa_a := calc.oid(20000000);	# 69 CALCint2oid (aa_a:oid)<-($129:int)
    ba_a := calc.setoid(aa_a);	# 70 CALCsetoidInc (ba_a:oid)<-(aa_a:oid)
    mil.line("var u:= url(\"http://www.cwi.nl/~mk/Acoi/index.html\");");	# 71 MILline ($131:void)<-($132:str)
    u := url.url("http://www.cwi.nl/~mk/Acoi/index.html");	# 72 URLnew (u:url)<-($134:str)
    mil.line("u.print();");	# 73 MILline ($135:void)<-($136:str)
    ca_a := io.print(u);	# 74 IOprint_val (ca_a:int)<-(u:url)
    mil.line("u.getHost().print();");	# 75 MILline ($138:void)<-($139:str)
    da_a := url.getHost(u);	# 76 URLgetHost (da_a:str)<-(u:url)
    ea_a := io.print(da_a);	# 77 IOprint_val (ea_a:int)<-(da_a:str)
    mil.line("u.getPort().print();");	# 78 MILline ($142:void)<-($143:str)
    fa_a := url.getPort(u);	# 79 URLgetPort (fa_a:str)<-(u:url)
    ga_a := io.print(fa_a);	# 80 IOprint_val (ga_a:int)<-(fa_a:str)
    mil.line("u.getDomain().print();");	# 81 MILline ($146:void)<-($147:str)
    ha_a := url.getDomain(u);	# 82 URLgetDomain (ha_a:str)<-(u:url)
    ia_a := io.print(ha_a);	# 83 IOprint_val (ia_a:int)<-(ha_a:str)
    mil.line("u.getFile().print();");	# 84 MILline ($150:void)<-($151:str)
    ja_a := url.getFile(u);	# 85 URLgetFile (ja_a:str)<-(u:url)
    ka_a := io.print(ja_a);	# 86 IOprint_val (ka_a:int)<-(ja_a:str)
    mil.line("u.getAnchor().print();");	# 87 MILline ($154:void)<-($155:str)
    la_a := url.getAnchor(u);	# 88 URLgetAnchor (la_a:str)<-(u:url)
    ma_a := io.print(la_a);	# 89 IOprint_val (ma_a:int)<-(la_a:str)
    mil.line("u.getBasename().print();");	# 90 MILline ($158:void)<-($159:str)
    na_a := url.getBasename(u);	# 91 URLgetBasename (na_a:str)<-(u:url)
    oa_a := io.print(na_a);	# 92 IOprint_val (oa_a:int)<-(na_a:str)
    mil.line("u.getProtocol().print();");	# 93 MILline ($162:void)<-($163:str)
    pa_a := url.getProtocol(u);	# 94 URLgetProtocol (pa_a:str)<-(u:url)
    qa_a := io.print(pa_a);	# 95 IOprint_val (qa_a:int)<-(pa_a:str)
    mil.line("u.getUser().print();");	# 96 MILline ($166:void)<-($167:str)
    ra_a := url.getUser(u);	# 97 URLgetUser (ra_a:str)<-(u:url)
    sa_a := io.print(ra_a);	# 98 IOprint_val (sa_a:int)<-(ra_a:str)
    mil.line("u.getDirectory().print();");	# 99 MILline ($170:void)<-($171:str)
    ta_a := url.getDirectory(u);	# 100 URLgetDirectory (ta_a:bat[:int,:str])<-(u:url)
    ua_a := io.print(ta_a);	# 101 IOprint_val (ua_a:int)<-(ta_a:bat[:int,:str])
    mil.line("quit();");	# 102 MILline ($174:void)<-($175:str)
    va_a := clients.quit();	# 103 CLTquit (va_a:void)
end main;	# 104  
## 
## >Number:         168
## >Category:       Module_url
## >Synopsis:       cast url(str) returns nil
## >Confidential:   no
## >Severity:       serious
## >Priority:       medium
## >Responsible:    mk (Martin Kersten)
## >State:          open
## >Class:          sw-bug
## >Submitter-Id:   unknown
## >Arrival-Date:   Thu Aug 13 22:21:00 1998
## >Originator:     manegold@cwi.nl
## >Organization:
## CWI
## >Release:        980101
## >Environment:
## any
## >Description:
## cast url(str) returns nil.
## this bug occurs only today, i.e. after the recent checkins by Menzo & Peter.
## so, it's no bug in module url, but somewhere else.
## 
## ========
## test script
## --------
## module(url);
## u:= url("http://www.cwi.nl/~mk/Acoi/index.html");
## u.print();
## u.getHost.print();
## u.getPort.print();
## u.getDomain.print();
## u.getFile.print();
## u.getAnchor.print();
## u.getBasename.print();
## u.getProtocol.print();
## u.getUser.print();
## u.getDirectory.print();
## quit;
## ========
## 
## ========
## output
## --------
## [...]
## module(url);
## u:= url("http://www.cwi.nl/~mk/Acoi/index.html");
## u.print();
## [ nil ]
## u.getHost.print();
## [ nil ]
## u.getPort.print();
## [ nil ]
## u.getDomain.print();
## [ nil ]
## u.getFile.print();
## [ nil ]
## u.getAnchor.print();
## [ nil ]
## u.getBasename.print();
## [ nil ]
## u.getProtocol.print();
## [ nil ]
## u.getUser.print();
## [ nil ]
## u.getDirectory.print();
## ========
#setoid(oid(20000000));
#var u:= url("http://www.cwi.nl/~mk/Acoi/index.html");
#u.print();
[ "http://www.cwi.nl/~mk/Acoi/index.html" ]
#u.getHost().print();
[ "www.cwi.nl" ]
#u.getPort().print();
[ nil ]
#u.getDomain().print();
[ "nl" ]
#u.getFile().print();
[ "index.html" ]
#u.getAnchor().print();
[ nil ]
#u.getBasename().print();
[ "index" ]
#u.getProtocol().print();
[ "http" ]
#u.getUser().print();
[ "mk" ]
#u.getDirectory().print();

#

# 14:17:59 >  
# 14:17:59 >  Done.
# 14:17:59 >  

