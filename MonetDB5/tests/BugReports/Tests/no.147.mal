# Monet Mil to Mal compiler
# Copyright (c) 2001-2004, CWI. All rights reserved.

# Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#setoid(oid(2000000));
	aa_a := oid(2000000);
	ba_a := setoid(aa_a);
#printf("#~BeginVariableOutput~#\n");threads();printf("#~EndVariableOutput~#\n");
	ca_a := printf("#~BeginVariableOutput~#\n");
	da_a := threads();
	ea_a := printf("#~EndVariableOutput~#\n");
#printf("#~BeginVariableOutput~#\n");view_gdk_thread().print();printf("#~EndVariableOutput~#\n");
	fa_a := printf("#~BeginVariableOutput~#\n");
	ga_a := view_gdk_thread();
	ha_a := print(ga_a,);
	ia_a := printf("#~EndVariableOutput~#\n");
#threadcnt(1);
	ja_a := threadcnt(1);
#sleep(1);
	ka_a := sleep(1);
#printf("#~BeginVariableOutput~#\n");threads();printf("#~EndVariableOutput~#\n");
	la_a := printf("#~BeginVariableOutput~#\n");
	ma_a := threads();
	na_a := printf("#~EndVariableOutput~#\n");
#printf("#~BeginVariableOutput~#\n");view_gdk_thread().print();printf("#~EndVariableOutput~#\n");
	oa_a := printf("#~BeginVariableOutput~#\n");
	pa_a := view_gdk_thread();
	qa_a := print(pa_a,);
	ra_a := printf("#~EndVariableOutput~#\n");
#threadcnt(1);
	sa_a := threadcnt(1);
#sleep(1);
	ta_a := sleep(1);
#printf("#~BeginVariableOutput~#\n");threads();printf("#~EndVariableOutput~#\n");
	ua_a := printf("#~BeginVariableOutput~#\n");
	va_a := threads();
	wa_a := printf("#~EndVariableOutput~#\n");
#printf("#~BeginVariableOutput~#\n");view_gdk_thread().print();printf("#~EndVariableOutput~#\n");
	xa_a := printf("#~BeginVariableOutput~#\n");
	ya_a := view_gdk_thread();
	ab_a := print(ya_a,);
	bb_a := printf("#~EndVariableOutput~#\n");
#threadcnt(1);
	cb_a := threadcnt(1);
#sleep(1);
	db_a := sleep(1);
#printf("#~BeginVariableOutput~#\n");threads();printf("#~EndVariableOutput~#\n");
	eb_a := printf("#~BeginVariableOutput~#\n");
	fb_a := threads();
	gb_a := printf("#~EndVariableOutput~#\n");
#printf("#~BeginVariableOutput~#\n");view_gdk_thread().print();printf("#~EndVariableOutput~#\n");
	hb_a := printf("#~BeginVariableOutput~#\n");
	ib_a := view_gdk_thread();
	jb_a := print(ib_a,);
	kb_a := printf("#~EndVariableOutput~#\n");
#threadcnt(1);
	lb_a := threadcnt(1);
#sleep(1);
	mb_a := sleep(1);
#printf("#~BeginVariableOutput~#\n");threads();printf("#~EndVariableOutput~#\n");
	nb_a := printf("#~BeginVariableOutput~#\n");
	ob_a := threads();
	pb_a := printf("#~EndVariableOutput~#\n");
#printf("#~BeginVariableOutput~#\n");view_gdk_thread().print();printf("#~EndVariableOutput~#\n");
	qb_a := printf("#~BeginVariableOutput~#\n");
	rb_a := view_gdk_thread();
	sb_a := print(rb_a,);
	tb_a := printf("#~EndVariableOutput~#\n");
#threadcnt(1);
	ub_a := threadcnt(1);
#sleep(1);
	vb_a := sleep(1);
#printf("#~BeginVariableOutput~#\n");threads();printf("#~EndVariableOutput~#\n");
	wb_a := printf("#~BeginVariableOutput~#\n");
	xb_a := threads();
	yb_a := printf("#~EndVariableOutput~#\n");
#printf("#~BeginVariableOutput~#\n");view_gdk_thread().print();printf("#~EndVariableOutput~#\n");
	ac_a := printf("#~BeginVariableOutput~#\n");
	bc_a := view_gdk_thread();
	cc_a := print(bc_a,);
	dc_a := printf("#~EndVariableOutput~#\n");
#threadcnt(1);
	ec_a := threadcnt(1);
#sleep(1);
	fc_a := sleep(1);
#printf("#~BeginVariableOutput~#\n");threads();printf("#~EndVariableOutput~#\n");
	gc_a := printf("#~BeginVariableOutput~#\n");
	hc_a := threads();
	ic_a := printf("#~EndVariableOutput~#\n");
#printf("#~BeginVariableOutput~#\n");view_gdk_thread().print();printf("#~EndVariableOutput~#\n");
	jc_a := printf("#~BeginVariableOutput~#\n");
	kc_a := view_gdk_thread();
	lc_a := print(kc_a,);
	mc_a := printf("#~EndVariableOutput~#\n");
#threadcnt(1);
	nc_a := threadcnt(1);
#sleep(1);
	oc_a := sleep(1);
#printf("#~BeginVariableOutput~#\n");threads();printf("#~EndVariableOutput~#\n");
	pc_a := printf("#~BeginVariableOutput~#\n");
	qc_a := threads();
	rc_a := printf("#~EndVariableOutput~#\n");
#printf("#~BeginVariableOutput~#\n");view_gdk_thread().print();printf("#~EndVariableOutput~#\n");
	sc_a := printf("#~BeginVariableOutput~#\n");
	tc_a := view_gdk_thread();
	uc_a := print(tc_a,);
	vc_a := printf("#~EndVariableOutput~#\n");
#threadcnt(1);
	wc_a := threadcnt(1);
#sleep(1);
	xc_a := sleep(1);
#printf("#~BeginVariableOutput~#\n");threads();printf("#~EndVariableOutput~#\n");
	yc_a := printf("#~BeginVariableOutput~#\n");
	ad_a := threads();
	bd_a := printf("#~EndVariableOutput~#\n");
#printf("#~BeginVariableOutput~#\n");view_gdk_thread().print();printf("#~EndVariableOutput~#\n");
	cd_a := printf("#~BeginVariableOutput~#\n");
	dd_a := view_gdk_thread();
	ed_a := print(dd_a,);
	fd_a := printf("#~EndVariableOutput~#\n");
#threadcnt(-1);
	gd_a := threadcnt(-1);
#sleep(1);
	hd_a := sleep(1);
#printf("#~BeginVariableOutput~#\n");threads();printf("#~EndVariableOutput~#\n");
	id_a := printf("#~BeginVariableOutput~#\n");
	jd_a := threads();
	kd_a := printf("#~EndVariableOutput~#\n");
#printf("#~BeginVariableOutput~#\n");view_gdk_thread().print();printf("#~EndVariableOutput~#\n");
	ld_a := printf("#~BeginVariableOutput~#\n");
	md_a := view_gdk_thread();
	nd_a := print(md_a,);
	od_a := printf("#~EndVariableOutput~#\n");
#threadcnt(-1);
	pd_a := threadcnt(-1);
#sleep(1);
	qd_a := sleep(1);
#printf("#~BeginVariableOutput~#\n");threads();printf("#~EndVariableOutput~#\n");
	rd_a := printf("#~BeginVariableOutput~#\n");
	sd_a := threads();
	td_a := printf("#~EndVariableOutput~#\n");
#printf("#~BeginVariableOutput~#\n");view_gdk_thread().print();printf("#~EndVariableOutput~#\n");
	ud_a := printf("#~BeginVariableOutput~#\n");
	vd_a := view_gdk_thread();
	wd_a := print(vd_a,);
	xd_a := printf("#~EndVariableOutput~#\n");
#threadcnt(-1);
	yd_a := threadcnt(-1);
#sleep(1);
	ae_a := sleep(1);
#printf("#~BeginVariableOutput~#\n");threads();printf("#~EndVariableOutput~#\n");
	be_a := printf("#~BeginVariableOutput~#\n");
	ce_a := threads();
	de_a := printf("#~EndVariableOutput~#\n");
#printf("#~BeginVariableOutput~#\n");view_gdk_thread().print();printf("#~EndVariableOutput~#\n");
	ee_a := printf("#~BeginVariableOutput~#\n");
	fe_a := view_gdk_thread();
	ge_a := print(fe_a,);
	he_a := printf("#~EndVariableOutput~#\n");
#threadcnt(-1);
	ie_a := threadcnt(-1);
#sleep(1);
	je_a := sleep(1);
#printf("#~BeginVariableOutput~#\n");threads();printf("#~EndVariableOutput~#\n");
	ke_a := printf("#~BeginVariableOutput~#\n");
	le_a := threads();
	me_a := printf("#~EndVariableOutput~#\n");
#printf("#~BeginVariableOutput~#\n");view_gdk_thread().print();printf("#~EndVariableOutput~#\n");
	ne_a := printf("#~BeginVariableOutput~#\n");
	oe_a := view_gdk_thread();
	pe_a := print(oe_a,);
	qe_a := printf("#~EndVariableOutput~#\n");
#threadcnt(-1);
	re_a := threadcnt(-1);
#sleep(1);
	se_a := sleep(1);
#printf("#~BeginVariableOutput~#\n");threads();printf("#~EndVariableOutput~#\n");
	te_a := printf("#~BeginVariableOutput~#\n");
	ue_a := threads();
	ve_a := printf("#~EndVariableOutput~#\n");
#printf("#~BeginVariableOutput~#\n");view_gdk_thread().print();printf("#~EndVariableOutput~#\n");
	we_a := printf("#~BeginVariableOutput~#\n");
	xe_a := view_gdk_thread();
	ye_a := print(xe_a,);
	af_a := printf("#~EndVariableOutput~#\n");
#threadcnt(-1);
	bf_a := threadcnt(-1);
#sleep(1);
	cf_a := sleep(1);
#printf("#~BeginVariableOutput~#\n");threads();printf("#~EndVariableOutput~#\n");
	df_a := printf("#~BeginVariableOutput~#\n");
	ef_a := threads();
	ff_a := printf("#~EndVariableOutput~#\n");
#printf("#~BeginVariableOutput~#\n");view_gdk_thread().print();printf("#~EndVariableOutput~#\n");
	gf_a := printf("#~BeginVariableOutput~#\n");
	hf_a := view_gdk_thread();
	if_a := print(hf_a,);
	jf_a := printf("#~EndVariableOutput~#\n");
#threadcnt(-1);
	kf_a := threadcnt(-1);
#sleep(1);
	lf_a := sleep(1);
#printf("#~BeginVariableOutput~#\n");threads();printf("#~EndVariableOutput~#\n");
	mf_a := printf("#~BeginVariableOutput~#\n");
	nf_a := threads();
	of_a := printf("#~EndVariableOutput~#\n");
#printf("#~BeginVariableOutput~#\n");view_gdk_thread().print();printf("#~EndVariableOutput~#\n");
	pf_a := printf("#~BeginVariableOutput~#\n");
	qf_a := view_gdk_thread();
	rf_a := print(qf_a,);
	sf_a := printf("#~EndVariableOutput~#\n");
#threadcnt(-1);
	tf_a := threadcnt(-1);
#sleep(1);
	uf_a := sleep(1);
#printf("#~BeginVariableOutput~#\n");threads();printf("#~EndVariableOutput~#\n");
	vf_a := printf("#~BeginVariableOutput~#\n");
	wf_a := threads();
	xf_a := printf("#~EndVariableOutput~#\n");
#printf("#~BeginVariableOutput~#\n");view_gdk_thread().print();printf("#~EndVariableOutput~#\n");
	yf_a := printf("#~BeginVariableOutput~#\n");
	ag_a := view_gdk_thread();
	bg_a := print(ag_a,);
	cg_a := printf("#~EndVariableOutput~#\n");
#quit();
	dg_a := quit();
