# Monet Mil to Mal compiler
# Copyright (c) 2001-2004, CWI. All rights reserved.

#Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#include "mil_prelude";
	mil.line("# \n");
	mil.line("# >Number:         168");
	mil.line("# >Number:         168\n");
	mil.line("# >Category:       Module_url");
	mil.line("# >Category:       Module_url\n");
	mil.line("# >Synopsis:       cast url(str) returns nil");
	mil.line("# >Synopsis:       cast url(str) returns nil\n");
	mil.line("# >Confidential:   no");
	mil.line("# >Confidential:   no\n");
	mil.line("# >Severity:       serious");
	mil.line("# >Severity:       serious\n");
	mil.line("# >Priority:       medium");
	mil.line("# >Priority:       medium\n");
	mil.line("# >Responsible:    mk (Martin Kersten)");
	mil.line("# >Responsible:    mk (Martin Kersten)\n");
	mil.line("# >State:          open");
	mil.line("# >State:          open\n");
	mil.line("# >Class:          sw-bug");
	mil.line("# >Class:          sw-bug\n");
	mil.line("# >Submitter-Id:   unknown");
	mil.line("# >Submitter-Id:   unknown\n");
	mil.line("# >Arrival-Date:   Thu Aug 13 22:21:00 1998");
	mil.line("# >Arrival-Date:   Thu Aug 13 22:21:00 1998\n");
	mil.line("# >Originator:     manegold@cwi.nl");
	mil.line("# >Originator:     manegold@cwi.nl\n");
	mil.line("# >Organization:");
	mil.line("# >Organization:\n");
	mil.line("# CWI");
	mil.line("# CWI\n");
	mil.line("# >Release:        980101");
	mil.line("# >Release:        980101\n");
	mil.line("# >Environment:");
	mil.line("# >Environment:\n");
	mil.line("# any");
	mil.line("# any\n");
	mil.line("# >Description:");
	mil.line("# >Description:\n");
	mil.line("# cast url(str) returns nil.");
	mil.line("# cast url(str) returns nil.\n");
	mil.line("# this bug occurs only today, i.e. after the recent checkins by Menzo & Peter.");
	mil.line("# this bug occurs only today, i.e. after the recent checkins by Menzo & Peter.\n");
	mil.line("# so, it's no bug in module url, but somewhere else.");
	mil.line("# so, it's no bug in module url, but somewhere else.\n");
	mil.line("# ");
	mil.line("# \n");
	mil.line("# ========");
	mil.line("# ========\n");
	mil.line("# test script");
	mil.line("# test script\n");
	mil.line("# --------");
	mil.line("# --------\n");
	mil.line("# module(url);");
	mil.line("# module(url);\n");
	mil.line("# u:= url(\"http://www.cwi.nl/~mk/Acoi/index.html\");");
	mil.line("# u:= url(\"http://www.cwi.nl/~mk/Acoi/index.html\");\n");
	mil.line("# u.print();");
	mil.line("# u.print();\n");
	mil.line("# u.getHost.print();");
	mil.line("# u.getHost.print();\n");
	mil.line("# u.getPort.print();");
	mil.line("# u.getPort.print();\n");
	mil.line("# u.getDomain.print();");
	mil.line("# u.getDomain.print();\n");
	mil.line("# u.getFile.print();");
	mil.line("# u.getFile.print();\n");
	mil.line("# u.getAnchor.print();");
	mil.line("# u.getAnchor.print();\n");
	mil.line("# u.getBasename.print();");
	mil.line("# u.getBasename.print();\n");
	mil.line("# u.getProtocol.print();");
	mil.line("# u.getProtocol.print();\n");
	mil.line("# u.getUser.print();");
	mil.line("# u.getUser.print();\n");
	mil.line("# u.getDirectory.print();");
	mil.line("# u.getDirectory.print();\n");
	mil.line("# quit;");
	mil.line("# quit;\n");
	mil.line("# ========");
	mil.line("# ========\n");
	mil.line("# ");
	mil.line("# \n");
	mil.line("# ========");
	mil.line("# ========\n");
	mil.line("# output");
	mil.line("# output\n");
	mil.line("# --------");
	mil.line("# --------\n");
	mil.line("# [...]");
	mil.line("# [...]\n");
	mil.line("# module(url);");
	mil.line("# module(url);\n");
	mil.line("# u:= url(\"http://www.cwi.nl/~mk/Acoi/index.html\");");
	mil.line("# u:= url(\"http://www.cwi.nl/~mk/Acoi/index.html\");\n");
	mil.line("# u.print();");
	mil.line("# u.print();\n");
	mil.line("# [ nil ]");
	mil.line("# [ nil ]\n");
	mil.line("# u.getHost.print();");
	mil.line("# u.getHost.print();\n");
	mil.line("# [ nil ]");
	mil.line("# [ nil ]\n");
	mil.line("# u.getPort.print();");
	mil.line("# u.getPort.print();\n");
	mil.line("# [ nil ]");
	mil.line("# [ nil ]\n");
	mil.line("# u.getDomain.print();");
	mil.line("# u.getDomain.print();\n");
	mil.line("# [ nil ]");
	mil.line("# [ nil ]\n");
	mil.line("# u.getFile.print();");
	mil.line("# u.getFile.print();\n");
	mil.line("# [ nil ]");
	mil.line("# [ nil ]\n");
	mil.line("# u.getAnchor.print();");
	mil.line("# u.getAnchor.print();\n");
	mil.line("# [ nil ]");
	mil.line("# [ nil ]\n");
	mil.line("# u.getBasename.print();");
	mil.line("# u.getBasename.print();\n");
	mil.line("# [ nil ]");
	mil.line("# [ nil ]\n");
	mil.line("# u.getProtocol.print();");
	mil.line("# u.getProtocol.print();\n");
	mil.line("# [ nil ]");
	mil.line("# [ nil ]\n");
	mil.line("# u.getUser.print();");
	mil.line("# u.getUser.print();\n");
	mil.line("# [ nil ]");
	mil.line("# [ nil ]\n");
	mil.line("# u.getDirectory.print();");
	mil.line("# u.getDirectory.print();\n");
	mil.line("# ========");
	mil.line("# ========\n");
	mil.line("");
	mil.line("setoid(oid(20000000));");
	aa_a := oid(20000000);
	ba_a := setoid(aa_a);
	mil.line("var u:= url(\"http://www.cwi.nl/~mk/Acoi/index.html\");");
	u := url("http://www.cwi.nl/~mk/Acoi/index.html");
	mil.line("u.print();");
	ca_a := print(u);
	mil.line("u.getHost().print();");
	da_a := getHost(u);
	ea_a := print(da_a);
	mil.line("u.getPort().print();");
	fa_a := getPort(u);
	ga_a := print(fa_a);
	mil.line("u.getDomain().print();");
	ha_a := getDomain(u);
	ia_a := print(ha_a);
	mil.line("u.getFile().print();");
	ja_a := getFile(u);
	ka_a := print(ja_a);
	mil.line("u.getAnchor().print();");
	la_a := getAnchor(u);
	ma_a := print(la_a);
	mil.line("u.getBasename().print();");
	na_a := getBasename(u);
	oa_a := print(na_a);
	mil.line("u.getProtocol().print();");
	pa_a := getProtocol(u);
	qa_a := print(pa_a);
	mil.line("u.getUser().print();");
	ra_a := getUser(u);
	sa_a := print(ra_a);
	mil.line("u.getDirectory().print();");
	ta_a := getDirectory(u);
	ua_a := print(ta_a);
	mil.line("quit();");
	va_a := quit();
