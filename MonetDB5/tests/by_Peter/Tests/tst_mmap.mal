# Monet Mil to Mal compiler
# Copyright (c) 2001-2004, CWI. All rights reserved.

# Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#vm_minsize(lng(128*1024)); 
	aa_a := *(128,1024);
	ba_a := lng(aa_a);
	ca_a := vm_minsize(ba_a);
#var i := 0;
	i := 0;
#var b := 20000;
	b := 20000;
#var d := new(void,int,b).seqbase(0@0);
	da_a := new(:void,:int,b);
	d := bat.setSequenceBase(da_a,0@0);
#var m := debugmask();
	m := debugmask();
#debugmask(2);
	ea_a := debugmask(2);
#while(i < b) d.insert(nil,i :+= 1);
barrier	fa_a := true;
barrier	ga_a := <(i,b);
!ERROR: "debugmask(m);"
!        ^
! syntax error, unexpected TOK_IDENT, expecting '{'.
#Identifer 'seqbase' mapped to 'bat.setSequenceBase'
