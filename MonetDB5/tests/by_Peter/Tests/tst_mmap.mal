# Monet Mil to Mal compiler
# Copyright (c) 2001-2004, CWI. All rights reserved.

#Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#use the "mil_schema" for additional support routines
	mil.line("# reduce mem_bigsize to trigger memory mapping\n");
	mil.line("#\n");
	aa_a := *(128,1024);
	ba_a := lng(aa_a);
	ca_a := vm_minsize(ba_a);
	mil.line("# test memory map of string heap under append\n");
	i := 0;
	mil.line("var b := 20000;");
	b := 20000;
	mil.line("#BIG := new(void,int,50000000); # claim 200MB\n");
	da_a := new(nil:void,nil:int,b);
	d := bat.setSequenceBase(da_a,0@0);
	mil.line("# temporarily disable propmask in order to make this bearable\n");
	m := setDebug();
	mil.line("debugmask(2);");
	ea_a := setDebug(2);
	mil.line("while(i < b) d.insert(nil,i :+= 1);");
barrier	fa_a := true;
barrier	ga_a := <(i,b);
!ERROR: "while(i < b) d.insert(nil,i :+= 1);"
!                       ^
! syntax error, unexpected TOK_IDENT, expecting '{'.
#Identifer 'seqbase' mapped to 'bat.setSequenceBase'
#Identifer 'debugmask' mapped to 'setDebug'
