stdout of test 'GNATS-2476` in directory 'tests/by_Peter` itself:

#> Mtest (19:22:36):	milM GNATS-2476 milM
#> Mtest (19:22:36):	Mtimeout -timeout 210 Mserver -modulesilent -yaccsilent -d8 -db tests_by_Peter GNATS-2476.milM
# Monet Database Server V4.2
# Copyright (c) 1993-1999, CWI & SION. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit.
#script:GNATS-2476.milM


# Monet Database Server V4.3.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for x86_64-redhat-linux-gnu/64bit; dynamically linked.
# config:/home/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/home/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_tests_by_Peter
# Visit http://monetdb.cwi.nl for further information.
## Monet Mil to Mal compiler
## Copyright (c) 2001-2004, CWI. All rights reserved.
#
## Predefined code segment
##The compiler can not guarantee an accurate compilation,
##because MIL unlike MAL is a dynamically typed language.
##A few guidelines to maximize usefullness.
##- make the type of variables explicit, in particular 'nil'
##- upon advice of M2m to remap identifiers, change it in your program directly
##var b := bat(int,int);
#	b := new(:int,:int);
##b.insert(1,1);
#	aa_a := insert(b,1,1);
##b.insert(9,2); # in same hash list (default hash-mask=7, 1&7=9&7=1)
#	ba_a := insert(b,9,2);
##b.accbuild("hash");
#	ca_a := accbuild(b,"hash");
##b.commit();
#	da_a := commit(b,);
##b.delete(9); # triggers move (1,1) over (9,2); hash corrupt
#	ea_a := delete(b,9);
##b.delete(); # delete (1,1) without hash-lookup
#	fa_a := delete(b,);
##b.find(1).print(); # still finds (1,1) !
#	ga_a := find(b,1);
#	ha_a := print(ga_a,);
##quit(); 
#	ia_a := quit();
#
function Admin.main():int;	# 0  (main:int)
    b := bbp.new(:int,:int);	# 1 CMDBATnew (b:bat[:int,:int])<-($2:int)($3:int)
    aa_a := bat.insert(b,1,1);	# 2 BKCinsert_bun (aa_a:void)<-(b:bat[:int,:int])($5:int)($5:int)
    ba_a := bat.insert(b,9,2);	# 3 BKCinsert_bun (ba_a:void)<-(b:bat[:int,:int])($7:int)($8:int)
    ca_a := bat.accbuild(b,"hash");	# 4 BKCaccbuild_std (ca_a:bit)<-(b:bat[:int,:int])($10:str)
    da_a := transaction.commit(b);	# 5 TRNtrans_commit (da_a:void)<-(b:bat[:int,:int])
    ea_a := bat.delete(b,9);	# 6 BKCdelete_head (ea_a:void)<-(b:bat[:int,:int])($7:int)
    fa_a := bat.delete(b);	# 7 BKCdelete_all (fa_a:void)<-(b:bat[:int,:int])
    ga_a := algebra.find(b,1);	# 8 ALGfind (ga_a:int)<-(b:bat[:int,:int])($5:int)
    ha_a := io.print(ga_a);	# 9 IOprint_val (ha_a:int)<-(ga_a:int)
    ia_a := clients.quit();	# 10 CLTquit (ia_a:void)
end main;	# 11  

>
# 14:56:51 >  
# 14:56:51 >  Done.
# 14:56:51 >  

