# Monet Mil to Mal compiler
# Copyright (c) 2001-2004, CWI. All rights reserved.

# Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#new(void,str,1000000).persists(true).access(BAT_WRITE).rename("a");
	aa_a := new(:void,:str,1000000);
	BAT_WRITE:= mil.take("BAT_WRITE");
	ba_a := persists(aa_a,true);
	ca_a := access(ba_a,BAT_WRITE);
	da_a := bat.setName(ca_a,"a");
#var d := new(void,int,1000);
	d := new(:void,:int,1000);
#var i := 0;
	i := 0;
#while(i < 1000) d.insert(nil,i :+= 1);
barrier	ea_a := true;
barrier	fa_a := <(i,1000);
!ERROR: "d := [str](d).seqbase(0@0);"
!        ^
! syntax error, unexpected TOK_IDENT, expecting '{'.
#Identifer 'rename' mapped to 'bat.setName'
