# Monet Mil to Mal compiler
# Copyright (c) 2001-2004, CWI. All rights reserved.

# Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#setoid(oid(20000000));
	aa_a := oid(20000000);
	ba_a := setoid(aa_a);
#var t:= new(int, int);
	t := new(:int,:int);
#t.insert(1,2);
	ca_a := insert(t,1,2);
#t.insert(3,6);
	da_a := insert(t,3,6);
#t.insert(13,14);
	ea_a := insert(t,13,14);
#t.insert(17,16);
	fa_a := insert(t,17,16);
#t.insert(19,18);
	ga_a := insert(t,19,18);
#t.insert(5,8);
	ha_a := insert(t,5,8);
#t.insert(7,10);
	ia_a := insert(t,7,10);
#t.insert(2,4);
	ja_a := insert(t,2,4);
#t.insert(11,12);
	ka_a := insert(t,11,12);
#print(t.ordered());
	la_a := bat.isSorted(t,);
	ma_a := print(la_a);
#print(t.reverse().ordered());
	na_a := reverse(t,);
	oa_a := bat.isSorted(na_a,);
	pa_a := print(oa_a);
#var t2:= t.copy();
	t2 := copy(t,);
#t2.access(BAT_WRITE);
	BAT_WRITE:= mil.take("BAT_WRITE");
	qa_a := access(t2,BAT_WRITE);
#t2.order();
	ra_a := order(t2,);
#print(t2.ordered());
	sa_a := bat.isSorted(t2,);
	ta_a := print(sa_a);
#t2.print();
	ua_a := print(t2,);
#print(t2.aligned(t));
	va_a := aligned(t2,t);
	wa_a := print(va_a);
#print(t2.synced(t));
	xa_a := isSynced(t2,t);
	ya_a := print(xa_a);
#t.print();
	ab_a := print(t,);
#print(t2.aligned(t));
	bb_a := aligned(t2,t);
	cb_a := print(bb_a);
#print(t2.synced(t));
	db_a := isSynced(t2,t);
	eb_a := print(db_a);
#quit();
	fb_a := quit();
#Identifer 'synced' mapped to 'isSynced'
#Identifer 'ordered' mapped to 'bat.isSorted'
