# Monet Mil to Mal compiler
# Copyright (c) 2001-2004, CWI. All rights reserved.

#Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#use the "mil_schema" for additional support routines
	mil.line("# reduced size to limit runtime\n");
	N := 10000;
	mil.line("#1000000;\n");
	Li := 100;
	mil.line("#1000;\n");
	Lj := 1000;
	mil.line("#1000;\n");
	mil.line("");
	aa_a := reverse(bbp.getNames);
	ba_a := exist(aa_a,"a");
barrier	ca_a := not(ba_a);
	mil.line("if (not(view_bbp_name.reverse().exist(\"a\"))) {");
	da_a := commit();
	mil.line("\tcommit();");
	ea_a := new(nil:void,nil:dbl,N);
	a := bat.setName(ea_a,"a");
	mil.line("\tvar a := bat(void,dbl,N).rename(\"a\");");
	i := 0;
	mil.line("\tvar i := 0;");
barrier	fa_a := true;
barrier	ga_a := <(i,N);
!ERROR: "	var i := 0;"
!        																													^
! syntax error, unexpected TOK_IDENT, expecting '{'.
#Identifer 'rename' mapped to 'bat.setName'
#Identifer 'view_bbp_name' mapped to 'bbp.getNames'
