# Monet Mil to Mal compiler
# Copyright (c) 2001-2004, CWI. All rights reserved.

# Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#
	aa_a := new(:void,:str);
	v1 := bat.setSequenceBase(aa_a,0@0);
#
	nil:= mil.take("nil");
	ba_a := insert(v1,nil,"");
#v1.insert(nil,"");
	ca_a := insert(v1,nil,"b");
#v1.insert(nil,"b");
	da_a := insert(v1,nil,"");
#v1.insert(nil,"");
	ea_a := insert(v1,nil,"c");
#v1.insert(nil,"c");
	fa_a := insert(v1,nil,"");
#v1.insert(nil,"");
	ga_a := insert(v1,nil,"a");
#v1.insert(nil,"a");
	ha_a := insert(v1,nil,"");
#v1.insert(nil,"");
	ia_a := print(v1,);
#
	ja_a := reverse(v1,);
	ka_a := kunique(ja_a,);
	v2 := reverse(ka_a,);
#var v2 := v1.reverse().kunique().reverse();
	la_a := reverse(v2,);
	ma_a := sort(la_a,);
	v3 := reverse(ma_a,);
#var v3 := v2.reverse().sort().reverse();
	na_a := print(v3,);
#
	v4 := new(:void,:str);
#
	oa_a := insert(v4,nil,"");
#v4.insert(nil,"");
	pa_a := insert(v4,nil,"b");
#v4.insert(nil,"b");
	qa_a := insert(v4,nil,"");
#v4.insert(nil,"");
	ra_a := insert(v4,nil,"c");
#v4.insert(nil,"c");
	sa_a := insert(v4,nil,"");
#v4.insert(nil,"");
	ta_a := insert(v4,nil,"a");
#v4.insert(nil,"a");
	ua_a := insert(v4,nil,"");
#v4.insert(nil,"");
	va_a := print(v4,);
#
	wa_a := reverse(v4,);
	xa_a := kunique(wa_a,);
	v5 := reverse(xa_a,);
#var v5 := v4.reverse().kunique().reverse();
	ya_a := reverse(v5,);
	ab_a := sort(ya_a,);
	v6 := reverse(ab_a,);
#var v6 := v5.reverse().sort().reverse();
	bb_a := print(v6,);
#
	cb_a := reverse(v4,);
	db_a := mark(cb_a,0@0);
	v7 := reverse(db_a,);
#var v7 := v4.reverse().mark(0@0).reverse();
	eb_a := print(v7,);
#
	fb_a := reverse(v7,);
	gb_a := kunique(fb_a,);
	v8 := reverse(gb_a,);
#var v8 := v7.reverse().kunique().reverse();
	hb_a := reverse(v8,);
	ib_a := sort(hb_a,);
	v9 := reverse(ib_a,);
#var v9 := v8.reverse().sort().reverse();
	jb_a := print(v9,);
#
	kb_a := quit();
#Identifer 'seqbase' mapped to 'bat.setSequenceBase'
