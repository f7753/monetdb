# Monet Mil to Mal compiler
include mil_scenario;
# Copyright (c) 2001-2004, CWI. All rights reserved.

#Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#use the "mil_schema" for additional support routines
	t := new(nil:oid,nil:str);
	aa_a := oid(0);
	ba_a := insert(t,aa_a,"a");
	ca_a := oid(1);
	da_a := insert(t,ca_a,"b");
	ea_a := oid(2);
	fa_a := insert(t,ea_a,"c");
	ga_a := oid(3);
	ha_a := insert(t,ga_a,"d");
	ia_a := oid(4);
	ja_a := insert(t,ia_a,"e");
	ka_a := oid(5);
	la_a := insert(t,ka_a,"f");
	ma_a := oid(6);
	na_a := insert(t,ma_a,"g");
	oa_a := oid(7);
	pa_a := insert(t,oa_a,"h");
	qa_a := markT(t,nil);
	ra_a := print(t);
	t2 := new(nil:void,nil:str);
	sa_a := oid(0);
	ta_a := bat.setSequenceBase(t2,sa_a);
	ua_a := oid(0);
	va_a := insert(t2,ua_a,"a");
	wa_a := oid(1);
	xa_a := insert(t2,wa_a,"b");
	ya_a := oid(2);
	ab_a := insert(t2,ya_a,"c");
	bb_a := oid(3);
	cb_a := insert(t2,bb_a,"d");
	db_a := oid(4);
	eb_a := insert(t2,db_a,"e");
	fb_a := oid(5);
	gb_a := insert(t2,fb_a,"f");
	hb_a := oid(6);
	ib_a := insert(t2,hb_a,"g");
	jb_a := oid(7);
	kb_a := insert(t2,jb_a,"h");
	lb_a := markT(t2,nil);
	mb_a := print(lb_a);
#Identifer 'seqbase' mapped to 'bat.setSequenceBase'
