# Monet Mil to Mal compiler
# Copyright (c) 2001-2004, CWI. All rights reserved.

#Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#use the "mil_schema" for additional support routines
	mil.line("# Date:\t\t2002-09-07 02:24\n");
	mil.line("# Priority:\t5\n");
	mil.line("# Submitted By:\tArjen P. de Vries (apdv)\n");
	mil.line("# Assigned To:\tNiels Nes (nielsnes)\n");
	mil.line("# Category:\tNone\n");
	mil.line("# Status:\tClosed\n");
	mil.line("# Summary:\n");
	mil.line("# marking a void-T table nil\n");
	mil.line("#\n");
	mil.line("# marking a void-T table nil gives incorrect results. \n");
	mil.line("#\n");
	mil.line("# (detected in MonetDB_TRECvid branch)\n");
	mil.line("# BUG: void behaves differently from oid under mark\n");
	mil.line("");
	t := new(nil:oid,nil:str);
	mil.line("var t  := new(oid,str);");
	aa_a := oid(0);
	ba_a := insert(t,aa_a,"a");
	mil.line("t.insert( oid(0), \"a\" );");
	ca_a := oid(1);
	da_a := insert(t,ca_a,"b");
	mil.line("t.insert( oid(1), \"b\" );");
	ea_a := oid(2);
	fa_a := insert(t,ea_a,"c");
	mil.line("t.insert( oid(2), \"c\" );");
	ga_a := oid(3);
	ha_a := insert(t,ga_a,"d");
	mil.line("t.insert( oid(3), \"d\" );");
	ia_a := oid(4);
	ja_a := insert(t,ia_a,"e");
	mil.line("t.insert( oid(4), \"e\" );");
	ka_a := oid(5);
	la_a := insert(t,ka_a,"f");
	mil.line("t.insert( oid(5), \"f\" );");
	ma_a := oid(6);
	na_a := insert(t,ma_a,"g");
	mil.line("t.insert( oid(6), \"g\" );");
	oa_a := oid(7);
	pa_a := insert(t,oa_a,"h");
	mil.line("t.insert( oid(7), \"h\" );");
	qa_a := mark(t,nil);
	ra_a := print(qa_a);
	mil.line("");
	sa_a := oid(0);
	ta_a := new(nil:void,nil:str);
	t := bat.setSequenceBase(ta_a,sa_a);
	mil.line("t  := new(void,str).seqbase(oid(0));");
	ua_a := oid(0);
	va_a := insert(t,ua_a,"a");
	mil.line("t.insert( oid(0), \"a\" );");
	wa_a := oid(1);
	xa_a := insert(t,wa_a,"b");
	mil.line("t.insert( oid(1), \"b\" );");
	ya_a := oid(2);
	ab_a := insert(t,ya_a,"c");
	mil.line("t.insert( oid(2), \"c\" );");
	bb_a := oid(3);
	cb_a := insert(t,bb_a,"d");
	mil.line("t.insert( oid(3), \"d\" );");
	db_a := oid(4);
	eb_a := insert(t,db_a,"e");
	mil.line("t.insert( oid(4), \"e\" );");
	fb_a := oid(5);
	gb_a := insert(t,fb_a,"f");
	mil.line("t.insert( oid(5), \"f\" );");
	hb_a := oid(6);
	ib_a := insert(t,hb_a,"g");
	mil.line("t.insert( oid(6), \"g\" );");
	jb_a := oid(7);
	kb_a := insert(t,jb_a,"h");
	mil.line("t.insert( oid(7), \"h\" );");
	lb_a := mark(t,nil);
	mb_a := print(lb_a);
#Identifer 'seqbase' mapped to 'bat.setSequenceBase'
