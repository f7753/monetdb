# Monet Mil to Mal compiler
# Copyright (c) 2001-2004, CWI. All rights reserved.

# Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#
	aa_a := oid(0);
	ba_a := new(:void,:oid);
	ca_a := oid(0);
	da_a := oid(10);
	ea_a := bat.setSequenceBase(ba_a,aa_a);
	t1 := insert(ea_a,ca_a,da_a);
#var t1 := new(void,oid).seqbase(oid(0)).insert(oid(0),oid(10));
	fa_a := oid(0);
	ga_a := new(:void,:int);
	ha_a := oid(0);
	ia_a := bat.setSequenceBase(ga_a,fa_a);
	t2 := insert(ia_a,ha_a,1);
#
	ja_a := printf("LHS:\n");
#printf("LHS:\n");
	ka_a := reverse(t1,);
	la_a := mirror(ka_a,);
	ma_a := print(la_a,);
#t1.reverse().mirror().print();
	na_a := printf("RHS:\n");
#printf("RHS:\n");
	oa_a := print(t2,);
#t2.print();
	pa_a := printf("Result (should be empty):\n");
#printf("Result (should be empty):\n");
	qa_a := reverse(t1,);
	ra_a := mirror(qa_a,);
	sa_a := join(ra_a,t2);
	ta_a := print(sa_a,);
#Identifer 'seqbase' mapped to 'bat.setSequenceBase'
