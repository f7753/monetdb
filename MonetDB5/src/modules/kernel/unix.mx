@f unix
@t Unix standard library calls
@a Tim Ruhl, Martin Kersten
@v 0.1
@* Unix stdlib
The unix module is currently of rather limited size.
It should include only those facilities that are UNIX
specific, i.e. not portable to other platforms.
Similar modules may be defined for Windows platforms.
@-

@mal
module unix;

command getenv(nme:str) : str = UNIXgetenv
comment "Get the environment variable string.";

command setenv(nme:str,val:str) : bit = UNIXsetenv
comment "Set the environment variable string.";

command system(nme:str) : int = UNIXsystem
comment "Execute a command and give back the return value";

command getpid():int = UNIXgetpid
comment "Return process identifier of the thread.";
@-
The implementation is relatively straight forward.
@c
#include "mal.h"

str UNIXgetenv(str *res, str *varname)
{
	char *p = getenv(*varname);
	if (p) {
		*res = GDKstrdup(p);
	} else {
		*res = GDKstrdup("");
	}
	return MAL_SUCCEED;
}

str UNIXsetenv(bit *res, str *varname, str *valname)
{
	*res = setenv(*varname, *valname, TRUE);
	return MAL_SUCCEED;
}

str UNIXgetpid(int *res)
{
	*res = getpid();
	return MAL_SUCCEED;
}
str UNIXsystem(int *res, str *command)
{
	*res = system(*command);
	return MAL_SUCCEED;
}
