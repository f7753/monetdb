@' The contents of this file are subject to the MonetDB Public
@' License Version 1.0 (the "License"); you may not use this file
@' except in compliance with the License. You may obtain a copy of
@' the License at
@' http://monetdb.cwi.nl/Legal/MonetDBLicense-1.0.html
@' 
@' Software distributed under the License is distributed on an "AS
@' IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
@' implied. See the License for the specific language governing
@' rights and limitations under the License.
@' 
@' The Original Code is the Monet Database System.
@' 
@' The Initial Developer of the Original Code is CWI.
@' Portions created by CWI are Copyright (C) 1997-2004 CWI.
@' All Rights Reserved.
@' 
@' Contributor(s):
@' 		Martin Kersten <Martin.Kersten@cwi.nl>
@' 		Peter Boncz <Peter.Boncz@cwi.nl>
@' 		Niels Nes <Niels.Nes@cwi.nl>
@' 		Stefan Manegold  <Stefan.Manegold@cwi.nl>

@f unix
@t Unix standard library calls
@a Tim Ruhl, Martin Kersten, A.R. van Ballegooij
@v 0.2
@* Unix stdlib
The unix module is currently of rather limited size.
It should include only those facilities that are UNIX
specific, i.e. not portable to other platforms.
Similar modules may be defined for Windows platforms.
@-

@mal
module unix;

command getenv(nme:str) : str = UNIXgetenv
comment "Get the environment variable string.";

command setenv(nme:str,val:str,overwrite:int) : bit = UNIXsetenv
comment "Set the environment variable string.";

@-
The implementation is relatively straight forward.
@c
#include "mal.h"

str UNIXgetenv(str *res, str *varname)
{
	char *p = getenv(*varname);
	if (p) *res = GDKstrdup(p);
	else   *res = GDKstrdup("");
	return MAL_SUCCEED;
}

str UNIXsetenv(bit *res, str *name, str *value, int *overwrite)
{
	*res =0;
	if (overwrite || getenv(*name) == NULL) {
		char *p = (char*) GDKmalloc(2+strlen(*name)+strlen(*value));
		strcpy(p, *name);
		strcat(p, "=");
		strcat(p, *value);
		*res = putenv(p);
	}
	return MAL_SUCCEED;
}
