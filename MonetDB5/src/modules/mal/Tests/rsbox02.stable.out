stdout of test 'rsbox02` in directory 'src/modules/mal` itself:


# 12:00:24 >  
# 12:00:24 >  Mtimeout -timeout 60 Mserver "--config=/ufs/fabian/scratch/monet5/program/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/net/pictor.ins.cwi.nl/export/scratch1/fabian/monet5/program/lib/MonetDB5" --set "gdk_dbfarm=/net/pictor.ins.cwi.nl/export/scratch1/fabian/monet5/program/var/MonetDB5/dbfarm" --set "sql_logdir=/net/pictor.ins.cwi.nl/export/scratch1/fabian/monet5/program/var/MonetDB5/log" --set mapi_port=40341 --set sql_port=52747 --set monet_prompt= --trace --dbname=mTests_src_modules_mal  rsbox02.mal </dev/null
# 12:00:24 >  



















# Monet Database Server V4.99.19
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/fabian/scratch/monet5/program/etc/MonetDB5.conf
# dbfarm:/net/pictor.ins.cwi.nl/export/scratch1/fabian/monet5/program/var/MonetDB5/dbfarm
# dbname:mTests_src_modules_mal
# Visit http://monetdb.cwi.nl/ for further information.
#include rsbox;
#
#rs := rsbox.create("reuse", 1, 3);
#
#resultset.setProperty(rs, 1, "name", "the_column");
#resultset.setProperty(rs, 1, "table", "table1");
#resultset.setProperty(rs, 1, "schema", "sys");
#
#b1 := bbp.new(:void, :int);
#bat.insert(b1, nil, 1);
#bat.insert(b1, nil, 2);
#bat.insert(b1, nil, nil:int);
#bat.insert(b1, nil, 4);
#bat.insert(b1, nil, 6);
#
#resultset.dePopulate(rs);
#resultset.populateColumn(rs, 1, b1);
#
#resultset.writeNextPart(rs);
#
#b2 := bbp.new(:void, :str);
#bat.insert(b2, nil, "Daft Punk - Human After All");
#bat.insert(b2, nil, "Spinvis - Spinvis");
#bat.insert(b2, nil, "Within Temptation - The Silent Force");
#bat.insert(b2, nil, "Anouk - Together Alone");
#bat.insert(b2, nil, "Armiral Freebee - Admiral Freebee");
#bat.insert(b2, nil, "Lais - Douce Victime");
#bat.insert(b2, nil, "Hooverphonic - Sit Down and Listen To...");
#bat.insert(b2, nil, "Osdorp Posse - Tegenstrijd");
#bat.insert(b2, nil, "MC Wigger & DJ Wanna-B - Fuck Osdorp");
#
#resultset.dePopulate(rs);
#resultset.populateColumn(rs, 1, b2);
#
#resultset.writeNextPart(rs);
#
#rsbox.release(rs);
#
!ERROR: 'rsbox.create' undefined in user.main[1]
function user.main():int;	# 0  (main:int)
    rs := rsbox.create(1,'t');	# 1  unknown (rs:resultset)<-($2:int)($3:chr)
    resultset.setProperty(rs,1,"name","the_column");	# 2 RSsetPropertyStr ($4:resultset)<-(rs:resultset)($2:int)($5:str)($6:str)
    resultset.setProperty(rs,1,"table","table1");	# 3 RSsetPropertyStr ($7:resultset)<-(rs:resultset)($2:int)($8:str)($9:str)
    resultset.setProperty(rs,1,"schema","sys");	# 4 RSsetPropertyStr ($10:resultset)<-(rs:resultset)($2:int)($11:str)($12:str)
    b1 := bbp.new(:void,:int);	# 5 CMDBATnew (b1:bat[:void,:int])<-($14:void)($15:int)
    bat.insert(b1,nil,1);	# 6 BKCinsert_bun ($16:bat[:void,:int])<-(b1:bat[:void,:int])($17:void)($2:int)
    bat.insert(b1,nil,2);	# 7 BKCinsert_bun ($18:bat[:void,:int])<-(b1:bat[:void,:int])($17:void)($19:int)
    bat.insert(b1,nil,nil:int);	# 8 BKCinsert_bun ($20:bat[:void,:int])<-(b1:bat[:void,:int])($17:void)($21:int)
    bat.insert(b1,nil,4);	# 9 BKCinsert_bun ($22:bat[:void,:int])<-(b1:bat[:void,:int])($17:void)($23:int)
    bat.insert(b1,nil,6);	# 10 BKCinsert_bun ($24:bat[:void,:int])<-(b1:bat[:void,:int])($17:void)($25:int)
    resultset.populateColumn(rs,1,b1);	# 11 RSpopulateColumn ($26:resultset)<-(rs:resultset)($2:int)(b1:bat[:void,:int])
    resultset.writeNextPart(rs);	# 12 RSwriteNextPart ($27:int)<-(rs:resultset)
    b2 := bbp.new(:void,:str);	# 13 CMDBATnew (b2:bat[:void,:str])<-($29:void)($30:str)
    bat.insert(b2,nil,"Daft Punk - Human After All");	# 14 BKCinsert_bun ($31:bat[:void,:str])<-(b2:bat[:void,:str])($17:void)($32:str)
    bat.insert(b2,nil,"Spinvis - Spinvis");	# 15 BKCinsert_bun ($33:bat[:void,:str])<-(b2:bat[:void,:str])($17:void)($34:str)
    bat.insert(b2,nil,"Within Temptation - The Silent Force");	# 16 BKCinsert_bun ($35:bat[:void,:str])<-(b2:bat[:void,:str])($17:void)($36:str)
    bat.insert(b2,nil,"Anouk - Together Alone");	# 17 BKCinsert_bun ($37:bat[:void,:str])<-(b2:bat[:void,:str])($17:void)($38:str)
    bat.insert(b2,nil,"Armiral Freebee - Admiral Freebee");	# 18 BKCinsert_bun ($39:bat[:void,:str])<-(b2:bat[:void,:str])($17:void)($40:str)
    bat.insert(b2,nil,"Lais - Douce Victime");	# 19 BKCinsert_bun ($41:bat[:void,:str])<-(b2:bat[:void,:str])($17:void)($42:str)
    bat.insert(b2,nil,"Hooverphonic - Sit Down and Listen To...");	# 20 BKCinsert_bun ($43:bat[:void,:str])<-(b2:bat[:void,:str])($17:void)($44:str)
    bat.insert(b2,nil,"Osdorp Posse - Tegenstrijd");	# 21 BKCinsert_bun ($45:bat[:void,:str])<-(b2:bat[:void,:str])($17:void)($46:str)
    bat.insert(b2,nil,"MC Wigger & DJ Wanna-B - Fuck Osdorp");	# 22 BKCinsert_bun ($47:bat[:void,:str])<-(b2:bat[:void,:str])($17:void)($48:str)
    resultset.dePopulate(rs);	# 23 RSdePopulate ($49:resultset)<-(rs:resultset)
    resultset.populateColumn(rs,1,b2);	# 24 RSpopulateColumn ($50:resultset)<-(rs:resultset)($51:int)(b2:bat[:void,:str])
    resultset.writeNextPart(rs);	# 25 RSwriteNextPart ($52:int)<-(rs:resultset)
    rsbox.release(rs);	# 26 RSBdelete ($53:void)<-(rs:resultset)
end main;	# 27  

# 13:30:05 >  
# 13:30:05 >  Done.
# 13:30:05 >  

