stdout of test 'rsbox04` in directory 'src/modules/mal` itself:


# 21:29:28 >  
# 21:29:28 >  Mtimeout -timeout 60 Mserver "--config=/ufs/fabian/scratch/monet5/program/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/fabian/scratch/monet5/program/lib/MonetDB5" --set "gdk_dbfarm=/ufs/fabian/scratch/monet5/program/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/fabian/scratch/monet5/program/var/MonetDB5/log" --set mapi_port=42633 --set sql_port=53903 --set monet_prompt= --trace --dbname=mTests_src_modules_mal  rsbox04.mal </dev/null
# 21:29:28 >  







# Monet Database Server V4.99.19
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/fabian/scratch/monet5/program/etc/MonetDB5.conf
# dbfarm:/ufs/fabian/scratch/monet5/program/var/MonetDB5/dbfarm
# dbname:mTests_src_modules_mal
# Visit http://monetdb.cwi.nl/ for further information.
### Test generic ResultSet behaviour with all available types of BATs as
### columns
#
#include rsbox;
#
#rs := rsbox.create("multicolumn", 9, 1);
#
#b1 := bbp.new(:void, :bit);
#bat.insert(b1, nil, 1:bit);
#bat.insert(b1, nil, 0:bit);
#bat.insert(b1, nil, 0:bit);
#bat.insert(b1, nil, 0:bit);
#bat.insert(b1, nil, nil:bit);
#bat.insert(b1, nil, 1:bit);
#bat.insert(b1, nil, 0:bit);
#bat.insert(b1, nil, 1:bit);
#bat.insert(b1, nil, nil:bit);
#bat.insert(b1, nil, 1:bit);
#
#b2 := bbp.new(:void, :chr);
#bat.insert(b2, nil, nil:chr);
#bat.insert(b2, nil, 'a');
#bat.insert(b2, nil, 'x');
#bat.insert(b2, nil, nil:chr);
#bat.insert(b2, nil, 'a');
#bat.insert(b2, nil, 'f');
#bat.insert(b2, nil, 'r');
#bat.insert(b2, nil, 'd');
#bat.insert(b2, nil, ';');
#bat.insert(b2, nil, ' ');
#
#b3 := bbp.new(:void, :str);
#bat.insert(b3, nil, "Daft Punk - Human After All");
#bat.insert(b3, nil, "Spinvis - Spinvis");
#bat.insert(b3, nil, "Within Temptation - The Silent Force");
#bat.insert(b3, nil, "Anouk - Together Alone");
#bat.insert(b3, nil, "Armiral Freebee - Admiral Freebee");
#bat.insert(b3, nil, "Lais - Douce Victime");
#bat.insert(b3, nil, nil:str);
#bat.insert(b3, nil, "Hooverphonic - Sit Down and Listen To...");
#bat.insert(b3, nil, "Osdorp Posse - Tegenstrijd");
#bat.insert(b3, nil, "MC Wigger & DJ Wanna-B - Fuck Osdorp");
#
#b4 := bbp.new(:void, :oid);
#bat.insert(b4, nil, 2@0);
#bat.insert(b4, nil, nil:oid);
#bat.insert(b4, nil, 4@0);
#bat.insert(b4, nil, 9@0);
#bat.insert(b4, nil, 6@0);
#bat.insert(b4, nil, 102@0);
#bat.insert(b4, nil, nil:oid);
#bat.insert(b4, nil, 28@0);
#bat.insert(b4, nil, 4@0);
#bat.insert(b4, nil, 1@0);
#
#b5 := bbp.new(:void, :sht);
#bat.insert(b5, nil, 12:sht);
#bat.insert(b5, nil, 0:sht);
#bat.insert(b5, nil, -73:sht);
#bat.insert(b5, nil, 2:sht);
#bat.insert(b5, nil, 9:sht);
#bat.insert(b5, nil, -23:sht);
#bat.insert(b5, nil, nil:sht);
#bat.insert(b5, nil, 2:sht);
#bat.insert(b5, nil, 94:sht);
#bat.insert(b5, nil, 5:sht);
#
#b6 := bbp.new(:void, :int);
#bat.insert(b6, nil, 2317:int);
#bat.insert(b6, nil, 283:int);
#bat.insert(b6, nil, -329:int);
#bat.insert(b6, nil, nil:int);
#bat.insert(b6, nil, -72:int);
#bat.insert(b6, nil, 23:int);
#bat.insert(b6, nil, 9217:int);
#bat.insert(b6, nil, 1282:int);
#bat.insert(b6, nil, -72:int);
#bat.insert(b6, nil, 28362:int);
#
#b7 := bbp.new(:void, :lng);
#bat.insert(b7, nil, 21783253:lng);
#bat.insert(b7, nil, -372867832:lng);
#bat.insert(b7, nil, 372:lng);
#bat.insert(b7, nil, -1:lng);
#bat.insert(b7, nil, 3732897923:lng);
#bat.insert(b7, nil, 632:lng);
#bat.insert(b7, nil, 389263267823:lng);
#bat.insert(b7, nil, -32782:lng);
#bat.insert(b7, nil, 8329732:lng);
#bat.insert(b7, nil, nil:lng);
#
#b8 := bbp.new(:void, :flt);
#bat.insert(b8, nil, nil:flt);
#bat.insert(b8, nil, 63.362:flt);
#bat.insert(b8, nil, 725:flt);
#bat.insert(b8, nil, -21672.27:flt);
#bat.insert(b8, nil, 272.000092:flt);
#bat.insert(b8, nil, -392.1:flt);
#bat.insert(b8, nil, 821.82:flt);
#bat.insert(b8, nil, 2.20371:flt);
#bat.insert(b8, nil, 721.271:flt);
#bat.insert(b8, nil, nil:flt);
#
#b9 := bbp.new(:void, :dbl);
#bat.insert(b9, nil, 83927632.38772:dbl);
#bat.insert(b9, nil, nil:dbl);
#bat.insert(b9, nil, -932720.32:dbl);
#bat.insert(b9, nil, 23.73:dbl);
#bat.insert(b9, nil, 32782.238:dbl);
#bat.insert(b9, nil, 32723.360001:dbl);
#bat.insert(b9, nil, nil:dbl);
#bat.insert(b9, nil, 0.0000021:dbl);
#bat.insert(b9, nil, 4:dbl);
#bat.insert(b9, nil, 64.1:dbl);
#
#resultset.populateColumn(rs, 1, b1);
#resultset.populateColumn(rs, 2, b2);
#resultset.populateColumn(rs, 3, b3);
#resultset.populateColumn(rs, 4, b4);
#resultset.populateColumn(rs, 5, b5);
#resultset.populateColumn(rs, 6, b6);
#resultset.populateColumn(rs, 7, b7);
#resultset.populateColumn(rs, 8, b8);
#resultset.populateColumn(rs, 9, b9);
#
#resultset.writeNextPart(rs);
#
#rsbox.releaseAll();
#
#
!ERROR: 'rsbox.create' undefined in user.main[1]
function user.main():int;	# 0  (main:int)
    rs := rsbox.create(9,'t');	# 1  unknown (rs:resultset)<-($2:int)($3:chr)
    b1 := bbp.new(:void,:bit);	# 2 CMDBATnew (b1:bat[:void,:bit])<-($5:void)($6:bit)
    bat.insert(b1,nil,1:bit);	# 3 BKCinsert_bun ($7:bat[:void,:bit])<-(b1:bat[:void,:bit])($8:void)($9:bit)
    bat.insert(b1,nil,0:bit);	# 4 BKCinsert_bun ($10:bat[:void,:bit])<-(b1:bat[:void,:bit])($8:void)($11:bit)
    bat.insert(b1,nil,0:bit);	# 5 BKCinsert_bun ($12:bat[:void,:bit])<-(b1:bat[:void,:bit])($8:void)($11:bit)
    bat.insert(b1,nil,0:bit);	# 6 BKCinsert_bun ($13:bat[:void,:bit])<-(b1:bat[:void,:bit])($8:void)($11:bit)
    bat.insert(b1,nil,nil:bit);	# 7 BKCinsert_bun ($14:bat[:void,:bit])<-(b1:bat[:void,:bit])($8:void)($15:bit)
    bat.insert(b1,nil,1:bit);	# 8 BKCinsert_bun ($16:bat[:void,:bit])<-(b1:bat[:void,:bit])($8:void)($9:bit)
    bat.insert(b1,nil,0:bit);	# 9 BKCinsert_bun ($17:bat[:void,:bit])<-(b1:bat[:void,:bit])($8:void)($11:bit)
    bat.insert(b1,nil,1:bit);	# 10 BKCinsert_bun ($18:bat[:void,:bit])<-(b1:bat[:void,:bit])($8:void)($9:bit)
    bat.insert(b1,nil,nil:bit);	# 11 BKCinsert_bun ($19:bat[:void,:bit])<-(b1:bat[:void,:bit])($8:void)($15:bit)
    bat.insert(b1,nil,1:bit);	# 12 BKCinsert_bun ($20:bat[:void,:bit])<-(b1:bat[:void,:bit])($8:void)($9:bit)
    b2 := bbp.new(:void,:chr);	# 13 CMDBATnew (b2:bat[:void,:chr])<-($22:void)($23:chr)
    bat.insert(b2,nil,'nil:chr');	# 14 BKCinsert_bun ($24:bat[:void,:chr])<-(b2:bat[:void,:chr])($8:void)($25:chr)
    bat.insert(b2,nil,'a');	# 15 BKCinsert_bun ($26:bat[:void,:chr])<-(b2:bat[:void,:chr])($8:void)($27:chr)
    bat.insert(b2,nil,'x');	# 16 BKCinsert_bun ($28:bat[:void,:chr])<-(b2:bat[:void,:chr])($8:void)($29:chr)
    bat.insert(b2,nil,'nil:chr');	# 17 BKCinsert_bun ($30:bat[:void,:chr])<-(b2:bat[:void,:chr])($8:void)($25:chr)
    bat.insert(b2,nil,'a');	# 18 BKCinsert_bun ($31:bat[:void,:chr])<-(b2:bat[:void,:chr])($8:void)($27:chr)
    bat.insert(b2,nil,'f');	# 19 BKCinsert_bun ($32:bat[:void,:chr])<-(b2:bat[:void,:chr])($8:void)($33:chr)
    bat.insert(b2,nil,'r');	# 20 BKCinsert_bun ($34:bat[:void,:chr])<-(b2:bat[:void,:chr])($8:void)($35:chr)
    bat.insert(b2,nil,'d');	# 21 BKCinsert_bun ($36:bat[:void,:chr])<-(b2:bat[:void,:chr])($8:void)($37:chr)
    bat.insert(b2,nil,';');	# 22 BKCinsert_bun ($38:bat[:void,:chr])<-(b2:bat[:void,:chr])($8:void)($39:chr)
    bat.insert(b2,nil,' ');	# 23 BKCinsert_bun ($40:bat[:void,:chr])<-(b2:bat[:void,:chr])($41:void)($42:chr)
    b3 := bbp.new(:void,:str);	# 24 CMDBATnew (b3:bat[:void,:str])<-($44:void)($45:str)
    bat.insert(b3,nil,"Daft Punk - Human After All");	# 25 BKCinsert_bun ($46:bat[:void,:str])<-(b3:bat[:void,:str])($41:void)($47:str)
    bat.insert(b3,nil,"Spinvis - Spinvis");	# 26 BKCinsert_bun ($48:bat[:void,:str])<-(b3:bat[:void,:str])($41:void)($49:str)
    bat.insert(b3,nil,"Within Temptation - The Silent Force");	# 27 BKCinsert_bun ($50:bat[:void,:str])<-(b3:bat[:void,:str])($41:void)($51:str)
    bat.insert(b3,nil,"Anouk - Together Alone");	# 28 BKCinsert_bun ($52:bat[:void,:str])<-(b3:bat[:void,:str])($41:void)($53:str)
    bat.insert(b3,nil,"Armiral Freebee - Admiral Freebee");	# 29 BKCinsert_bun ($54:bat[:void,:str])<-(b3:bat[:void,:str])($41:void)($55:str)
    bat.insert(b3,nil,"Lais - Douce Victime");	# 30 BKCinsert_bun ($56:bat[:void,:str])<-(b3:bat[:void,:str])($41:void)($57:str)
    bat.insert(b3,nil,"nil:str");	# 31 BKCinsert_bun ($58:bat[:void,:str])<-(b3:bat[:void,:str])($41:void)($59:str)
    bat.insert(b3,nil,"Hooverphonic - Sit Down and Listen To...");	# 32 BKCinsert_bun ($60:bat[:void,:str])<-(b3:bat[:void,:str])($41:void)($61:str)
    bat.insert(b3,nil,"Osdorp Posse - Tegenstrijd");	# 33 BKCinsert_bun ($62:bat[:void,:str])<-(b3:bat[:void,:str])($41:void)($63:str)
    bat.insert(b3,nil,"MC Wigger & DJ Wanna-B - Fuck Osdorp");	# 34 BKCinsert_bun ($64:bat[:void,:str])<-(b3:bat[:void,:str])($41:void)($65:str)
    b4 := bbp.new(:void,:oid);	# 35 CMDBATnew (b4:bat[:void,:oid])<-($67:void)($68:oid)
    bat.insert(b4,nil,2@0);	# 36 BKCinsert_bun ($69:bat[:void,:oid])<-(b4:bat[:void,:oid])($41:void)($70:oid)
    bat.insert(b4,nil,nil:oid);	# 37 BKCinsert_bun ($71:bat[:void,:oid])<-(b4:bat[:void,:oid])($41:void)($72:oid)
    bat.insert(b4,nil,4@0);	# 38 BKCinsert_bun ($73:bat[:void,:oid])<-(b4:bat[:void,:oid])($74:void)($75:oid)
    bat.insert(b4,nil,9@0);	# 39 BKCinsert_bun ($76:bat[:void,:oid])<-(b4:bat[:void,:oid])($74:void)($77:oid)
    bat.insert(b4,nil,6@0);	# 40 BKCinsert_bun ($78:bat[:void,:oid])<-(b4:bat[:void,:oid])($74:void)($79:oid)
    bat.insert(b4,nil,102@0);	# 41 BKCinsert_bun ($80:bat[:void,:oid])<-(b4:bat[:void,:oid])($74:void)($81:oid)
    bat.insert(b4,nil,nil:oid);	# 42 BKCinsert_bun ($82:bat[:void,:oid])<-(b4:bat[:void,:oid])($74:void)($72:oid)
    bat.insert(b4,nil,28@0);	# 43 BKCinsert_bun ($83:bat[:void,:oid])<-(b4:bat[:void,:oid])($74:void)($84:oid)
    bat.insert(b4,nil,4@0);	# 44 BKCinsert_bun ($85:bat[:void,:oid])<-(b4:bat[:void,:oid])($74:void)($75:oid)
    bat.insert(b4,nil,1@0);	# 45 BKCinsert_bun ($86:bat[:void,:oid])<-(b4:bat[:void,:oid])($74:void)($87:oid)
    b5 := bbp.new(:void,:sht);	# 46 CMDBATnew (b5:bat[:void,:sht])<-($89:void)($90:sht)
    bat.insert(b5,nil,12:sht);	# 47 BKCinsert_bun ($91:bat[:void,:sht])<-(b5:bat[:void,:sht])($74:void)($92:sht)
    bat.insert(b5,nil,0:sht);	# 48 BKCinsert_bun ($93:bat[:void,:sht])<-(b5:bat[:void,:sht])($74:void)($94:sht)
    bat.insert(b5,nil,-73:sht);	# 49 BKCinsert_bun ($95:bat[:void,:sht])<-(b5:bat[:void,:sht])($74:void)($96:sht)
    bat.insert(b5,nil,2:sht);	# 50 BKCinsert_bun ($97:bat[:void,:sht])<-(b5:bat[:void,:sht])($74:void)($98:sht)
    bat.insert(b5,nil,9:sht);	# 51 BKCinsert_bun ($99:bat[:void,:sht])<-(b5:bat[:void,:sht])($74:void)($100:sht)
    bat.insert(b5,nil,-23:sht);	# 52 BKCinsert_bun ($101:bat[:void,:sht])<-(b5:bat[:void,:sht])($74:void)($102:sht)
    bat.insert(b5,nil,nil:sht);	# 53 BKCinsert_bun ($103:bat[:void,:sht])<-(b5:bat[:void,:sht])($74:void)($104:sht)
    bat.insert(b5,nil,2:sht);	# 54 BKCinsert_bun ($105:bat[:void,:sht])<-(b5:bat[:void,:sht])($74:void)($98:sht)
    bat.insert(b5,nil,94:sht);	# 55 BKCinsert_bun ($106:bat[:void,:sht])<-(b5:bat[:void,:sht])($107:void)($108:sht)
    bat.insert(b5,nil,5:sht);	# 56 BKCinsert_bun ($109:bat[:void,:sht])<-(b5:bat[:void,:sht])($107:void)($110:sht)
    b6 := bbp.new(:void,:int);	# 57 CMDBATnew (b6:bat[:void,:int])<-($112:void)($113:int)
    bat.insert(b6,nil,2317:int);	# 58 BKCinsert_bun ($114:bat[:void,:int])<-(b6:bat[:void,:int])($107:void)($115:int)
    bat.insert(b6,nil,283:int);	# 59 BKCinsert_bun ($116:bat[:void,:int])<-(b6:bat[:void,:int])($107:void)($117:int)
    bat.insert(b6,nil,-329:int);	# 60 BKCinsert_bun ($118:bat[:void,:int])<-(b6:bat[:void,:int])($107:void)($119:int)
    bat.insert(b6,nil,nil:int);	# 61 BKCinsert_bun ($120:bat[:void,:int])<-(b6:bat[:void,:int])($107:void)($121:int)
    bat.insert(b6,nil,-72:int);	# 62 BKCinsert_bun ($122:bat[:void,:int])<-(b6:bat[:void,:int])($107:void)($123:int)
    bat.insert(b6,nil,23:int);	# 63 BKCinsert_bun ($124:bat[:void,:int])<-(b6:bat[:void,:int])($107:void)($125:int)
    bat.insert(b6,nil,9217:int);	# 64 BKCinsert_bun ($126:bat[:void,:int])<-(b6:bat[:void,:int])($107:void)($127:int)
    bat.insert(b6,nil,1282:int);	# 65 BKCinsert_bun ($128:bat[:void,:int])<-(b6:bat[:void,:int])($107:void)($129:int)
    bat.insert(b6,nil,-72:int);	# 66 BKCinsert_bun ($130:bat[:void,:int])<-(b6:bat[:void,:int])($107:void)($123:int)
    bat.insert(b6,nil,28362:int);	# 67 BKCinsert_bun ($131:bat[:void,:int])<-(b6:bat[:void,:int])($107:void)($132:int)
    b7 := bbp.new(:void,:lng);	# 68 CMDBATnew (b7:bat[:void,:lng])<-($134:void)($135:lng)
    bat.insert(b7,nil,21783253:lng);	# 69 BKCinsert_bun ($136:bat[:void,:lng])<-(b7:bat[:void,:lng])($107:void)($137:lng)
    bat.insert(b7,nil,-372867832:lng);	# 70 BKCinsert_bun ($138:bat[:void,:lng])<-(b7:bat[:void,:lng])($107:void)($139:lng)
    bat.insert(b7,nil,372:lng);	# 71 BKCinsert_bun ($140:bat[:void,:lng])<-(b7:bat[:void,:lng])($141:void)($142:lng)
    bat.insert(b7,nil,-1:lng);	# 72 BKCinsert_bun ($143:bat[:void,:lng])<-(b7:bat[:void,:lng])($141:void)($144:lng)
    bat.insert(b7,nil,3732897923:lng);	# 73 BKCinsert_bun ($145:bat[:void,:lng])<-(b7:bat[:void,:lng])($141:void)($146:lng)
    bat.insert(b7,nil,632:lng);	# 74 BKCinsert_bun ($147:bat[:void,:lng])<-(b7:bat[:void,:lng])($141:void)($148:lng)
    bat.insert(b7,nil,389263267823:lng);	# 75 BKCinsert_bun ($149:bat[:void,:lng])<-(b7:bat[:void,:lng])($141:void)($150:lng)
    bat.insert(b7,nil,-32782:lng);	# 76 BKCinsert_bun ($151:bat[:void,:lng])<-(b7:bat[:void,:lng])($141:void)($152:lng)
    bat.insert(b7,nil,8329732:lng);	# 77 BKCinsert_bun ($153:bat[:void,:lng])<-(b7:bat[:void,:lng])($141:void)($154:lng)
    bat.insert(b7,nil,nil:lng);	# 78 BKCinsert_bun ($155:bat[:void,:lng])<-(b7:bat[:void,:lng])($141:void)($156:lng)
    b8 := bbp.new(:void,:flt);	# 79 CMDBATnew (b8:bat[:void,:flt])<-($158:void)($159:flt)
    bat.insert(b8,nil,nil:flt);	# 80 BKCinsert_bun ($160:bat[:void,:flt])<-(b8:bat[:void,:flt])($141:void)($161:flt)
    bat.insert(b8,nil,63.362:flt);	# 81 BKCinsert_bun ($162:bat[:void,:flt])<-(b8:bat[:void,:flt])($141:void)($163:flt)
    bat.insert(b8,nil,725:flt);	# 82 BKCinsert_bun ($164:bat[:void,:flt])<-(b8:bat[:void,:flt])($141:void)($165:flt)
    bat.insert(b8,nil,-21672.27:flt);	# 83 BKCinsert_bun ($166:bat[:void,:flt])<-(b8:bat[:void,:flt])($141:void)($167:flt)
    bat.insert(b8,nil,272.000092:flt);	# 84 BKCinsert_bun ($168:bat[:void,:flt])<-(b8:bat[:void,:flt])($141:void)($169:flt)
    bat.insert(b8,nil,-392.1:flt);	# 85 BKCinsert_bun ($170:bat[:void,:flt])<-(b8:bat[:void,:flt])($141:void)($171:flt)
    bat.insert(b8,nil,821.82:flt);	# 86 BKCinsert_bun ($172:bat[:void,:flt])<-(b8:bat[:void,:flt])($141:void)($173:flt)
    bat.insert(b8,nil,2.20371:flt);	# 87 BKCinsert_bun ($174:bat[:void,:flt])<-(b8:bat[:void,:flt])($175:void)($176:flt)
    bat.insert(b8,nil,721.271:flt);	# 88 BKCinsert_bun ($177:bat[:void,:flt])<-(b8:bat[:void,:flt])($175:void)($178:flt)
    bat.insert(b8,nil,nil:flt);	# 89 BKCinsert_bun ($179:bat[:void,:flt])<-(b8:bat[:void,:flt])($175:void)($161:flt)
    b9 := bbp.new(:void,:dbl);	# 90 CMDBATnew (b9:bat[:void,:dbl])<-($181:void)($182:dbl)
    bat.insert(b9,nil,83927632.38772:dbl);	# 91 BKCinsert_bun ($183:bat[:void,:dbl])<-(b9:bat[:void,:dbl])($175:void)($184:dbl)
    bat.insert(b9,nil,nil:dbl);	# 92 BKCinsert_bun ($185:bat[:void,:dbl])<-(b9:bat[:void,:dbl])($175:void)($186:dbl)
    bat.insert(b9,nil,-932720.32:dbl);	# 93 BKCinsert_bun ($187:bat[:void,:dbl])<-(b9:bat[:void,:dbl])($175:void)($188:dbl)
    bat.insert(b9,nil,23.73:dbl);	# 94 BKCinsert_bun ($189:bat[:void,:dbl])<-(b9:bat[:void,:dbl])($175:void)($190:dbl)
    bat.insert(b9,nil,32782.238:dbl);	# 95 BKCinsert_bun ($191:bat[:void,:dbl])<-(b9:bat[:void,:dbl])($175:void)($192:dbl)
    bat.insert(b9,nil,32723.360001:dbl);	# 96 BKCinsert_bun ($193:bat[:void,:dbl])<-(b9:bat[:void,:dbl])($175:void)($194:dbl)
    bat.insert(b9,nil,nil:dbl);	# 97 BKCinsert_bun ($195:bat[:void,:dbl])<-(b9:bat[:void,:dbl])($175:void)($186:dbl)
    bat.insert(b9,nil,0.0000021:dbl);	# 98 BKCinsert_bun ($196:bat[:void,:dbl])<-(b9:bat[:void,:dbl])($175:void)($197:dbl)
    bat.insert(b9,nil,4:dbl);	# 99 BKCinsert_bun ($198:bat[:void,:dbl])<-(b9:bat[:void,:dbl])($175:void)($199:dbl)
    bat.insert(b9,nil,64.1:dbl);	# 100 BKCinsert_bun ($200:bat[:void,:dbl])<-(b9:bat[:void,:dbl])($175:void)($201:dbl)
    resultset.populateColumn(rs,1,b1);	# 101 RSpopulateColumn ($202:resultset)<-(rs:resultset)($203:int)(b1:bat[:void,:bit])
    resultset.populateColumn(rs,2,b2);	# 102 RSpopulateColumn ($204:resultset)<-(rs:resultset)($205:int)(b2:bat[:void,:chr])
    resultset.populateColumn(rs,3,b3);	# 103 RSpopulateColumn ($206:resultset)<-(rs:resultset)($207:int)(b3:bat[:void,:str])
    resultset.populateColumn(rs,4,b4);	# 104 RSpopulateColumn ($208:resultset)<-(rs:resultset)($209:int)(b4:bat[:void,:oid])
    resultset.populateColumn(rs,5,b5);	# 105 RSpopulateColumn ($210:resultset)<-(rs:resultset)($211:int)(b5:bat[:void,:sht])
    resultset.populateColumn(rs,6,b6);	# 106 RSpopulateColumn ($212:resultset)<-(rs:resultset)($213:int)(b6:bat[:void,:int])
    resultset.populateColumn(rs,7,b7);	# 107 RSpopulateColumn ($214:resultset)<-(rs:resultset)($215:int)(b7:bat[:void,:lng])
    resultset.populateColumn(rs,8,b8);	# 108 RSpopulateColumn ($216:resultset)<-(rs:resultset)($217:int)(b8:bat[:void,:flt])
    resultset.populateColumn(rs,9,b9);	# 109 RSpopulateColumn ($218:resultset)<-(rs:resultset)($219:int)(b9:bat[:void,:dbl])
    resultset.writeNextPart(rs);	# 110 RSwriteNextPart ($220:int)<-(rs:resultset)
    rsbox.releaseAll();	# 111 RSBreleaseAll ($221:void)
end main;	# 112  

# 21:29:28 >  
# 21:29:28 >  Done.
# 21:29:28 >  

