@f mil_commands
@t MIL backward compatability
@a Martin Kersten
@* Introduction
The old-fashioned enquire operators are defined for backward
compliance only.
@mal

function mil.cpu():bat[:str,:int];
	v:= status.cpuStatistics();
	return v;
end cpu;
function mil.memory():bat[:str,:int];
	v:= status.memStatistics();
	return v;
end memory;
function mil.io():bat[:str,:int];
	v:= status.ioStatistics();
	return v;
end io;

function mil.dir(b:bat[:int,:str]):void;
	atm:= bbp.atomNames();
	brev:= bat.reverse(b);
	bm := bat.mirror(brev);
	h := bbp.getHeadType();
	bHead:= algebra.join(brev,h);
	bat.setName(bHead,"htype");
	h := bbp.getTailType();
	bTail:= algebra.join(brev,h);
	bat.setName(bTail,"ttype");
	bcount:= bbp.bbpCount();
	bCount:= algebra.join(brev,bcount);
	bat.setName(bCount,"count");
	bheat:= bbp.getHeat();
	bHeat:= algebra.join(brev,bheat);
	bat.setName(bHeat,"heat");
	bdirty:= bbp.getDirty();
	bDirty:= algebra.join(brev,bdirty);
	bat.setName(bDirty,"dirty");
	bstatus:= bbp.getStatus();
	bStatus:= algebra.join(brev,bstatus);
	bat.setName(bStatus,"status");
	bkind:= bbp.getKind();
	bKind:= algebra.join(brev,bkind);
	bat.setName(bKind,"kind");
	bref:= bbp.getRefCount();
	bRef:= algebra.join(brev,bref);
	bat.setName(bRef,"refcnt");
	tablet.table(brev, bm, bHead,bTail,bCount, bHeat,bDirty,bStatus,bKind,bRef);
end dir;

function mil.dir(s:str):void;
	t:= bbp.getNames();
	tn:= algebra.like(t,s);
	io.print(tn);
	mil.dir(tn);
end dir;
function dir():void;
	t:= bbp.getNames();
	mil.dir(t);
end dir;

function mil.ls():void;
	nme:= bbp.getNames();
	sc_a := bbp.getKind();
	tc_a := algebra.select(sc_a,"persistent");
	prs:= algebra.semijoin(nme,tc_a);
	uc_a := calc.int(nil);
	vc_a := bat.reverse(nme);
	wc_a := algebra.select(vc_a,uc_a,-1);
	xc_a := optimizer.multiplex("*",wc_a,-1);
	rev:= bat.reverse(xc_a);
	yc_a := bat.setWriteMode(prs);
	ad_a := bat.setColumn(yc_a,"name");
	bd_a := bat.replace(ad_a,rev);
	cd_a := mil.dir(bd_a);
end ls;

function mil.ls(substr:str):void;
	dd_a := bbp.getNames();
	nme:= algebra.like(dd_a,substr);
	ed_a := bbp.getKind();
	fd_a := algebra.select(ed_a,"persistent");
	prs:= algebra.semijoin(nme,fd_a);
	gd_a := calc.int(nil);
	hd_a := bat.reverse(nme);
	id_a := algebra.select(hd_a,gd_a,-1);
	jd_a := optimizer.multiplex("*",id_a,-1);
	rev:= bat.reverse(jd_a);
	kd_a := bat.setWriteMode(prs,);
	ld_a := bat.setColumn(kd_a,"name");
	md_a := bat.replace(ld_a,rev);
	nd_a := mil.dir(md_a);
end ls;
@c
/* purposely empty */
#include <stdio.h>
