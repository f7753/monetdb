# Monet Database Server V5.0
# Copyright (c) 1993-2004, CWI. All rights reserved.
# compiled for 32biti686-pc-linux-gnu/32bit.
# config:/ufs/mk/monet5/src/mal/Tests/tst.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB/dbfarm
# dbname:demo
## GDK layer should produce exceptions rather then direct warnings
## or ignoring.
## a typical case is to try to rename an existing (persistent) bat
#
#	b:bat[:int,:int]:= new(:int,:int);
#	setName(b,"mybat");
#	#setPersistent(b);
#	setColumn(b,"first","second");
#	print(b);
#	c:= new(:int,:str);
#	setName(c,"mybat");
#	print(c);
#	#setPersistent(c);
#	print(c);
#	printf("catched anything?\n");
#catch GDKerror;
#	printf("Catched the renaming exception\n");
#exit  GDKerror;
##get rid of it again
#	#destroy(b);
#	#destroy(c);
#
function Admin.main():int;	# 0  (main:int)
    b := bbp.new(int:,int:);	# 1 CMDBATnew (b:bat[:int,:int])<-($2:int)($3:int)
    bat.setName(b,"mybat");	# 2 BKCsetName ($4:bat[:int,:int])<-(b:bat[:int,:int])($5:str)
    bat.setColumn(b,"first","second");	# 3 BKCsetColumns ($6:bat[:int,:int])<-(b:bat[:int,:int])($7:str)($8:str)
    io.print(b);	# 4 CMDprint_val ($9:int)<-(b:bat[:int,:int])
    c := bbp.new(int:,str:);	# 5 CMDBATnew (c:bat[:int,:str])<-($11:int)($12:str)
    bat.setName(c,"mybat");	# 6 BKCsetName ($13:bat[:int,:str])<-(c:bat[:int,:str])($5:str)
    io.print(c);	# 7 CMDprint_val ($14:int)<-(c:bat[:int,:str])
    io.print(c);	# 8 CMDprint_val ($15:int)<-(c:bat[:int,:str])
    io.printf("catched anything?\n");	# 9 SYSprint_str ($16:int)<-($17:str)
catch GDKerror;	# 10  (GDKerror:str) jump 12
    io.printf("Catched the renaming exception\n");	# 11 SYSprint_str ($19:int)<-($20:str)
exit GDKerror;	# 12  (GDKerror:str)
end main;	# 13  
#-----------------#
# first	second	  # name
# int	int	  # type
#-----------------#
#-----------------#
# h	mybat	  # name
# int	str	  # type
#-----------------#
#-----------------#
# h	mybat	  # name
# int	str	  # type
#-----------------#
catched anything?
>