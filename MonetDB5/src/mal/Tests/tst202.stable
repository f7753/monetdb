# Monet Database Server V5.0
# Copyright (c) 1993-2003, CWI. All rights reserved.
# compiled for 32biti686-pc-linux-gnu/32bit.
# config:/ufs/mk/monet_5/src/mal/Tests/tst.conf
# dbfarm:/ufs/mk/monet_5/Linux/var/MonetDB
# dbname:demo
## GDK layer should produce exceptions rather then direct warnings
## or ignoring.
## a typical case is to try to rename an existing (persistent) bat
#
#	b:bat[int,int]:= new(int,int);
#	setName(b,"mybat");
#	#setPersistent(b);
#	setColumn(b,"first","second");
#	print(b);
#	c:= new(int,str);
#	setName(c,"mybat");
#	print(c);
#	#setPersistent(c);
#	print(c);
#	printf("catched anything?\n");
#catch GDKerror;
#	printf("Catched the renaming exception\n");
#exit  GDKerror;
##get rid of it again
#	#destroy(b);
#	#destroy(c);
#
function Admin.main():int; #0  (main:int)
    b := bbp.new(int,int); #1 CMDBATnew (b:bat[int,int])<-(int:int)(int:int)
    bat.setName(b,"mybat"); #2 CMDsetName ($3:bat[int,int])<-(b:bat[int,int])($4:str)
    bat.setColumn(b,"first","second"); #3 CMDsetColumns ($5:bat[int,int])<-(b:bat[int,int])($6:str)($7:str)
    io.print(b); #4 CMDprint_val ($8:int)<-(b:bat[int,int])
    c := bbp.new(int,str); #5 CMDBATnew (c:bat[int,str])<-(int:int)(str:str)
    bat.setName(c,"mybat"); #6 CMDsetName ($11:bat[int,str])<-(c:bat[int,str])($4:str)
    io.print(c); #7 CMDprint_val ($12:int)<-(c:bat[int,str])
    io.print(c); #8 CMDprint_val ($13:int)<-(c:bat[int,str])
    system.printf("catched anything?\n"); #9 SYSprint_str ($14:int)<-($15:str)
catch GDKerror; #10  (GDKerror:str) jump 12
    system.printf("Catched the renaming exception\n"); #11 SYSprint_str ($17:int)<-($18:str)
exit GDKerror; #12  (GDKerror:str)
end main; #13  
#-----------------#
# BAT:	  mybat	  #
# (int)	  (int)	  #
#-----------------#
#-----------------#
# BAT:	  mybat	  #
# (int)	  (str)	  #
#-----------------#
#-----------------#
# BAT:	  mybat	  #
# (int)	  (str)	  #
#-----------------#
catched anything?
>