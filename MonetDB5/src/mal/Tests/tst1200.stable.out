stdout of test 'tst1200` in directory 'src/mal` itself:
# Monet Database Server V5.0
# Copyright (c) 1993-2004, CWI. All rights reserved.
# compiled for 32biti686-pc-linux-gnu/32bit.
# config:/ufs/mk/monet5/src/mal/Tests/tst.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB/dbfarm
# dbname:demo
# Visit http://monetdb.cwi.nl for further information.
## Mil compiler Version 1.0)
## Copyright (c) 1993-2001, CWI. All rights reserved.
#
## Predefined code segment
##
###line 531 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
##module(monettime,alarm);
##
##
##
###line 535 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
### test the various ways to create rules
#	rule_jan:= rule("1st MON from start of JAN@01:15");
##var rule_jan := rule("1st MON from start of JAN@01:15");
#	rule_mar:= rule("first WEDNE on or after march 10@01:15");
##var rule_mar := rule("first WEDNE on or after march 10@01:15");
#	rule_apr:= rule("last THU on or before aPr 1@01:15");
##var rule_apr := rule("last THU on or before aPr 1@01:15");
#	rule_may:= rule("MAY 26@01:15");
##var rule_may := rule("MAY 26@01:15");
#	rule_jun:= rule("2nd TUE from end of june@01:15");
##var rule_jun := rule("2nd TUE from end of june@01:15");
#	rule_jul:= rule(7,1,1,75);
##var rule_jul := rule(7,1,1,75);
#	rule_aug:= rule(8,-1,1,75);
##var rule_aug := rule(8,-1,1,75);
#	rule_sep:= rule(9,-10,3,75);
##var rule_sep := rule(9,-10,3,75);
#	rule_oct:= rule(10,31,0,75);
##var rule_oct := rule(10,31,0,75);
#	rule_nov:= rule(11,-10,-4,75);
##var rule_nov := rule(11,-10,-4,75);
### nil rules
#	rule_dec:= rule(12,-31,0,75);
##var rule_dec := rule(12,-31,0,75);
#	rule_feb:= rule("first fRiDaY on or after february 30@01:15");
##var rule_feb := rule("first fRiDaY on or after february 30@01:15");
## 
#	rule_bat:= new(:str,:rule,10);
##var rule_bat := new(str,rule,10);
#	insert(rule_bat,"jan",rule_jan);
#	insert(rule_bat,"feb",rule_feb);
#	insert(rule_bat,"mar",rule_mar);
#	insert(rule_bat,"apr",rule_apr);
##rule_bat.insert("jan",rule_jan).insert("feb",rule_feb).insert("mar",rule_mar).insert("apr",rule_apr);
#	insert(rule_bat,"may",rule_may);
#	insert(rule_bat,"jun",rule_jun);
#	insert(rule_bat,"jul",rule_jul);
#	insert(rule_bat,"aug",rule_aug);
##rule_bat.insert("may",rule_may).insert("jun",rule_jun).insert("jul",rule_jul).insert("aug",rule_aug);
#	insert(rule_bat,"sep",rule_sep);
#	insert(rule_bat,"oct",rule_oct);
#	insert(rule_bat,"nov",rule_nov);
#	insert(rule_bat,"dec",rule_dec);
##rule_bat.insert("sep",rule_sep).insert("oct",rule_oct).insert("nov",rule_nov).insert("dec",rule_dec);
##
### test the operations on rules
#	ma_a := setColumn(rule_bat,"rule");
##print(rule_bat.setColumn("rule"),
#	na_a := multiplex.script("month",rule_bat);
#	oa_a := setColumn(na_a,"month");
##      [month](rule_bat).setColumn("month"),
#	pa_a := multiplex.script("weekday",rule_bat);
#	qa_a := setColumn(pa_a,"weekday");
##      [weekday](rule_bat).setColumn("weekday"),
#	ra_a := multiplex.script("day",rule_bat);
#	sa_a := setColumn(ra_a,"day");
##      [day](rule_bat).setColumn("day"),
#	ta_a := multiplex.script("minutes",rule_bat);
#	ua_a := setColumn(ta_a,"minutes");
#print("rule_bat,na_a,pa_a,ra_a,ta_a");
#	va_a := print(rule_bat,na_a,pa_a,ra_a,ta_a);
##      [minutes](rule_bat).setColumn("minutes"));
##
#	setColumn(rule_bat,"rule");
##print(rule_bat.setColumn("rule"),
#	xa_a := multiplex.script("compute",rule_bat,2001);
#	ya_a := setColumn(xa_a,"2001");
##      [compute](rule_bat, 2001).setColumn("2001"),
#	ab_a := multiplex.script("compute",rule_bat,2001);
#	bb_a := multiplex.script("dayofweek",ab_a);
#	cb_a := multiplex.script("dayname",bb_a);
#	setColumn(cb_a,"2001");
##      [dayname]([dayofweek]([compute](rule_bat, 2001))).setColumn("2001"),
#	eb_a := multiplex.script("compute",rule_bat,1999);
#	setColumn(eb_a,"1999");
##      [compute](rule_bat, 1999).setColumn("1999"),
#	gb_a := multiplex.script("compute",rule_bat,1999);
#	hb_a := multiplex.script("dayofweek",gb_a);
#	ib_a := multiplex.script("dayname",hb_a);
#	setColumn(ib_a,"1999");
##      [dayname]([dayofweek]([compute](rule_bat, 1999))).setColumn("1999"),
#	kb_a := multiplex.script("compute",rule_bat,1992);
#	setColumn(kb_a,"1992");
##      [compute](rule_bat, 1992).setColumn("1992"),
#	mb_a := multiplex.script("compute",rule_bat,1992);
#	nb_a := multiplex.script("dayofweek",mb_a);
#	ob_a := multiplex.script("dayname",nb_a);
#	setColumn(ob_a,"1992");
#print("rule_bat,xa_a,cb_a,eb_a,ib_a,kb_a,ob_a");
#	qb_a := print(rule_bat,xa_a,cb_a,eb_a,ib_a,kb_a,ob_a);
##      [dayname]([dayofweek]([compute](rule_bat, 1992))).setColumn("1992"));
##
#	rb_a := setColumn(rule_bat,"rule");
##print(rule_bat.setColumn("rule"),
#	sb_a := multiplex.script("compute",rule_bat,1572);
#	tb_a := setColumn(sb_a,"1572");
##      [compute](rule_bat, 1572).setColumn("1572"),
#	ub_a := multiplex.script("compute",rule_bat,1572);
#	vb_a := multiplex.script("dayofweek",ub_a);
#	wb_a := multiplex.script("dayname",vb_a);
#	xb_a := setColumn(wb_a,"1572");
##      [dayname]([dayofweek]([compute](rule_bat, 1572))).setColumn("1572"),
#	yb_a := multiplex.script("compute",rule_bat,1);
#	ac_a := setColumn(yb_a,"1");
##      [compute](rule_bat, 1).setColumn("1"),
#	bc_a := multiplex.script("compute",rule_bat,1);
#	cc_a := multiplex.script("dayofweek",bc_a);
#	dc_a := multiplex.script("dayname",cc_a);
#	ec_a := setColumn(dc_a,"1");
##      [dayname]([dayofweek]([compute](rule_bat, 1))).setColumn("1"),
#	fc_a := multiplex.script("compute",rule_bat,-2000);
#	gc_a := setColumn(fc_a,"-2000");
##      [compute](rule_bat, -2000).setColumn("-2000"),
#	hc_a := multiplex.script("compute",rule_bat,-2000);
#	ic_a := multiplex.script("dayofweek",hc_a);
#	jc_a := multiplex.script("dayname",ic_a);
#	kc_a := setColumn(jc_a,"-2000");
#print("rule_bat,sb_a,wb_a,yb_a,dc_a,fc_a,jc_a");
#	lc_a := print(rule_bat,sb_a,wb_a,yb_a,dc_a,fc_a,jc_a);
##      [dayname]([dayofweek]([compute](rule_bat, -2000))).setColumn("-2000"));
##
##
##
###line 580 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
### test the various ways to create tzones, using some of the above created rules
#	tzone_00:= tzone("GMT");
##var tzone_00 := tzone("GMT");
#	tzone_01:= tzone("GMT+01:00");
##var tzone_01 := tzone("GMT+01:00");
#	tzone_02:= tzone("GMT+0100");
##var tzone_02 := tzone("GMT+0100");
#	tzone_03:= tzone(60,rule_oct,rule_mar);
##var tzone_03 := tzone(60, rule_oct, rule_mar);
#	tzone_04:= tzone(0,rule_jan,rule_aug);
##var tzone_04 := tzone(0, rule_jan, rule_aug);
#	tzone_05:= tzone(-97,rule_oct,rule_apr);
##var tzone_05 := tzone(-97, rule_oct, rule_apr);
#	tzone_06:= tzone(-97,rule_may,rule_sep);
##var tzone_06 := tzone(-97, rule_may, rule_sep);
#	mc_a := *(23,60);
#	tzone_07:= tzone(mc_a,rule_apr,rule_nov);
##var tzone_07 := tzone(23*60, rule_apr, rule_nov);
#	nc_a := *(-23,59);
#	oc_a := -(nc_a,59);
#	tzone_08:= tzone(oc_a);
##var tzone_08 := tzone((-23*59) - 59);
#	tzone_09:= tzone(0);
##var tzone_09 := tzone(0);
#	tzone_10:= tzone(-60);
##var tzone_10 := tzone(-60);
#	pc_a := *(23,60);
#	qc_a := +(pc_a,59);
#	tzone_11:= tzone(qc_a);
##var tzone_11 := tzone((23*60)+59);
#	tzone_12:= tzone(60);
##var tzone_12 := tzone(60);
### nil tzones
#	tzone_13:= tzone(60,rule_feb,rule_dec);
##var tzone_13 := tzone(60, rule_feb, rule_dec);
#	rc_a := *(24,60);
#	tzone_15:= tzone(rc_a,rule_apr,rule_nov);
##var tzone_15 := tzone(24*60, rule_apr, rule_nov);
##
##
#	tzone_bat:= new(:oid,:tzone);
##var tzone_bat := new(oid,tzone);
#	insert(tzone_bat,00@0,tzone_00);
#	insert(tzone_bat,01@0,tzone_01);
#	insert(tzone_bat,02@0,tzone_02);
##tzone_bat.insert(00@0, tzone_00).insert(01@0, tzone_01).insert(02@0, tzone_02);
#	insert(tzone_bat,03@0,tzone_03);
#	insert(tzone_bat,04@0,tzone_04);
#	insert(tzone_bat,05@0,tzone_05);
##tzone_bat.insert(03@0, tzone_03).insert(04@0, tzone_04).insert(05@0, tzone_05);
#	insert(tzone_bat,06@0,tzone_06);
#	insert(tzone_bat,07@0,tzone_07);
#	insert(tzone_bat,08@0,tzone_08);
##tzone_bat.insert(06@0, tzone_06).insert(07@0, tzone_07).insert(08@0, tzone_08);
#	insert(tzone_bat,09@0,tzone_09);
#	insert(tzone_bat,10@0,tzone_10);
#	insert(tzone_bat,11@0,tzone_11);
##tzone_bat.insert(09@0, tzone_09).insert(10@0, tzone_10).insert(11@0, tzone_11);
#	insert(tzone_bat,12@0,tzone_12);
#	insert(tzone_bat,13@0,tzone_13);
#	insert(tzone_bat,15@0,tzone_15);
##tzone_bat.insert(12@0, tzone_12).insert(13@0, tzone_13).insert(15@0, tzone_15);
##
### test the operations on tzones
#	id_a := setName(tzone_bat,"tzone");
##print(tzone_bat);
##print("start error");
#	#x:= getRefCount(tzone_bat);
##print(x);
#	#jd_a := print(tzone_bat);
##print("end");
##print(x);
#	#x:= getRefCount(tzone_bat);
#	print(tzone_bat);
##print(tzone_bat.setColumn("tzone"));
#	kd_a := multiplex.script("minutes",tzone_bat);
#	setColumn(kd_a,"minutes");
##print([minutes](tzone_bat).setColumn("minutes"),
#	md_a := multiplex.script("start_dst",tzone_bat);
#	setColumn(md_a,"start_dst");
##      [start_dst](tzone_bat).setColumn("start_dst"),
#	od_a := multiplex.script("end_dst",tzone_bat);
#	setColumn(od_a,"end_dst");
#	qd_a := print(kd_a,md_a,od_a);
##      [end_dst](tzone_bat).setColumn("end_dst"));
##
##
##
###line 614 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
### test the various ways to create dates
#	date_00:= date(2000,01,01);
##var date_00 := date(2000,01,01);
#	date_01:= date("5000-JAN-01");
##var date_01 := date("5000-JAN-01");
#	date_02:= date("1968-FEBR-29");
##var date_02 := date("1968-FEBR-29");
#	date_03:= date("1-MARCH-01");
##var date_03 := date("1-MARCH-01");
#	date_04:= date("-5867411-JAN-1");
##var date_04 := date("-5867411-JAN-1");
#	date_05:= date("-768/octobe/01");
##var date_05 := date("-768/octobe/01");
#	date_06:= date("5000\\novembe\\01");
##var date_06 := date("5000\\novembe\\01");
#	date_07:= date("-1999/jun/01");
##var date_07 := date("-1999/jun/01");
#	date_08:= date("2000-jul-14");
##var date_08 := date("2000-jul-14");
#	date_09:= date("1999-sept-01");
##var date_09 := date("1999-sept-01");
#	date_10:= date("1998-decemBeR-01");
##var date_10 := date("1998-decemBeR-01");
#	date_11:= date("1953 may                01");
##var date_11 := date("1953 may                01");
#	date_12:= date("5867411-DEC-31");
##var date_12 := date("5867411-DEC-31");
### nil dates
#	date_13:= date(1996,13,1);
##var date_13 := date(1996,13,1);
#	date_14:= date("999999999999999999999-01-01");
##var date_14 := date("999999999999999999999-01-01");
#	date_15:= date("1999-JANUARI-01");
##var date_15 := date("1999-JANUARI-01");
#	date_16:= date("1999-FEBR-29");
##var date_16 := date("1999-FEBR-29");
#	date_17:= date("-1-DECEMBER-0");
##var date_17 := date("-1-DECEMBER-0");
#	date_18:= date("5000\novembe\31");
##var date_18 := date("5000\novembe\31");
#	date_19:= date("nil");
##var date_19 := date("nil");
#	date_20:= date("1999-sept-31");
##var date_20 := date("1999-sept-31");
##
#	date_bat:= new(:oid,:date);
##var date_bat := new(oid,date);
#	insert(date_bat,00@0,date_00);
#	insert(date_bat,01@0,date_01);
#	insert(date_bat,02@0,date_02);
##date_bat.insert(00@0, date_00).insert(01@0, date_01).insert(02@0, date_02);
#	insert(date_bat,03@0,date_03);
#	insert(date_bat,04@0,date_04);
#	insert(date_bat,05@0,date_05);
##date_bat.insert(03@0, date_03).insert(04@0, date_04).insert(05@0, date_05);
#	insert(date_bat,06@0,date_06);
#	insert(date_bat,07@0,date_07);
#	insert(date_bat,08@0,date_08);
##date_bat.insert(06@0, date_06).insert(07@0, date_07).insert(08@0, date_08);
#	insert(date_bat,09@0,date_09);
#	insert(date_bat,10@0,date_10);
#	insert(date_bat,11@0,date_11);
##date_bat.insert(09@0, date_09).insert(10@0, date_10).insert(11@0, date_11);
#	insert(date_bat,12@0,date_12);
#	insert(date_bat,13@0,date_13);
#	insert(date_bat,14@0,date_14);
##date_bat.insert(12@0, date_12).insert(13@0, date_13).insert(14@0, date_14);
#	insert(date_bat,15@0,date_15);
#	insert(date_bat,16@0,date_16);
#	insert(date_bat,17@0,date_17);
##date_bat.insert(15@0, date_15).insert(16@0, date_16).insert(17@0, date_17);
#	insert(date_bat,18@0,date_18);
#	insert(date_bat,19@0,date_19);
#	insert(date_bat,20@0,date_20);
##date_bat.insert(18@0, date_18).insert(19@0, date_19).insert(20@0, date_20);
##
### test the operations on dates
#	ne_a := setColumn(date_bat,"date");
##print(date_bat.setColumn("date"),
#	oe_a := multiplex.script("year",date_bat);
#	pe_a := setColumn(oe_a,"year");
##      [year](date_bat).setColumn("year"),
#	qe_a := multiplex.script("day",date_bat);
#	re_a := setColumn(qe_a,"day");
##      [day](date_bat).setColumn("day"),
#	se_a := multiplex.script("month",date_bat);
#	te_a := multiplex.script("monthname",se_a);
#	ue_a := setColumn(te_a,"monthname");
##      [monthname]([month](date_bat)).setColumn("monthname"),
#	ve_a := multiplex.script("month",date_bat);
#	we_a := multiplex.script("monthname",ve_a);
#	xe_a := multiplex.script("monthnum",we_a);
#	ye_a := setColumn(xe_a,"monthnum");
#	af_a := print(date_bat,oe_a,qe_a,te_a,xe_a);
##      [monthnum]([monthname]([month](date_bat))).setColumn("monthnum"));
##
#	date_addyears:= multiplex.script("addyears",date_bat,-100);
##var date_addyears := [addyears](date_bat, -100);
#	date_addmonths:= multiplex.script("addmonths",date_bat,1);
##var date_addmonths := [addmonths](date_bat, 1);
##
#	setColumn(date_bat,"date");
##print(date_bat.setColumn("date"),
#	setColumn(date_addyears,"min100y");
##      date_addyears.setColumn("min100y"),
#	df_a := multiplex.script("diff",date_addyears,date_bat);
#	setColumn(df_a,"diff");
#	ff_a := print(date_bat,date_addyears,df_a);
##      [diff](date_addyears, date_bat).setColumn("diff"));
##
#	setColumn(date_bat,"date");
##print(date_bat.setColumn("date"),
#	setColumn(date_addmonths,"plus1m");
##      date_addmonths.setColumn("plus1m"),
#	if_a := multiplex.script("diff",date_addmonths,date_bat);
#	setColumn(if_a,"diff");
#	kf_a := print(date_bat,date_addmonths,if_a);
##      [diff](date_addmonths, date_bat).setColumn("diff"));
##
### test dayofweek and weeknumber using more than two years as consecutive days
#	date_seq:= new(:int,:date);
##var date_seq := new(int, date);
#	i:= -375;
##var i := -375;
#barrier	lf_a:= true;
#	i:= i+1;
#	of_a := <(i,375);
#barrier	mf_a:= of_a;
##while ((i :+= 1) < 375) {
#	pf_a := adddays(date_00,i);
#	insert(date_seq,i,pf_a);
##	date_seq.insert(i,adddays(date_00,i));
#redo	lf_a;
#exit	mf_a;
#exit	lf_a;
##}
#	rf_a := setColumn(date_seq,"date");
##print(date_seq.setColumn("date"),
#	sf_a := multiplex.script("weekofyear",date_seq);
#	tf_a := setColumn(sf_a,"weekofyear");
##      [weekofyear](date_seq).setColumn("weekofyear"),
#	uf_a := multiplex.script("dayofweek",date_seq);
#	vf_a := multiplex.script("dayname",uf_a);
#	wf_a := setColumn(vf_a,"dayofweek");
##      [dayname]([dayofweek](date_seq)).setColumn("dayofweek"),
#	xf_a := multiplex.script("dayofweek",date_seq);
#	yf_a := multiplex.script("dayname",xf_a);
#	ag_a := multiplex.script("daynum",yf_a);
#	bg_a := setColumn(ag_a,"num");
##      [daynum]([dayname]([dayofweek](date_seq))).setColumn("num"),
#	cg_a := multiplex.script("dayofyear",date_seq);
#	dg_a := setColumn(cg_a,"dayofyear");
#print("date_seq,sf_a,vf_a,ag_a,cg_a");
#	eg_a := print(date_seq,sf_a,vf_a,ag_a,cg_a);
##      [dayofyear](date_seq).setColumn("dayofyear"));
##
##
##
###line 679 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
### test the various ways top create daytimes
#	daytime_00:= daytime(23,59,59,999);
##var daytime_00 := daytime(23,59,59,999);
#	daytime_01:= daytime("23:59");
##var daytime_01 := daytime("23:59");
#	daytime_02:= daytime("00:00");
##var daytime_02 := daytime("00:00");
#	daytime_03:= daytime("23:59:59");
##var daytime_03 := daytime("23:59:59");
#	daytime_04:= daytime("00:00:00.000");
##var daytime_04 := daytime("00:00:00.000");
#	daytime_05:= daytime("00:00:00");
##var daytime_05 := daytime("00:00:00");
#	daytime_06:= daytime("00:00:00:001");
##var daytime_06 := daytime("00:00:00:001");
#	daytime_07:= daytime("03:49:02.999");
##var daytime_07 := daytime("03:49:02.999");
#	daytime_08:= daytime("20:48:42:999");
##var daytime_08 := daytime("20:48:42:999");
#	daytime_09:= daytime("17:53:38:999");
##var daytime_09 := daytime("17:53:38:999");
#	daytime_10:= daytime("13:15:34:999");
##var daytime_10 := daytime("13:15:34:999");
#	daytime_11:= daytime("07:34:27.999");
##var daytime_11 := daytime("07:34:27.999");
#	daytime_12:= daytime("23:59:59:999");
##var daytime_12 := daytime("23:59:59:999");
#	daytime_13:= daytime("01:00:03.999");
##var daytime_13 := daytime("01:00:03.999");
#	daytime_14:= daytime("23:59:59.999");
##var daytime_14 := daytime("23:59:59.999");
### nil daytimes
#	daytime_15:= daytime(24,59,59,999);
##var daytime_15 := daytime(24,59,59,999);
#	daytime_16:= daytime(23,60,59,999);
##var daytime_16 := daytime(23,60,59,999);
#	daytime_17:= daytime(23,59,60,999);
##var daytime_17 := daytime(23,59,60,999);
#	daytime_18:= daytime(23,59,60,1000);
##var daytime_18 := daytime(23,59,60,1000);
#	daytime_19:= daytime("nil");
##var daytime_19 := daytime("nil");
##
#	daytime_bat:= new(:oid,:daytime);
##var daytime_bat := new(oid,daytime);
#	insert(daytime_bat,00@0,daytime_00);
#	insert(daytime_bat,01@0,daytime_01);
#	insert(daytime_bat,02@0,daytime_02);
##daytime_bat.insert(00@0, daytime_00).insert(01@0, daytime_01).insert(02@0, daytime_02);
#	insert(daytime_bat,03@0,daytime_03);
#	insert(daytime_bat,04@0,daytime_04);
#	insert(daytime_bat,05@0,daytime_05);
##daytime_bat.insert(03@0, daytime_03).insert(04@0, daytime_04).insert(05@0, daytime_05);
#	insert(daytime_bat,06@0,daytime_06);
#	insert(daytime_bat,07@0,daytime_07);
#	insert(daytime_bat,08@0,daytime_08);
##daytime_bat.insert(06@0, daytime_06).insert(07@0, daytime_07).insert(08@0, daytime_08);
#	insert(daytime_bat,09@0,daytime_09);
#	insert(daytime_bat,10@0,daytime_10);
#	insert(daytime_bat,11@0,daytime_11);
##daytime_bat.insert(09@0, daytime_09).insert(10@0, daytime_10).insert(11@0, daytime_11);
#	insert(daytime_bat,12@0,daytime_12);
#	insert(daytime_bat,13@0,daytime_13);
#	insert(daytime_bat,14@0,daytime_14);
##daytime_bat.insert(12@0, daytime_12).insert(13@0, daytime_13).insert(14@0, daytime_14);
#	insert(daytime_bat,15@0,daytime_15);
#	insert(daytime_bat,16@0,daytime_16);
#	insert(daytime_bat,17@0,daytime_17);
##daytime_bat.insert(15@0, daytime_15).insert(16@0, daytime_16).insert(17@0, daytime_17);
#	insert(daytime_bat,18@0,daytime_18);
#	insert(daytime_bat,19@0,daytime_19);
##daytime_bat.insert(18@0, daytime_18).insert(19@0, daytime_19);
##
#	setColumn(daytime_bat,"daytime");
##print(daytime_bat.setColumn("daytime"),
#	bh_a := multiplex.script("hours",daytime_bat);
#	setColumn(bh_a,"hours");
##      [hours](daytime_bat).setColumn("hours"),
#	dh_a := multiplex.script("minutes",daytime_bat);
#	setColumn(dh_a,"minutes");
##      [minutes](daytime_bat).setColumn("minutes"),
#	fh_a := multiplex.script("seconds",daytime_bat);
#	setColumn(fh_a,"seconds");
##      [seconds](daytime_bat).setColumn("seconds"),
#	hh_a := multiplex.script("milliseconds",daytime_bat);
#	setColumn(hh_a,"milliseconds");
#print("daytime_bat,bh_a,dh_a,fh_a,hh_a");
#	jh_a := print(daytime_bat,bh_a,dh_a,fh_a,hh_a);
##      [milliseconds](daytime_bat).setColumn("milliseconds"));
##
##
##
###line 719 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
### create timestamps in bulk from the above bats with dates, daytimes and tzones
#	kh_a := multiplex.script("timestamp",date_bat,daytime_bat,tzone_bat);
#	timestamp_bat:=kh_a; bat.setWriteMode(kh_a);
##var timestamp_bat := [timestamp](date_bat,daytime_bat,tzone_bat).access(BAT_WRITE);
### KILL
### var timestamp_now := timestamp(epoch());
### timestamp_bat.insert(14@0, timestamp_now);
##
### test the timestamp operations
#	setColumn(timestamp_bat,"timestamp");
##print(timestamp_bat.setColumn("timestamp"),
#	mh_a := multiplex.script("date",timestamp_bat,tzone_bat);
#	setColumn(mh_a,"date");
##      [date](timestamp_bat,tzone_bat).setColumn("date"),
#	oh_a := multiplex.script("daytime",timestamp_bat,tzone_bat);
#	setColumn(oh_a,"daytime");
#	print(timestamp_bat,mh_a,oh_a);
##      [daytime](timestamp_bat,tzone_bat).setColumn("daytime"));
##
#	rh_a := setColumn(timestamp_bat,"timestamp");
##print(timestamp_bat.setColumn("timestamp"),
#	timezones:= bbp.bind("timezones");
#	print(timezones);
#	sh_a:tzone := algebra.find(timezones,"Wake Island");
#	th_a := multiplex.script("date",timestamp_bat,sh_a);
#	uh_a := setColumn(th_a,"Wake Island");
##      [date](timestamp_bat,algebra.find(timezones,"Wake Island")).setColumn("Wake Island"),
#	vh_a:tzone := algebra.find(timezones,"Wake Island");
#	wh_a := multiplex.script("daytime",timestamp_bat,vh_a);
##      [daytime](timestamp_bat,algebra.find(timezones,"Wake Island")),
#	xh_a:tzone := algebra.find(timezones,"American Samoa");
#	yh_a := multiplex.script("date",timestamp_bat,xh_a);
#	ai_a := setColumn(yh_a,"American Samoa");
##      [date](timestamp_bat,algebra.find(timezones,"American Samoa")).setColumn("American Samoa"),
#	bi_a:tzone := algebra.find(timezones,"American Samoa");
#	ci_a := multiplex.script("daytime",timestamp_bat,bi_a);
#	di_a := print(timestamp_bat,th_a,wh_a,yh_a,ci_a);
##      [daytime](timestamp_bat,algebra.find(timezones,"American Samoa")));
##
#	ei_a := *(60,1000);
#	fi_a := *(60,ei_a);
#	gi_a := *(23,fi_a);
#	hi_a := lng(gi_a);
#	timestamp_plus:= multiplex.script("add",timestamp_bat,hi_a);
##var timestamp_plus := [add](timestamp_bat, lng(23*60*60*1000));
#	ii_a := *(-60,1000);
#	ji_a := lng(ii_a);
#	timestamp_minus:= multiplex.script("add",timestamp_bat,ji_a);
##var timestamp_minus := [add](timestamp_bat, lng(-60*1000));
##
#	ki_a := setColumn(timestamp_bat,"timestamp");
##print(timestamp_bat.setColumn("timestamp"),
#	li_a := setColumn(timestamp_plus,"plus23");
##	timestamp_plus.setColumn("plus23"),
#	mi_a := setColumn(timestamp_minus,"min1");
##	timestamp_minus.setColumn("min1"),
#	ni_a := multiplex.script("diff",timestamp_plus,timestamp_minus);
#	oi_a := *(60,1000);
#	pi_a := *(60,oi_a);
#	qi_a := lng(pi_a);
#	ri_a := /(ni_a,qi_a);
#	si_a := setColumn(ri_a,"diff");
#	ti_a := print(timestamp_bat,timestamp_plus,timestamp_minus,ri_a);
##	[/]([diff](timestamp_plus, timestamp_minus),lng(60*60*1000)).setColumn("diff"));
##
#	ui_a:tzone := algebra.find(timezones,"West/Europe");
#	timestamp_eur:= multiplex.script("timestamp",date_seq,daytime_00,ui_a);
##var timestamp_eur := [timestamp](date_seq, daytime_00, algebra.find(timezones,"West/Europe"));
#	vi_a:tzone := algebra.find(timezones,"Andes/Brazil");
#	timestamp_bra:= multiplex.script("timestamp",date_seq,daytime_00,vi_a);
##var timestamp_bra := [timestamp](date_seq, daytime_00, algebra.find(timezones,"Andes/Brazil"));
##
#	wi_a := setColumn(date_seq,"date");
##print(date_seq.setColumn("date"), 
#	xi_a := multiplex.script("dayofweek",date_seq);
#	yi_a := multiplex.script("dayname",xi_a);
#	aj_a := setColumn(yi_a,"day");
##	[dayname]([dayofweek](date_seq)).setColumn("day"),
#	bj_a := setColumn(timestamp_eur,"West/Europe");
##	timestamp_eur.setColumn("West/Europe"),
#	cj_a:tzone := algebra.find(timezones,"West/Europe");
#	dj_a := multiplex.script("dst",timestamp_eur,cj_a);
#	ej_a := setColumn(dj_a,"dst");
##	[dst](timestamp_eur,algebra.find(timezones,"West/Europe")).setColumn("dst"),
#	fj_a := setColumn(timestamp_bra,"Andes/Brazil");
##	timestamp_bra.setColumn("Andes/Brazil"),
#	gj_a:tzone := algebra.find(timezones,"Andes/Brazil");
#	hj_a := multiplex.script("dst",timestamp_bra,gj_a);
#	ij_a := setColumn(hj_a,"dst");
#	jj_a := print(date_seq,yi_a,timestamp_eur,dj_a,timestamp_bra,hj_a);
##	[dst](timestamp_bra,algebra.find(timezones,"Andes/Brazil")).setColumn("dst"));
##
##quit;
##
##
###line 756 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
##
#
function user.main():int;	# 0  (main:int)
    rule_jan := mtime.rule("1st MON from start of JAN@01:15");	# 1 MTIMErule_fromstr (rule_jan:rule)<-($2:str)
    rule_mar := mtime.rule("first WEDNE on or after march 10@01:15");	# 2 MTIMErule_fromstr (rule_mar:rule)<-($4:str)
    rule_apr := mtime.rule("last THU on or before aPr 1@01:15");	# 3 MTIMErule_fromstr (rule_apr:rule)<-($6:str)
    rule_may := mtime.rule("MAY 26@01:15");	# 4 MTIMErule_fromstr (rule_may:rule)<-($8:str)
    rule_jun := mtime.rule("2nd TUE from end of june@01:15");	# 5 MTIMErule_fromstr (rule_jun:rule)<-($10:str)
    rule_jul := mtime.rule(7,1,1,75);	# 6 MTIMErule_create (rule_jul:rule)<-($12:int)($13:int)($13:int)($14:int)
    rule_aug := mtime.rule(8,-1,1,75);	# 7 MTIMErule_create (rule_aug:rule)<-($16:int)($17:int)($13:int)($14:int)
    rule_sep := mtime.rule(9,-10,3,75);	# 8 MTIMErule_create (rule_sep:rule)<-($19:int)($20:int)($21:int)($14:int)
    rule_oct := mtime.rule(10,31,0,75);	# 9 MTIMErule_create (rule_oct:rule)<-($23:int)($24:int)($25:int)($14:int)
    rule_nov := mtime.rule(11,-10,-4,75);	# 10 MTIMErule_create (rule_nov:rule)<-($27:int)($20:int)($28:int)($14:int)
    rule_dec := mtime.rule(12,-31,0,75);	# 11 MTIMErule_create (rule_dec:rule)<-($30:int)($31:int)($25:int)($14:int)
    rule_feb := mtime.rule("first fRiDaY on or after february 30@01:15");	# 12 MTIMErule_fromstr (rule_feb:rule)<-($33:str)
    rule_bat := bbp.new(:str,:rule,10);	# 13 CMDBATnewint (rule_bat:bat[:str,:rule])<-($35:str)($36:rule)($23:int)
    bat.insert(rule_bat,"jan",rule_jan);	# 14 BKCinsert_bun ($37:bat[:str,:rule])<-(rule_bat:bat[:str,:rule])($38:str)(rule_jan:rule)
    bat.insert(rule_bat,"feb",rule_feb);	# 15 BKCinsert_bun ($39:bat[:str,:rule])<-(rule_bat:bat[:str,:rule])($40:str)(rule_feb:rule)
    bat.insert(rule_bat,"mar",rule_mar);	# 16 BKCinsert_bun ($41:bat[:str,:rule])<-(rule_bat:bat[:str,:rule])($42:str)(rule_mar:rule)
    bat.insert(rule_bat,"apr",rule_apr);	# 17 BKCinsert_bun ($43:bat[:str,:rule])<-(rule_bat:bat[:str,:rule])($44:str)(rule_apr:rule)
    bat.insert(rule_bat,"may",rule_may);	# 18 BKCinsert_bun ($45:bat[:str,:rule])<-(rule_bat:bat[:str,:rule])($46:str)(rule_may:rule)
    bat.insert(rule_bat,"jun",rule_jun);	# 19 BKCinsert_bun ($47:bat[:str,:rule])<-(rule_bat:bat[:str,:rule])($48:str)(rule_jun:rule)
    bat.insert(rule_bat,"jul",rule_jul);	# 20 BKCinsert_bun ($49:bat[:str,:rule])<-(rule_bat:bat[:str,:rule])($50:str)(rule_jul:rule)
    bat.insert(rule_bat,"aug",rule_aug);	# 21 BKCinsert_bun ($51:bat[:str,:rule])<-(rule_bat:bat[:str,:rule])($52:str)(rule_aug:rule)
    bat.insert(rule_bat,"sep",rule_sep);	# 22 BKCinsert_bun ($53:bat[:str,:rule])<-(rule_bat:bat[:str,:rule])($54:str)(rule_sep:rule)
    bat.insert(rule_bat,"oct",rule_oct);	# 23 BKCinsert_bun ($55:bat[:str,:rule])<-(rule_bat:bat[:str,:rule])($56:str)(rule_oct:rule)
    bat.insert(rule_bat,"nov",rule_nov);	# 24 BKCinsert_bun ($57:bat[:str,:rule])<-(rule_bat:bat[:str,:rule])($58:str)(rule_nov:rule)
    bat.insert(rule_bat,"dec",rule_dec);	# 25 BKCinsert_bun ($59:bat[:str,:rule])<-(rule_bat:bat[:str,:rule])($60:str)(rule_dec:rule)
    ma_a := bat.setColumn(rule_bat,"rule");	# 26 BKCsetColumn (ma_a:bat[:str,:rule])<-(rule_bat:bat[:str,:rule])($62:str)
    $608 := bbp.new(:str,:int);	# 27 CMDBATnew ($608:bat[:str,:int])<-($609:str)($610:int)
barrier ($612,$613,$614):= chopper.newIterator(rule_bat);	# 28 CHPbunIterator ($612:lng)($613:str)($614:rule)<-(rule_bat:bat[:str,:rule]) jump 34
    $616 := mtime.month($614);	# 29 MTIMErule_extract_month ($616:int)<-($614:rule)
    bat.insert($608,$613,$616);	# 30 BKCinsert_bun ($617:bat[:str,:int])<-($608:bat[:str,:int])($613:str)($616:int)
catch MALexception;	# 31  (MALexception:str) jump 32
exit MALexception;	# 32  (MALexception:str)
    redo ($612,$613,$614):= chopper.hasMoreElements(rule_bat);	# 33 CHPbunHasMoreElements ($612:lng)($613:str)($614:rule)<-(rule_bat:bat[:str,:rule]) jump 29
exit ($612,$613,$614);	# 34  ($612:lng)($613:str)($614:rule)
    na_a := $608;	# 35  (na_a:bat[:str,:int])<-($608:bat[:str,:int])
    oa_a := bat.setColumn(na_a,"month");	# 36 BKCsetColumn (oa_a:bat[:str,:int])<-(na_a:bat[:str,:int])($66:str)
    $622 := bbp.new(:str,:int);	# 37 CMDBATnew ($622:bat[:str,:int])<-($623:str)($624:int)
barrier ($626,$627,$628):= chopper.newIterator(rule_bat);	# 38 CHPbunIterator ($626:lng)($627:str)($628:rule)<-(rule_bat:bat[:str,:rule]) jump 44
    $630 := mtime.weekday($628);	# 39 MTIMErule_extract_weekday ($630:int)<-($628:rule)
    bat.insert($622,$627,$630);	# 40 BKCinsert_bun ($631:bat[:str,:int])<-($622:bat[:str,:int])($627:str)($630:int)
catch MALexception;	# 41  (MALexception:str) jump 42
exit MALexception;	# 42  (MALexception:str)
    redo ($626,$627,$628):= chopper.hasMoreElements(rule_bat);	# 43 CHPbunHasMoreElements ($626:lng)($627:str)($628:rule)<-(rule_bat:bat[:str,:rule]) jump 39
exit ($626,$627,$628);	# 44  ($626:lng)($627:str)($628:rule)
    pa_a := $622;	# 45  (pa_a:bat[:str,:int])<-($622:bat[:str,:int])
    qa_a := bat.setColumn(pa_a,"weekday");	# 46 BKCsetColumn (qa_a:bat[:str,:int])<-(pa_a:bat[:str,:int])($70:str)
    $636 := bbp.new(:str,:int);	# 47 CMDBATnew ($636:bat[:str,:int])<-($637:str)($638:int)
barrier ($640,$641,$642):= chopper.newIterator(rule_bat);	# 48 CHPbunIterator ($640:lng)($641:str)($642:rule)<-(rule_bat:bat[:str,:rule]) jump 54
    $644 := mtime.day($642);	# 49 MTIMErule_extract_day ($644:int)<-($642:rule)
    bat.insert($636,$641,$644);	# 50 BKCinsert_bun ($645:bat[:str,:int])<-($636:bat[:str,:int])($641:str)($644:int)
catch MALexception;	# 51  (MALexception:str) jump 52
exit MALexception;	# 52  (MALexception:str)
    redo ($640,$641,$642):= chopper.hasMoreElements(rule_bat);	# 53 CHPbunHasMoreElements ($640:lng)($641:str)($642:rule)<-(rule_bat:bat[:str,:rule]) jump 49
exit ($640,$641,$642);	# 54  ($640:lng)($641:str)($642:rule)
    ra_a := $636;	# 55  (ra_a:bat[:str,:int])<-($636:bat[:str,:int])
    sa_a := bat.setColumn(ra_a,"day");	# 56 BKCsetColumn (sa_a:bat[:str,:int])<-(ra_a:bat[:str,:int])($74:str)
    $650 := bbp.new(:str,:int);	# 57 CMDBATnew ($650:bat[:str,:int])<-($651:str)($652:int)
barrier ($654,$655,$656):= chopper.newIterator(rule_bat);	# 58 CHPbunIterator ($654:lng)($655:str)($656:rule)<-(rule_bat:bat[:str,:rule]) jump 64
    $658 := mtime.minutes($656);	# 59 MTIMErule_extract_minutes ($658:int)<-($656:rule)
    bat.insert($650,$655,$658);	# 60 BKCinsert_bun ($659:bat[:str,:int])<-($650:bat[:str,:int])($655:str)($658:int)
catch MALexception;	# 61  (MALexception:str) jump 62
exit MALexception;	# 62  (MALexception:str)
    redo ($654,$655,$656):= chopper.hasMoreElements(rule_bat);	# 63 CHPbunHasMoreElements ($654:lng)($655:str)($656:rule)<-(rule_bat:bat[:str,:rule]) jump 59
exit ($654,$655,$656);	# 64  ($654:lng)($655:str)($656:rule)
    ta_a := $650;	# 65  (ta_a:bat[:str,:int])<-($650:bat[:str,:int])
    ua_a := bat.setColumn(ta_a,"minutes");	# 66 BKCsetColumn (ua_a:bat[:str,:int])<-(ta_a:bat[:str,:int])($78:str)
    io.print("rule_bat,na_a,pa_a,ra_a,ta_a");	# 67 IOprint_val ($79:int)<-($80:str)
    va_a := io.print(rule_bat,na_a,pa_a,ra_a,ta_a);	# 68 IOtable (va_a:int)<-(rule_bat:bat[:str,:rule])(na_a:bat[:str,:int])(pa_a:bat[:str,:int])(ra_a:bat[:str,:int])(ta_a:bat[:str,:int])
    bat.setColumn(rule_bat,"rule");	# 69 BKCsetColumn ($82:bat[:str,:rule])<-(rule_bat:bat[:str,:rule])($62:str)
    $664 := bbp.new(:str,:date);	# 70 CMDBATnew ($664:bat[:str,:date])<-($665:str)($666:date)
barrier ($668,$669,$670):= chopper.newIterator(rule_bat);	# 71 CHPbunIterator ($668:lng)($669:str)($670:rule)<-(rule_bat:bat[:str,:rule]) jump 77
    $672 := mtime.compute($670,2001);	# 72 MTIMEcompute_rule_foryear ($672:date)<-($670:rule)($85:int)
    bat.insert($664,$669,$672);	# 73 BKCinsert_bun ($673:bat[:str,:date])<-($664:bat[:str,:date])($669:str)($672:date)
catch MALexception;	# 74  (MALexception:str) jump 75
exit MALexception;	# 75  (MALexception:str)
    redo ($668,$669,$670):= chopper.hasMoreElements(rule_bat);	# 76 CHPbunHasMoreElements ($668:lng)($669:str)($670:rule)<-(rule_bat:bat[:str,:rule]) jump 72
exit ($668,$669,$670);	# 77  ($668:lng)($669:str)($670:rule)
    xa_a := $664;	# 78  (xa_a:bat[:str,:date])<-($664:bat[:str,:date])
    ya_a := bat.setColumn(xa_a,"2001");	# 79 BKCsetColumn (ya_a:bat[:str,:date])<-(xa_a:bat[:str,:date])($87:str)
    $678 := bbp.new(:str,:date);	# 80 CMDBATnew ($678:bat[:str,:date])<-($679:str)($680:date)
barrier ($682,$683,$684):= chopper.newIterator(rule_bat);	# 81 CHPbunIterator ($682:lng)($683:str)($684:rule)<-(rule_bat:bat[:str,:rule]) jump 87
    $686 := mtime.compute($684,2001);	# 82 MTIMEcompute_rule_foryear ($686:date)<-($684:rule)($85:int)
    bat.insert($678,$683,$686);	# 83 BKCinsert_bun ($687:bat[:str,:date])<-($678:bat[:str,:date])($683:str)($686:date)
catch MALexception;	# 84  (MALexception:str) jump 85
exit MALexception;	# 85  (MALexception:str)
    redo ($682,$683,$684):= chopper.hasMoreElements(rule_bat);	# 86 CHPbunHasMoreElements ($682:lng)($683:str)($684:rule)<-(rule_bat:bat[:str,:rule]) jump 82
exit ($682,$683,$684);	# 87  ($682:lng)($683:str)($684:rule)
    ab_a := $678;	# 88  (ab_a:bat[:str,:date])<-($678:bat[:str,:date])
    $692 := bbp.new(:str,:int);	# 89 CMDBATnew ($692:bat[:str,:int])<-($693:str)($694:int)
barrier ($696,$697,$698):= chopper.newIterator(ab_a);	# 90 CHPbunIterator ($696:lng)($697:str)($698:date)<-(ab_a:bat[:str,:date]) jump 96
    $700 := mtime.dayofweek($698);	# 91 MTIMEdate_extract_dayofweek ($700:int)<-($698:date)
    bat.insert($692,$697,$700);	# 92 BKCinsert_bun ($701:bat[:str,:int])<-($692:bat[:str,:int])($697:str)($700:int)
catch MALexception;	# 93  (MALexception:str) jump 94
exit MALexception;	# 94  (MALexception:str)
    redo ($696,$697,$698):= chopper.hasMoreElements(ab_a);	# 95 CHPbunHasMoreElements ($696:lng)($697:str)($698:date)<-(ab_a:bat[:str,:date]) jump 91
exit ($696,$697,$698);	# 96  ($696:lng)($697:str)($698:date)
    bb_a := $692;	# 97  (bb_a:bat[:str,:int])<-($692:bat[:str,:int])
    $706 := bbp.new(:str,:str);	# 98 CMDBATnew ($706:bat[:str,:str])<-($707:str)($708:str)
barrier ($710,$711,$712):= chopper.newIterator(bb_a);	# 99 CHPbunIterator ($710:lng)($711:str)($712:int)<-(bb_a:bat[:str,:int]) jump 105
    $714 := mtime.dayname($712);	# 100 MTIMEday_to_str ($714:str)<-($712:int)
    bat.insert($706,$711,$714);	# 101 BKCinsert_bun ($715:bat[:str,:str])<-($706:bat[:str,:str])($711:str)($714:str)
catch MALexception;	# 102  (MALexception:str) jump 103
exit MALexception;	# 103  (MALexception:str)
    redo ($710,$711,$712):= chopper.hasMoreElements(bb_a);	# 104 CHPbunHasMoreElements ($710:lng)($711:str)($712:int)<-(bb_a:bat[:str,:int]) jump 100
exit ($710,$711,$712);	# 105  ($710:lng)($711:str)($712:int)
    cb_a := $706;	# 106  (cb_a:bat[:str,:str])<-($706:bat[:str,:str])
    bat.setColumn(cb_a,"2001");	# 107 BKCsetColumn ($93:bat[:str,:str])<-(cb_a:bat[:str,:str])($87:str)
    $720 := bbp.new(:str,:date);	# 108 CMDBATnew ($720:bat[:str,:date])<-($721:str)($722:date)
barrier ($724,$725,$726):= chopper.newIterator(rule_bat);	# 109 CHPbunIterator ($724:lng)($725:str)($726:rule)<-(rule_bat:bat[:str,:rule]) jump 115
    $728 := mtime.compute($726,1999);	# 110 MTIMEcompute_rule_foryear ($728:date)<-($726:rule)($95:int)
    bat.insert($720,$725,$728);	# 111 BKCinsert_bun ($729:bat[:str,:date])<-($720:bat[:str,:date])($725:str)($728:date)
catch MALexception;	# 112  (MALexception:str) jump 113
exit MALexception;	# 113  (MALexception:str)
    redo ($724,$725,$726):= chopper.hasMoreElements(rule_bat);	# 114 CHPbunHasMoreElements ($724:lng)($725:str)($726:rule)<-(rule_bat:bat[:str,:rule]) jump 110
exit ($724,$725,$726);	# 115  ($724:lng)($725:str)($726:rule)
    eb_a := $720;	# 116  (eb_a:bat[:str,:date])<-($720:bat[:str,:date])
    bat.setColumn(eb_a,"1999");	# 117 BKCsetColumn ($96:bat[:str,:date])<-(eb_a:bat[:str,:date])($97:str)
    $734 := bbp.new(:str,:date);	# 118 CMDBATnew ($734:bat[:str,:date])<-($735:str)($736:date)
barrier ($738,$739,$740):= chopper.newIterator(rule_bat);	# 119 CHPbunIterator ($738:lng)($739:str)($740:rule)<-(rule_bat:bat[:str,:rule]) jump 125
    $742 := mtime.compute($740,1999);	# 120 MTIMEcompute_rule_foryear ($742:date)<-($740:rule)($95:int)
    bat.insert($734,$739,$742);	# 121 BKCinsert_bun ($743:bat[:str,:date])<-($734:bat[:str,:date])($739:str)($742:date)
catch MALexception;	# 122  (MALexception:str) jump 123
exit MALexception;	# 123  (MALexception:str)
    redo ($738,$739,$740):= chopper.hasMoreElements(rule_bat);	# 124 CHPbunHasMoreElements ($738:lng)($739:str)($740:rule)<-(rule_bat:bat[:str,:rule]) jump 120
exit ($738,$739,$740);	# 125  ($738:lng)($739:str)($740:rule)
    gb_a := $734;	# 126  (gb_a:bat[:str,:date])<-($734:bat[:str,:date])
    $748 := bbp.new(:str,:int);	# 127 CMDBATnew ($748:bat[:str,:int])<-($749:str)($750:int)
barrier ($752,$753,$754):= chopper.newIterator(gb_a);	# 128 CHPbunIterator ($752:lng)($753:str)($754:date)<-(gb_a:bat[:str,:date]) jump 134
    $756 := mtime.dayofweek($754);	# 129 MTIMEdate_extract_dayofweek ($756:int)<-($754:date)
    bat.insert($748,$753,$756);	# 130 BKCinsert_bun ($757:bat[:str,:int])<-($748:bat[:str,:int])($753:str)($756:int)
catch MALexception;	# 131  (MALexception:str) jump 132
exit MALexception;	# 132  (MALexception:str)
    redo ($752,$753,$754):= chopper.hasMoreElements(gb_a);	# 133 CHPbunHasMoreElements ($752:lng)($753:str)($754:date)<-(gb_a:bat[:str,:date]) jump 129
exit ($752,$753,$754);	# 134  ($752:lng)($753:str)($754:date)
    hb_a := $748;	# 135  (hb_a:bat[:str,:int])<-($748:bat[:str,:int])
    $762 := bbp.new(:str,:str);	# 136 CMDBATnew ($762:bat[:str,:str])<-($763:str)($764:str)
barrier ($766,$767,$768):= chopper.newIterator(hb_a);	# 137 CHPbunIterator ($766:lng)($767:str)($768:int)<-(hb_a:bat[:str,:int]) jump 143
    $770 := mtime.dayname($768);	# 138 MTIMEday_to_str ($770:str)<-($768:int)
    bat.insert($762,$767,$770);	# 139 BKCinsert_bun ($771:bat[:str,:str])<-($762:bat[:str,:str])($767:str)($770:str)
catch MALexception;	# 140  (MALexception:str) jump 141
exit MALexception;	# 141  (MALexception:str)
    redo ($766,$767,$768):= chopper.hasMoreElements(hb_a);	# 142 CHPbunHasMoreElements ($766:lng)($767:str)($768:int)<-(hb_a:bat[:str,:int]) jump 138
exit ($766,$767,$768);	# 143  ($766:lng)($767:str)($768:int)
    ib_a := $762;	# 144  (ib_a:bat[:str,:str])<-($762:bat[:str,:str])
    bat.setColumn(ib_a,"1999");	# 145 BKCsetColumn ($101:bat[:str,:str])<-(ib_a:bat[:str,:str])($97:str)
    $776 := bbp.new(:str,:date);	# 146 CMDBATnew ($776:bat[:str,:date])<-($777:str)($778:date)
barrier ($780,$781,$782):= chopper.newIterator(rule_bat);	# 147 CHPbunIterator ($780:lng)($781:str)($782:rule)<-(rule_bat:bat[:str,:rule]) jump 153
    $784 := mtime.compute($782,1992);	# 148 MTIMEcompute_rule_foryear ($784:date)<-($782:rule)($103:int)
    bat.insert($776,$781,$784);	# 149 BKCinsert_bun ($785:bat[:str,:date])<-($776:bat[:str,:date])($781:str)($784:date)
catch MALexception;	# 150  (MALexception:str) jump 151
exit MALexception;	# 151  (MALexception:str)
    redo ($780,$781,$782):= chopper.hasMoreElements(rule_bat);	# 152 CHPbunHasMoreElements ($780:lng)($781:str)($782:rule)<-(rule_bat:bat[:str,:rule]) jump 148
exit ($780,$781,$782);	# 153  ($780:lng)($781:str)($782:rule)
    kb_a := $776;	# 154  (kb_a:bat[:str,:date])<-($776:bat[:str,:date])
    bat.setColumn(kb_a,"1992");	# 155 BKCsetColumn ($104:bat[:str,:date])<-(kb_a:bat[:str,:date])($105:str)
    $790 := bbp.new(:str,:date);	# 156 CMDBATnew ($790:bat[:str,:date])<-($791:str)($792:date)
barrier ($794,$795,$796):= chopper.newIterator(rule_bat);	# 157 CHPbunIterator ($794:lng)($795:str)($796:rule)<-(rule_bat:bat[:str,:rule]) jump 163
    $798 := mtime.compute($796,1992);	# 158 MTIMEcompute_rule_foryear ($798:date)<-($796:rule)($103:int)
    bat.insert($790,$795,$798);	# 159 BKCinsert_bun ($799:bat[:str,:date])<-($790:bat[:str,:date])($795:str)($798:date)
catch MALexception;	# 160  (MALexception:str) jump 161
exit MALexception;	# 161  (MALexception:str)
    redo ($794,$795,$796):= chopper.hasMoreElements(rule_bat);	# 162 CHPbunHasMoreElements ($794:lng)($795:str)($796:rule)<-(rule_bat:bat[:str,:rule]) jump 158
exit ($794,$795,$796);	# 163  ($794:lng)($795:str)($796:rule)
    mb_a := $790;	# 164  (mb_a:bat[:str,:date])<-($790:bat[:str,:date])
    $804 := bbp.new(:str,:int);	# 165 CMDBATnew ($804:bat[:str,:int])<-($805:str)($806:int)
barrier ($808,$809,$810):= chopper.newIterator(mb_a);	# 166 CHPbunIterator ($808:lng)($809:str)($810:date)<-(mb_a:bat[:str,:date]) jump 172
    $812 := mtime.dayofweek($810);	# 167 MTIMEdate_extract_dayofweek ($812:int)<-($810:date)
    bat.insert($804,$809,$812);	# 168 BKCinsert_bun ($813:bat[:str,:int])<-($804:bat[:str,:int])($809:str)($812:int)
catch MALexception;	# 169  (MALexception:str) jump 170
exit MALexception;	# 170  (MALexception:str)
    redo ($808,$809,$810):= chopper.hasMoreElements(mb_a);	# 171 CHPbunHasMoreElements ($808:lng)($809:str)($810:date)<-(mb_a:bat[:str,:date]) jump 167
exit ($808,$809,$810);	# 172  ($808:lng)($809:str)($810:date)
    nb_a := $804;	# 173  (nb_a:bat[:str,:int])<-($804:bat[:str,:int])
    $818 := bbp.new(:str,:str);	# 174 CMDBATnew ($818:bat[:str,:str])<-($819:str)($820:str)
barrier ($822,$823,$824):= chopper.newIterator(nb_a);	# 175 CHPbunIterator ($822:lng)($823:str)($824:int)<-(nb_a:bat[:str,:int]) jump 181
    $826 := mtime.dayname($824);	# 176 MTIMEday_to_str ($826:str)<-($824:int)
    bat.insert($818,$823,$826);	# 177 BKCinsert_bun ($827:bat[:str,:str])<-($818:bat[:str,:str])($823:str)($826:str)
catch MALexception;	# 178  (MALexception:str) jump 179
exit MALexception;	# 179  (MALexception:str)
    redo ($822,$823,$824):= chopper.hasMoreElements(nb_a);	# 180 CHPbunHasMoreElements ($822:lng)($823:str)($824:int)<-(nb_a:bat[:str,:int]) jump 176
exit ($822,$823,$824);	# 181  ($822:lng)($823:str)($824:int)
    ob_a := $818;	# 182  (ob_a:bat[:str,:str])<-($818:bat[:str,:str])
    bat.setColumn(ob_a,"1992");	# 183 BKCsetColumn ($109:bat[:str,:str])<-(ob_a:bat[:str,:str])($105:str)
    io.print("rule_bat,xa_a,cb_a,eb_a,ib_a,kb_a,ob_a");	# 184 IOprint_val ($110:int)<-($111:str)
    qb_a := io.print(rule_bat,xa_a,cb_a,eb_a,ib_a,kb_a,ob_a);	# 185 IOtable (qb_a:int)<-(rule_bat:bat[:str,:rule])(xa_a:bat[:str,:date])(cb_a:bat[:str,:str])(eb_a:bat[:str,:date])(ib_a:bat[:str,:str])(kb_a:bat[:str,:date])(ob_a:bat[:str,:str])
    rb_a := bat.setColumn(rule_bat,"rule");	# 186 BKCsetColumn (rb_a:bat[:str,:rule])<-(rule_bat:bat[:str,:rule])($114:str)
    $832 := bbp.new(:str,:date);	# 187 CMDBATnew ($832:bat[:str,:date])<-($833:str)($834:date)
barrier ($836,$837,$838):= chopper.newIterator(rule_bat);	# 188 CHPbunIterator ($836:lng)($837:str)($838:rule)<-(rule_bat:bat[:str,:rule]) jump 194
    $840 := mtime.compute($838,1572);	# 189 MTIMEcompute_rule_foryear ($840:date)<-($838:rule)($116:int)
    bat.insert($832,$837,$840);	# 190 BKCinsert_bun ($841:bat[:str,:date])<-($832:bat[:str,:date])($837:str)($840:date)
catch MALexception;	# 191  (MALexception:str) jump 192
exit MALexception;	# 192  (MALexception:str)
    redo ($836,$837,$838):= chopper.hasMoreElements(rule_bat);	# 193 CHPbunHasMoreElements ($836:lng)($837:str)($838:rule)<-(rule_bat:bat[:str,:rule]) jump 189
exit ($836,$837,$838);	# 194  ($836:lng)($837:str)($838:rule)
    sb_a := $832;	# 195  (sb_a:bat[:str,:date])<-($832:bat[:str,:date])
    tb_a := bat.setColumn(sb_a,"1572");	# 196 BKCsetColumn (tb_a:bat[:str,:date])<-(sb_a:bat[:str,:date])($118:str)
    $846 := bbp.new(:str,:date);	# 197 CMDBATnew ($846:bat[:str,:date])<-($847:str)($848:date)
barrier ($850,$851,$852):= chopper.newIterator(rule_bat);	# 198 CHPbunIterator ($850:lng)($851:str)($852:rule)<-(rule_bat:bat[:str,:rule]) jump 204
    $854 := mtime.compute($852,1572);	# 199 MTIMEcompute_rule_foryear ($854:date)<-($852:rule)($116:int)
    bat.insert($846,$851,$854);	# 200 BKCinsert_bun ($855:bat[:str,:date])<-($846:bat[:str,:date])($851:str)($854:date)
catch MALexception;	# 201  (MALexception:str) jump 202
exit MALexception;	# 202  (MALexception:str)
    redo ($850,$851,$852):= chopper.hasMoreElements(rule_bat);	# 203 CHPbunHasMoreElements ($850:lng)($851:str)($852:rule)<-(rule_bat:bat[:str,:rule]) jump 199
exit ($850,$851,$852);	# 204  ($850:lng)($851:str)($852:rule)
    ub_a := $846;	# 205  (ub_a:bat[:str,:date])<-($846:bat[:str,:date])
    $860 := bbp.new(:str,:int);	# 206 CMDBATnew ($860:bat[:str,:int])<-($861:str)($862:int)
barrier ($864,$865,$866):= chopper.newIterator(ub_a);	# 207 CHPbunIterator ($864:lng)($865:str)($866:date)<-(ub_a:bat[:str,:date]) jump 213
    $868 := mtime.dayofweek($866);	# 208 MTIMEdate_extract_dayofweek ($868:int)<-($866:date)
    bat.insert($860,$865,$868);	# 209 BKCinsert_bun ($869:bat[:str,:int])<-($860:bat[:str,:int])($865:str)($868:int)
catch MALexception;	# 210  (MALexception:str) jump 211
exit MALexception;	# 211  (MALexception:str)
    redo ($864,$865,$866):= chopper.hasMoreElements(ub_a);	# 212 CHPbunHasMoreElements ($864:lng)($865:str)($866:date)<-(ub_a:bat[:str,:date]) jump 208
exit ($864,$865,$866);	# 213  ($864:lng)($865:str)($866:date)
    vb_a := $860;	# 214  (vb_a:bat[:str,:int])<-($860:bat[:str,:int])
    $874 := bbp.new(:str,:str);	# 215 CMDBATnew ($874:bat[:str,:str])<-($875:str)($876:str)
barrier ($878,$879,$880):= chopper.newIterator(vb_a);	# 216 CHPbunIterator ($878:lng)($879:str)($880:int)<-(vb_a:bat[:str,:int]) jump 222
    $882 := mtime.dayname($880);	# 217 MTIMEday_to_str ($882:str)<-($880:int)
    bat.insert($874,$879,$882);	# 218 BKCinsert_bun ($883:bat[:str,:str])<-($874:bat[:str,:str])($879:str)($882:str)
catch MALexception;	# 219  (MALexception:str) jump 220
exit MALexception;	# 220  (MALexception:str)
    redo ($878,$879,$880):= chopper.hasMoreElements(vb_a);	# 221 CHPbunHasMoreElements ($878:lng)($879:str)($880:int)<-(vb_a:bat[:str,:int]) jump 217
exit ($878,$879,$880);	# 222  ($878:lng)($879:str)($880:int)
    wb_a := $874;	# 223  (wb_a:bat[:str,:str])<-($874:bat[:str,:str])
    xb_a := bat.setColumn(wb_a,"1572");	# 224 BKCsetColumn (xb_a:bat[:str,:str])<-(wb_a:bat[:str,:str])($118:str)
    $888 := bbp.new(:str,:date);	# 225 CMDBATnew ($888:bat[:str,:date])<-($889:str)($890:date)
barrier ($892,$893,$894):= chopper.newIterator(rule_bat);	# 226 CHPbunIterator ($892:lng)($893:str)($894:rule)<-(rule_bat:bat[:str,:rule]) jump 232
    $896 := mtime.compute($894,1);	# 227 MTIMEcompute_rule_foryear ($896:date)<-($894:rule)($125:int)
    bat.insert($888,$893,$896);	# 228 BKCinsert_bun ($897:bat[:str,:date])<-($888:bat[:str,:date])($893:str)($896:date)
catch MALexception;	# 229  (MALexception:str) jump 230
exit MALexception;	# 230  (MALexception:str)
    redo ($892,$893,$894):= chopper.hasMoreElements(rule_bat);	# 231 CHPbunHasMoreElements ($892:lng)($893:str)($894:rule)<-(rule_bat:bat[:str,:rule]) jump 227
exit ($892,$893,$894);	# 232  ($892:lng)($893:str)($894:rule)
    yb_a := $888;	# 233  (yb_a:bat[:str,:date])<-($888:bat[:str,:date])
    ac_a := bat.setColumn(yb_a,"1");	# 234 BKCsetColumn (ac_a:bat[:str,:date])<-(yb_a:bat[:str,:date])($127:str)
    $902 := bbp.new(:str,:date);	# 235 CMDBATnew ($902:bat[:str,:date])<-($903:str)($904:date)
barrier ($906,$907,$908):= chopper.newIterator(rule_bat);	# 236 CHPbunIterator ($906:lng)($907:str)($908:rule)<-(rule_bat:bat[:str,:rule]) jump 242
    $910 := mtime.compute($908,1);	# 237 MTIMEcompute_rule_foryear ($910:date)<-($908:rule)($125:int)
    bat.insert($902,$907,$910);	# 238 BKCinsert_bun ($911:bat[:str,:date])<-($902:bat[:str,:date])($907:str)($910:date)
catch MALexception;	# 239  (MALexception:str) jump 240
exit MALexception;	# 240  (MALexception:str)
    redo ($906,$907,$908):= chopper.hasMoreElements(rule_bat);	# 241 CHPbunHasMoreElements ($906:lng)($907:str)($908:rule)<-(rule_bat:bat[:str,:rule]) jump 237
exit ($906,$907,$908);	# 242  ($906:lng)($907:str)($908:rule)
    bc_a := $902;	# 243  (bc_a:bat[:str,:date])<-($902:bat[:str,:date])
    $916 := bbp.new(:str,:int);	# 244 CMDBATnew ($916:bat[:str,:int])<-($917:str)($918:int)
barrier ($920,$921,$922):= chopper.newIterator(bc_a);	# 245 CHPbunIterator ($920:lng)($921:str)($922:date)<-(bc_a:bat[:str,:date]) jump 251
    $924 := mtime.dayofweek($922);	# 246 MTIMEdate_extract_dayofweek ($924:int)<-($922:date)
    bat.insert($916,$921,$924);	# 247 BKCinsert_bun ($925:bat[:str,:int])<-($916:bat[:str,:int])($921:str)($924:int)
catch MALexception;	# 248  (MALexception:str) jump 249
exit MALexception;	# 249  (MALexception:str)
    redo ($920,$921,$922):= chopper.hasMoreElements(bc_a);	# 250 CHPbunHasMoreElements ($920:lng)($921:str)($922:date)<-(bc_a:bat[:str,:date]) jump 246
exit ($920,$921,$922);	# 251  ($920:lng)($921:str)($922:date)
    cc_a := $916;	# 252  (cc_a:bat[:str,:int])<-($916:bat[:str,:int])
    $930 := bbp.new(:str,:str);	# 253 CMDBATnew ($930:bat[:str,:str])<-($931:str)($932:str)
barrier ($934,$935,$936):= chopper.newIterator(cc_a);	# 254 CHPbunIterator ($934:lng)($935:str)($936:int)<-(cc_a:bat[:str,:int]) jump 260
    $938 := mtime.dayname($936);	# 255 MTIMEday_to_str ($938:str)<-($936:int)
    bat.insert($930,$935,$938);	# 256 BKCinsert_bun ($939:bat[:str,:str])<-($930:bat[:str,:str])($935:str)($938:str)
catch MALexception;	# 257  (MALexception:str) jump 258
exit MALexception;	# 258  (MALexception:str)
    redo ($934,$935,$936):= chopper.hasMoreElements(cc_a);	# 259 CHPbunHasMoreElements ($934:lng)($935:str)($936:int)<-(cc_a:bat[:str,:int]) jump 255
exit ($934,$935,$936);	# 260  ($934:lng)($935:str)($936:int)
    dc_a := $930;	# 261  (dc_a:bat[:str,:str])<-($930:bat[:str,:str])
    ec_a := bat.setColumn(dc_a,"1");	# 262 BKCsetColumn (ec_a:bat[:str,:str])<-(dc_a:bat[:str,:str])($127:str)
    $944 := bbp.new(:str,:date);	# 263 CMDBATnew ($944:bat[:str,:date])<-($945:str)($946:date)
barrier ($948,$949,$950):= chopper.newIterator(rule_bat);	# 264 CHPbunIterator ($948:lng)($949:str)($950:rule)<-(rule_bat:bat[:str,:rule]) jump 270
    $952 := mtime.compute($950,-2000);	# 265 MTIMEcompute_rule_foryear ($952:date)<-($950:rule)($135:int)
    bat.insert($944,$949,$952);	# 266 BKCinsert_bun ($953:bat[:str,:date])<-($944:bat[:str,:date])($949:str)($952:date)
catch MALexception;	# 267  (MALexception:str) jump 268
exit MALexception;	# 268  (MALexception:str)
    redo ($948,$949,$950):= chopper.hasMoreElements(rule_bat);	# 269 CHPbunHasMoreElements ($948:lng)($949:str)($950:rule)<-(rule_bat:bat[:str,:rule]) jump 265
exit ($948,$949,$950);	# 270  ($948:lng)($949:str)($950:rule)
    fc_a := $944;	# 271  (fc_a:bat[:str,:date])<-($944:bat[:str,:date])
    gc_a := bat.setColumn(fc_a,"-2000");	# 272 BKCsetColumn (gc_a:bat[:str,:date])<-(fc_a:bat[:str,:date])($137:str)
    $958 := bbp.new(:str,:date);	# 273 CMDBATnew ($958:bat[:str,:date])<-($959:str)($960:date)
barrier ($962,$963,$964):= chopper.newIterator(rule_bat);	# 274 CHPbunIterator ($962:lng)($963:str)($964:rule)<-(rule_bat:bat[:str,:rule]) jump 280
    $966 := mtime.compute($964,-2000);	# 275 MTIMEcompute_rule_foryear ($966:date)<-($964:rule)($135:int)
    bat.insert($958,$963,$966);	# 276 BKCinsert_bun ($967:bat[:str,:date])<-($958:bat[:str,:date])($963:str)($966:date)
catch MALexception;	# 277  (MALexception:str) jump 278
exit MALexception;	# 278  (MALexception:str)
    redo ($962,$963,$964):= chopper.hasMoreElements(rule_bat);	# 279 CHPbunHasMoreElements ($962:lng)($963:str)($964:rule)<-(rule_bat:bat[:str,:rule]) jump 275
exit ($962,$963,$964);	# 280  ($962:lng)($963:str)($964:rule)
    hc_a := $958;	# 281  (hc_a:bat[:str,:date])<-($958:bat[:str,:date])
    $972 := bbp.new(:str,:int);	# 282 CMDBATnew ($972:bat[:str,:int])<-($973:str)($974:int)
barrier ($976,$977,$978):= chopper.newIterator(hc_a);	# 283 CHPbunIterator ($976:lng)($977:str)($978:date)<-(hc_a:bat[:str,:date]) jump 289
    $980 := mtime.dayofweek($978);	# 284 MTIMEdate_extract_dayofweek ($980:int)<-($978:date)
    bat.insert($972,$977,$980);	# 285 BKCinsert_bun ($981:bat[:str,:int])<-($972:bat[:str,:int])($977:str)($980:int)
catch MALexception;	# 286  (MALexception:str) jump 287
exit MALexception;	# 287  (MALexception:str)
    redo ($976,$977,$978):= chopper.hasMoreElements(hc_a);	# 288 CHPbunHasMoreElements ($976:lng)($977:str)($978:date)<-(hc_a:bat[:str,:date]) jump 284
exit ($976,$977,$978);	# 289  ($976:lng)($977:str)($978:date)
    ic_a := $972;	# 290  (ic_a:bat[:str,:int])<-($972:bat[:str,:int])
    $986 := bbp.new(:str,:str);	# 291 CMDBATnew ($986:bat[:str,:str])<-($987:str)($988:str)
barrier ($990,$991,$992):= chopper.newIterator(ic_a);	# 292 CHPbunIterator ($990:lng)($991:str)($992:int)<-(ic_a:bat[:str,:int]) jump 298
    $994 := mtime.dayname($992);	# 293 MTIMEday_to_str ($994:str)<-($992:int)
    bat.insert($986,$991,$994);	# 294 BKCinsert_bun ($995:bat[:str,:str])<-($986:bat[:str,:str])($991:str)($994:str)
catch MALexception;	# 295  (MALexception:str) jump 296
exit MALexception;	# 296  (MALexception:str)
    redo ($990,$991,$992):= chopper.hasMoreElements(ic_a);	# 297 CHPbunHasMoreElements ($990:lng)($991:str)($992:int)<-(ic_a:bat[:str,:int]) jump 293
exit ($990,$991,$992);	# 298  ($990:lng)($991:str)($992:int)
    jc_a := $986;	# 299  (jc_a:bat[:str,:str])<-($986:bat[:str,:str])
    kc_a := bat.setColumn(jc_a,"-2000");	# 300 BKCsetColumn (kc_a:bat[:str,:str])<-(jc_a:bat[:str,:str])($137:str)
    io.print("rule_bat,sb_a,wb_a,yb_a,dc_a,fc_a,jc_a");	# 301 IOprint_val ($142:int)<-($143:str)
    lc_a := io.print(rule_bat,sb_a,wb_a,yb_a,dc_a,fc_a,jc_a);	# 302 IOtable (lc_a:int)<-(rule_bat:bat[:str,:rule])(sb_a:bat[:str,:date])(wb_a:bat[:str,:str])(yb_a:bat[:str,:date])(dc_a:bat[:str,:str])(fc_a:bat[:str,:date])(jc_a:bat[:str,:str])
    tzone_00 := mtime.tzone("GMT");	# 303 MTIMEtzone_fromstr (tzone_00:tzone)<-($146:str)
    tzone_01 := mtime.tzone("GMT+01:00");	# 304 MTIMEtzone_fromstr (tzone_01:tzone)<-($148:str)
    tzone_02 := mtime.tzone("GMT+0100");	# 305 MTIMEtzone_fromstr (tzone_02:tzone)<-($150:str)
    tzone_03 := mtime.tzone(60,rule_oct,rule_mar);	# 306 MTIMEtzone_create_dst (tzone_03:tzone)<-($152:int)(rule_oct:rule)(rule_mar:rule)
    tzone_04 := mtime.tzone(0,rule_jan,rule_aug);	# 307 MTIMEtzone_create_dst (tzone_04:tzone)<-($154:int)(rule_jan:rule)(rule_aug:rule)
    tzone_05 := mtime.tzone(-97,rule_oct,rule_apr);	# 308 MTIMEtzone_create_dst (tzone_05:tzone)<-($156:int)(rule_oct:rule)(rule_apr:rule)
    tzone_06 := mtime.tzone(-97,rule_may,rule_sep);	# 309 MTIMEtzone_create_dst (tzone_06:tzone)<-($156:int)(rule_may:rule)(rule_sep:rule)
    mc_a := calc.*(23,60);	# 310 CALCbinaryMULintint (mc_a:int)<-($159:int)($152:int)
    tzone_07 := mtime.tzone(mc_a,rule_apr,rule_nov);	# 311 MTIMEtzone_create_dst (tzone_07:tzone)<-(mc_a:int)(rule_apr:rule)(rule_nov:rule)
    nc_a := calc.*(-23,59);	# 312 CALCbinaryMULintint (nc_a:int)<-($162:int)($163:int)
    oc_a := calc.-(nc_a,59);	# 313 CALCbinarySUBintint (oc_a:int)<-(nc_a:int)($163:int)
    tzone_08 := mtime.tzone(oc_a);	# 314 MTIMEtzone_create (tzone_08:tzone)<-(oc_a:int)
    tzone_09 := mtime.tzone(0);	# 315 MTIMEtzone_create (tzone_09:tzone)<-($154:int)
    tzone_10 := mtime.tzone(-60);	# 316 MTIMEtzone_create (tzone_10:tzone)<-($168:int)
    pc_a := calc.*(23,60);	# 317 CALCbinaryMULintint (pc_a:int)<-($159:int)($152:int)
    qc_a := calc.+(pc_a,59);	# 318 CALCbinaryADDintint (qc_a:int)<-(pc_a:int)($163:int)
    tzone_11 := mtime.tzone(qc_a);	# 319 MTIMEtzone_create (tzone_11:tzone)<-(qc_a:int)
    tzone_12 := mtime.tzone(60);	# 320 MTIMEtzone_create (tzone_12:tzone)<-($152:int)
    tzone_13 := mtime.tzone(60,rule_feb,rule_dec);	# 321 MTIMEtzone_create_dst (tzone_13:tzone)<-($152:int)(rule_feb:rule)(rule_dec:rule)
    rc_a := calc.*(24,60);	# 322 CALCbinaryMULintint (rc_a:int)<-($175:int)($152:int)
    tzone_15 := mtime.tzone(rc_a,rule_apr,rule_nov);	# 323 MTIMEtzone_create_dst (tzone_15:tzone)<-(rc_a:int)(rule_apr:rule)(rule_nov:rule)
    tzone_bat := bbp.new(:oid,:tzone);	# 324 CMDBATnew (tzone_bat:bat[:oid,:tzone])<-($178:oid)($179:tzone)
    bat.insert(tzone_bat,00@0,tzone_00);	# 325 BKCinsert_bun ($180:bat[:oid,:tzone])<-(tzone_bat:bat[:oid,:tzone])($181:oid)(tzone_00:tzone)
    bat.insert(tzone_bat,01@0,tzone_01);	# 326 BKCinsert_bun ($182:bat[:oid,:tzone])<-(tzone_bat:bat[:oid,:tzone])($183:oid)(tzone_01:tzone)
    bat.insert(tzone_bat,02@0,tzone_02);	# 327 BKCinsert_bun ($184:bat[:oid,:tzone])<-(tzone_bat:bat[:oid,:tzone])($185:oid)(tzone_02:tzone)
    bat.insert(tzone_bat,03@0,tzone_03);	# 328 BKCinsert_bun ($186:bat[:oid,:tzone])<-(tzone_bat:bat[:oid,:tzone])($187:oid)(tzone_03:tzone)
    bat.insert(tzone_bat,04@0,tzone_04);	# 329 BKCinsert_bun ($188:bat[:oid,:tzone])<-(tzone_bat:bat[:oid,:tzone])($189:oid)(tzone_04:tzone)
    bat.insert(tzone_bat,05@0,tzone_05);	# 330 BKCinsert_bun ($190:bat[:oid,:tzone])<-(tzone_bat:bat[:oid,:tzone])($191:oid)(tzone_05:tzone)
    bat.insert(tzone_bat,06@0,tzone_06);	# 331 BKCinsert_bun ($192:bat[:oid,:tzone])<-(tzone_bat:bat[:oid,:tzone])($193:oid)(tzone_06:tzone)
    bat.insert(tzone_bat,07@0,tzone_07);	# 332 BKCinsert_bun ($194:bat[:oid,:tzone])<-(tzone_bat:bat[:oid,:tzone])($195:oid)(tzone_07:tzone)
    bat.insert(tzone_bat,08@0,tzone_08);	# 333 BKCinsert_bun ($196:bat[:oid,:tzone])<-(tzone_bat:bat[:oid,:tzone])($197:oid)(tzone_08:tzone)
    bat.insert(tzone_bat,09@0,tzone_09);	# 334 BKCinsert_bun ($198:bat[:oid,:tzone])<-(tzone_bat:bat[:oid,:tzone])($199:oid)(tzone_09:tzone)
    bat.insert(tzone_bat,10@0,tzone_10);	# 335 BKCinsert_bun ($200:bat[:oid,:tzone])<-(tzone_bat:bat[:oid,:tzone])($201:oid)(tzone_10:tzone)
    bat.insert(tzone_bat,11@0,tzone_11);	# 336 BKCinsert_bun ($202:bat[:oid,:tzone])<-(tzone_bat:bat[:oid,:tzone])($203:oid)(tzone_11:tzone)
    bat.insert(tzone_bat,12@0,tzone_12);	# 337 BKCinsert_bun ($204:bat[:oid,:tzone])<-(tzone_bat:bat[:oid,:tzone])($205:oid)(tzone_12:tzone)
    bat.insert(tzone_bat,13@0,tzone_13);	# 338 BKCinsert_bun ($206:bat[:oid,:tzone])<-(tzone_bat:bat[:oid,:tzone])($207:oid)(tzone_13:tzone)
    bat.insert(tzone_bat,15@0,tzone_15);	# 339 BKCinsert_bun ($208:bat[:oid,:tzone])<-(tzone_bat:bat[:oid,:tzone])($209:oid)(tzone_15:tzone)
    id_a := bat.setName(tzone_bat,"tzone");	# 340 BKCsetName (id_a:bat[:oid,:tzone])<-(tzone_bat:bat[:oid,:tzone])($211:str)
    io.print(tzone_bat);	# 341 IOprint_val ($212:int)<-(tzone_bat:bat[:oid,:tzone])
    $1000 := bbp.new(:oid,:int);	# 342 CMDBATnew ($1000:bat[:oid,:int])<-($1001:oid)($1002:int)
barrier ($1004,$1005,$1006):= chopper.newIterator(tzone_bat);	# 343 CHPbunIterator ($1004:lng)($1005:oid)($1006:tzone)<-(tzone_bat:bat[:oid,:tzone]) jump 349
    $1008 := mtime.minutes($1006);	# 344 MTIMEtzone_extract_minutes ($1008:int)<-($1006:tzone)
    bat.insert($1000,$1005,$1008);	# 345 BKCinsert_bun ($1009:bat[:oid,:int])<-($1000:bat[:oid,:int])($1005:oid)($1008:int)
catch MALexception;	# 346  (MALexception:str) jump 347
exit MALexception;	# 347  (MALexception:str)
    redo ($1004,$1005,$1006):= chopper.hasMoreElements(tzone_bat);	# 348 CHPbunHasMoreElements ($1004:lng)($1005:oid)($1006:tzone)<-(tzone_bat:bat[:oid,:tzone]) jump 344
exit ($1004,$1005,$1006);	# 349  ($1004:lng)($1005:oid)($1006:tzone)
    kd_a := $1000;	# 350  (kd_a:bat[:oid,:int])<-($1000:bat[:oid,:int])
    bat.setColumn(kd_a,"minutes");	# 351 BKCsetColumn ($215:bat[:oid,:int])<-(kd_a:bat[:oid,:int])($216:str)
    $1014 := bbp.new(:oid,:rule);	# 352 CMDBATnew ($1014:bat[:oid,:rule])<-($1015:oid)($1016:rule)
barrier ($1018,$1019,$1020):= chopper.newIterator(tzone_bat);	# 353 CHPbunIterator ($1018:lng)($1019:oid)($1020:tzone)<-(tzone_bat:bat[:oid,:tzone]) jump 359
    $1022 := mtime.start_dst($1020);	# 354 MTIMEtzone_extract_start ($1022:rule)<-($1020:tzone)
    bat.insert($1014,$1019,$1022);	# 355 BKCinsert_bun ($1023:bat[:oid,:rule])<-($1014:bat[:oid,:rule])($1019:oid)($1022:rule)
catch MALexception;	# 356  (MALexception:str) jump 357
exit MALexception;	# 357  (MALexception:str)
    redo ($1018,$1019,$1020):= chopper.hasMoreElements(tzone_bat);	# 358 CHPbunHasMoreElements ($1018:lng)($1019:oid)($1020:tzone)<-(tzone_bat:bat[:oid,:tzone]) jump 354
exit ($1018,$1019,$1020);	# 359  ($1018:lng)($1019:oid)($1020:tzone)
    md_a := $1014;	# 360  (md_a:bat[:oid,:rule])<-($1014:bat[:oid,:rule])
    bat.setColumn(md_a,"start_dst");	# 361 BKCsetColumn ($219:bat[:oid,:rule])<-(md_a:bat[:oid,:rule])($220:str)
    $1028 := bbp.new(:oid,:rule);	# 362 CMDBATnew ($1028:bat[:oid,:rule])<-($1029:oid)($1030:rule)
barrier ($1032,$1033,$1034):= chopper.newIterator(tzone_bat);	# 363 CHPbunIterator ($1032:lng)($1033:oid)($1034:tzone)<-(tzone_bat:bat[:oid,:tzone]) jump 369
    $1036 := mtime.end_dst($1034);	# 364 MTIMEtzone_extract_end ($1036:rule)<-($1034:tzone)
    bat.insert($1028,$1033,$1036);	# 365 BKCinsert_bun ($1037:bat[:oid,:rule])<-($1028:bat[:oid,:rule])($1033:oid)($1036:rule)
catch MALexception;	# 366  (MALexception:str) jump 367
exit MALexception;	# 367  (MALexception:str)
    redo ($1032,$1033,$1034):= chopper.hasMoreElements(tzone_bat);	# 368 CHPbunHasMoreElements ($1032:lng)($1033:oid)($1034:tzone)<-(tzone_bat:bat[:oid,:tzone]) jump 364
exit ($1032,$1033,$1034);	# 369  ($1032:lng)($1033:oid)($1034:tzone)
    od_a := $1028;	# 370  (od_a:bat[:oid,:rule])<-($1028:bat[:oid,:rule])
    bat.setColumn(od_a,"end_dst");	# 371 BKCsetColumn ($223:bat[:oid,:rule])<-(od_a:bat[:oid,:rule])($224:str)
    io.print("print(kd_a,md_a,od_a)");	# 372 IOprint_val ($225:int)<-($226:str)
    qd_a := io.print(kd_a,md_a,od_a);	# 373 IOtable (qd_a:int)<-(kd_a:bat[:oid,:int])(md_a:bat[:oid,:rule])(od_a:bat[:oid,:rule])
    date_00 := mtime.date(2000,01,01);	# 374 MTIMEdate_create (date_00:date)<-($229:int)($230:int)($230:int)
    date_01 := mtime.date("5000-JAN-01");	# 375 MTIMEdate_fromstr (date_01:date)<-($232:str)
    date_02 := mtime.date("1968-FEBR-29");	# 376 MTIMEdate_fromstr (date_02:date)<-($234:str)
    date_03 := mtime.date("1-MARCH-01");	# 377 MTIMEdate_fromstr (date_03:date)<-($236:str)
    date_04 := mtime.date("-5867411-JAN-1");	# 378 MTIMEdate_fromstr (date_04:date)<-($238:str)
    date_05 := mtime.date("-768/octobe/01");	# 379 MTIMEdate_fromstr (date_05:date)<-($240:str)
    date_06 := mtime.date("5000\\novembe\\01");	# 380 MTIMEdate_fromstr (date_06:date)<-($242:str)
    date_07 := mtime.date("-1999/jun/01");	# 381 MTIMEdate_fromstr (date_07:date)<-($244:str)
    date_08 := mtime.date("2000-jul-14");	# 382 MTIMEdate_fromstr (date_08:date)<-($246:str)
    date_09 := mtime.date("1999-sept-01");	# 383 MTIMEdate_fromstr (date_09:date)<-($248:str)
    date_10 := mtime.date("1998-decemBeR-01");	# 384 MTIMEdate_fromstr (date_10:date)<-($250:str)
    date_11 := mtime.date("1953 may                01");	# 385 MTIMEdate_fromstr (date_11:date)<-($252:str)
    date_12 := mtime.date("5867411-DEC-31");	# 386 MTIMEdate_fromstr (date_12:date)<-($254:str)
    date_13 := mtime.date(1996,13,1);	# 387 MTIMEdate_create (date_13:date)<-($256:int)($257:int)($258:int)
    date_14 := mtime.date("999999999999999999999-01-01");	# 388 MTIMEdate_fromstr (date_14:date)<-($260:str)
    date_15 := mtime.date("1999-JANUARI-01");	# 389 MTIMEdate_fromstr (date_15:date)<-($262:str)
    date_16 := mtime.date("1999-FEBR-29");	# 390 MTIMEdate_fromstr (date_16:date)<-($264:str)
    date_17 := mtime.date("-1-DECEMBER-0");	# 391 MTIMEdate_fromstr (date_17:date)<-($266:str)
    date_18 := mtime.date("5000\novembe\31");	# 392 MTIMEdate_fromstr (date_18:date)<-($268:str)
    date_19 := mtime.date("nil");	# 393 MTIMEdate_fromstr (date_19:date)<-($270:str)
    date_20 := mtime.date("1999-sept-31");	# 394 MTIMEdate_fromstr (date_20:date)<-($272:str)
    date_bat := bbp.new(:oid,:date);	# 395 CMDBATnew (date_bat:bat[:oid,:date])<-($274:oid)($275:date)
    bat.insert(date_bat,00@0,date_00);	# 396 BKCinsert_bun ($276:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($277:oid)(date_00:date)
    bat.insert(date_bat,01@0,date_01);	# 397 BKCinsert_bun ($278:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($279:oid)(date_01:date)
    bat.insert(date_bat,02@0,date_02);	# 398 BKCinsert_bun ($280:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($281:oid)(date_02:date)
    bat.insert(date_bat,03@0,date_03);	# 399 BKCinsert_bun ($282:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($283:oid)(date_03:date)
    bat.insert(date_bat,04@0,date_04);	# 400 BKCinsert_bun ($284:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($285:oid)(date_04:date)
    bat.insert(date_bat,05@0,date_05);	# 401 BKCinsert_bun ($286:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($287:oid)(date_05:date)
    bat.insert(date_bat,06@0,date_06);	# 402 BKCinsert_bun ($288:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($289:oid)(date_06:date)
    bat.insert(date_bat,07@0,date_07);	# 403 BKCinsert_bun ($290:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($291:oid)(date_07:date)
    bat.insert(date_bat,08@0,date_08);	# 404 BKCinsert_bun ($292:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($293:oid)(date_08:date)
    bat.insert(date_bat,09@0,date_09);	# 405 BKCinsert_bun ($294:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($295:oid)(date_09:date)
    bat.insert(date_bat,10@0,date_10);	# 406 BKCinsert_bun ($296:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($297:oid)(date_10:date)
    bat.insert(date_bat,11@0,date_11);	# 407 BKCinsert_bun ($298:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($299:oid)(date_11:date)
    bat.insert(date_bat,12@0,date_12);	# 408 BKCinsert_bun ($300:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($301:oid)(date_12:date)
    bat.insert(date_bat,13@0,date_13);	# 409 BKCinsert_bun ($302:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($303:oid)(date_13:date)
    bat.insert(date_bat,14@0,date_14);	# 410 BKCinsert_bun ($304:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($305:oid)(date_14:date)
    bat.insert(date_bat,15@0,date_15);	# 411 BKCinsert_bun ($306:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($307:oid)(date_15:date)
    bat.insert(date_bat,16@0,date_16);	# 412 BKCinsert_bun ($308:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($309:oid)(date_16:date)
    bat.insert(date_bat,17@0,date_17);	# 413 BKCinsert_bun ($310:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($311:oid)(date_17:date)
    bat.insert(date_bat,18@0,date_18);	# 414 BKCinsert_bun ($312:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($313:oid)(date_18:date)
    bat.insert(date_bat,19@0,date_19);	# 415 BKCinsert_bun ($314:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($315:oid)(date_19:date)
    bat.insert(date_bat,20@0,date_20);	# 416 BKCinsert_bun ($316:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($317:oid)(date_20:date)
    ne_a := bat.setColumn(date_bat,"date");	# 417 BKCsetColumn (ne_a:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($319:str)
    $1042 := bbp.new(:oid,:int);	# 418 CMDBATnew ($1042:bat[:oid,:int])<-($1043:oid)($1044:int)
barrier ($1046,$1047,$1048):= chopper.newIterator(date_bat);	# 419 CHPbunIterator ($1046:lng)($1047:oid)($1048:date)<-(date_bat:bat[:oid,:date]) jump 425
    $1050 := mtime.year($1048);	# 420 MTIMEdate_extract_year ($1050:int)<-($1048:date)
    bat.insert($1042,$1047,$1050);	# 421 BKCinsert_bun ($1051:bat[:oid,:int])<-($1042:bat[:oid,:int])($1047:oid)($1050:int)
catch MALexception;	# 422  (MALexception:str) jump 423
exit MALexception;	# 423  (MALexception:str)
    redo ($1046,$1047,$1048):= chopper.hasMoreElements(date_bat);	# 424 CHPbunHasMoreElements ($1046:lng)($1047:oid)($1048:date)<-(date_bat:bat[:oid,:date]) jump 420
exit ($1046,$1047,$1048);	# 425  ($1046:lng)($1047:oid)($1048:date)
    oe_a := $1042;	# 426  (oe_a:bat[:oid,:int])<-($1042:bat[:oid,:int])
    pe_a := bat.setColumn(oe_a,"year");	# 427 BKCsetColumn (pe_a:bat[:oid,:int])<-(oe_a:bat[:oid,:int])($323:str)
    $1056 := bbp.new(:oid,:int);	# 428 CMDBATnew ($1056:bat[:oid,:int])<-($1057:oid)($1058:int)
barrier ($1060,$1061,$1062):= chopper.newIterator(date_bat);	# 429 CHPbunIterator ($1060:lng)($1061:oid)($1062:date)<-(date_bat:bat[:oid,:date]) jump 435
    $1064 := mtime.day($1062);	# 430 MTIMEdate_extract_day ($1064:int)<-($1062:date)
    bat.insert($1056,$1061,$1064);	# 431 BKCinsert_bun ($1065:bat[:oid,:int])<-($1056:bat[:oid,:int])($1061:oid)($1064:int)
catch MALexception;	# 432  (MALexception:str) jump 433
exit MALexception;	# 433  (MALexception:str)
    redo ($1060,$1061,$1062):= chopper.hasMoreElements(date_bat);	# 434 CHPbunHasMoreElements ($1060:lng)($1061:oid)($1062:date)<-(date_bat:bat[:oid,:date]) jump 430
exit ($1060,$1061,$1062);	# 435  ($1060:lng)($1061:oid)($1062:date)
    qe_a := $1056;	# 436  (qe_a:bat[:oid,:int])<-($1056:bat[:oid,:int])
    re_a := bat.setColumn(qe_a,"day");	# 437 BKCsetColumn (re_a:bat[:oid,:int])<-(qe_a:bat[:oid,:int])($327:str)
    $1070 := bbp.new(:oid,:int);	# 438 CMDBATnew ($1070:bat[:oid,:int])<-($1071:oid)($1072:int)
barrier ($1074,$1075,$1076):= chopper.newIterator(date_bat);	# 439 CHPbunIterator ($1074:lng)($1075:oid)($1076:date)<-(date_bat:bat[:oid,:date]) jump 445
    $1078 := mtime.month($1076);	# 440 MTIMEdate_extract_month ($1078:int)<-($1076:date)
    bat.insert($1070,$1075,$1078);	# 441 BKCinsert_bun ($1079:bat[:oid,:int])<-($1070:bat[:oid,:int])($1075:oid)($1078:int)
catch MALexception;	# 442  (MALexception:str) jump 443
exit MALexception;	# 443  (MALexception:str)
    redo ($1074,$1075,$1076):= chopper.hasMoreElements(date_bat);	# 444 CHPbunHasMoreElements ($1074:lng)($1075:oid)($1076:date)<-(date_bat:bat[:oid,:date]) jump 440
exit ($1074,$1075,$1076);	# 445  ($1074:lng)($1075:oid)($1076:date)
    se_a := $1070;	# 446  (se_a:bat[:oid,:int])<-($1070:bat[:oid,:int])
    $1084 := bbp.new(:oid,:str);	# 447 CMDBATnew ($1084:bat[:oid,:str])<-($1085:oid)($1086:str)
barrier ($1088,$1089,$1090):= chopper.newIterator(se_a);	# 448 CHPbunIterator ($1088:lng)($1089:oid)($1090:int)<-(se_a:bat[:oid,:int]) jump 454
    $1092 := mtime.monthname($1090);	# 449 MTIMEmonth_to_str ($1092:str)<-($1090:int)
    bat.insert($1084,$1089,$1092);	# 450 BKCinsert_bun ($1093:bat[:oid,:str])<-($1084:bat[:oid,:str])($1089:oid)($1092:str)
catch MALexception;	# 451  (MALexception:str) jump 452
exit MALexception;	# 452  (MALexception:str)
    redo ($1088,$1089,$1090):= chopper.hasMoreElements(se_a);	# 453 CHPbunHasMoreElements ($1088:lng)($1089:oid)($1090:int)<-(se_a:bat[:oid,:int]) jump 449
exit ($1088,$1089,$1090);	# 454  ($1088:lng)($1089:oid)($1090:int)
    te_a := $1084;	# 455  (te_a:bat[:oid,:str])<-($1084:bat[:oid,:str])
    ue_a := bat.setColumn(te_a,"monthname");	# 456 BKCsetColumn (ue_a:bat[:oid,:str])<-(te_a:bat[:oid,:str])($333:str)
    $1098 := bbp.new(:oid,:int);	# 457 CMDBATnew ($1098:bat[:oid,:int])<-($1099:oid)($1100:int)
barrier ($1102,$1103,$1104):= chopper.newIterator(date_bat);	# 458 CHPbunIterator ($1102:lng)($1103:oid)($1104:date)<-(date_bat:bat[:oid,:date]) jump 464
    $1106 := mtime.month($1104);	# 459 MTIMEdate_extract_month ($1106:int)<-($1104:date)
    bat.insert($1098,$1103,$1106);	# 460 BKCinsert_bun ($1107:bat[:oid,:int])<-($1098:bat[:oid,:int])($1103:oid)($1106:int)
catch MALexception;	# 461  (MALexception:str) jump 462
exit MALexception;	# 462  (MALexception:str)
    redo ($1102,$1103,$1104):= chopper.hasMoreElements(date_bat);	# 463 CHPbunHasMoreElements ($1102:lng)($1103:oid)($1104:date)<-(date_bat:bat[:oid,:date]) jump 459
exit ($1102,$1103,$1104);	# 464  ($1102:lng)($1103:oid)($1104:date)
    ve_a := $1098;	# 465  (ve_a:bat[:oid,:int])<-($1098:bat[:oid,:int])
    $1112 := bbp.new(:oid,:str);	# 466 CMDBATnew ($1112:bat[:oid,:str])<-($1113:oid)($1114:str)
barrier ($1116,$1117,$1118):= chopper.newIterator(ve_a);	# 467 CHPbunIterator ($1116:lng)($1117:oid)($1118:int)<-(ve_a:bat[:oid,:int]) jump 473
    $1120 := mtime.monthname($1118);	# 468 MTIMEmonth_to_str ($1120:str)<-($1118:int)
    bat.insert($1112,$1117,$1120);	# 469 BKCinsert_bun ($1121:bat[:oid,:str])<-($1112:bat[:oid,:str])($1117:oid)($1120:str)
catch MALexception;	# 470  (MALexception:str) jump 471
exit MALexception;	# 471  (MALexception:str)
    redo ($1116,$1117,$1118):= chopper.hasMoreElements(ve_a);	# 472 CHPbunHasMoreElements ($1116:lng)($1117:oid)($1118:int)<-(ve_a:bat[:oid,:int]) jump 468
exit ($1116,$1117,$1118);	# 473  ($1116:lng)($1117:oid)($1118:int)
    we_a := $1112;	# 474  (we_a:bat[:oid,:str])<-($1112:bat[:oid,:str])
    $1126 := bbp.new(:oid,:int);	# 475 CMDBATnew ($1126:bat[:oid,:int])<-($1127:oid)($1128:int)
barrier ($1130,$1131,$1132):= chopper.newIterator(we_a);	# 476 CHPbunIterator ($1130:lng)($1131:oid)($1132:str)<-(we_a:bat[:oid,:str]) jump 482
    $1134 := mtime.monthnum($1132);	# 477 MTIMEmonth_from_str ($1134:int)<-($1132:str)
    bat.insert($1126,$1131,$1134);	# 478 BKCinsert_bun ($1135:bat[:oid,:int])<-($1126:bat[:oid,:int])($1131:oid)($1134:int)
catch MALexception;	# 479  (MALexception:str) jump 480
exit MALexception;	# 480  (MALexception:str)
    redo ($1130,$1131,$1132):= chopper.hasMoreElements(we_a);	# 481 CHPbunHasMoreElements ($1130:lng)($1131:oid)($1132:str)<-(we_a:bat[:oid,:str]) jump 477
exit ($1130,$1131,$1132);	# 482  ($1130:lng)($1131:oid)($1132:str)
    xe_a := $1126;	# 483  (xe_a:bat[:oid,:int])<-($1126:bat[:oid,:int])
    ye_a := bat.setColumn(xe_a,"monthnum");	# 484 BKCsetColumn (ye_a:bat[:oid,:int])<-(xe_a:bat[:oid,:int])($339:str)
    io.print("print(date_bat,oe_a,qe_a,te_a,xe_a)");	# 485 IOprint_val ($340:int)<-($341:str)
    af_a := io.print(date_bat,oe_a,qe_a,te_a,xe_a);	# 486 IOtable (af_a:int)<-(date_bat:bat[:oid,:date])(oe_a:bat[:oid,:int])(qe_a:bat[:oid,:int])(te_a:bat[:oid,:str])(xe_a:bat[:oid,:int])
    $1140 := bbp.new(:oid,:date);	# 487 CMDBATnew ($1140:bat[:oid,:date])<-($1141:oid)($1142:date)
barrier ($1144,$1145,$1146):= chopper.newIterator(date_bat);	# 488 CHPbunIterator ($1144:lng)($1145:oid)($1146:date)<-(date_bat:bat[:oid,:date]) jump 494
    $1148 := mtime.addyears($1146,-100);	# 489 MTIMEdate_addyears ($1148:date)<-($1146:date)($345:int)
    bat.insert($1140,$1145,$1148);	# 490 BKCinsert_bun ($1149:bat[:oid,:date])<-($1140:bat[:oid,:date])($1145:oid)($1148:date)
catch MALexception;	# 491  (MALexception:str) jump 492
exit MALexception;	# 492  (MALexception:str)
    redo ($1144,$1145,$1146):= chopper.hasMoreElements(date_bat);	# 493 CHPbunHasMoreElements ($1144:lng)($1145:oid)($1146:date)<-(date_bat:bat[:oid,:date]) jump 489
exit ($1144,$1145,$1146);	# 494  ($1144:lng)($1145:oid)($1146:date)
    date_addyears := $1140;	# 495  (date_addyears:bat[:oid,:date])<-($1140:bat[:oid,:date])
    $1154 := bbp.new(:oid,:date);	# 496 CMDBATnew ($1154:bat[:oid,:date])<-($1155:oid)($1156:date)
barrier ($1158,$1159,$1160):= chopper.newIterator(date_bat);	# 497 CHPbunIterator ($1158:lng)($1159:oid)($1160:date)<-(date_bat:bat[:oid,:date]) jump 503
    $1162 := mtime.addmonths($1160,1);	# 498 MTIMEdate_addmonths ($1162:date)<-($1160:date)($348:int)
    bat.insert($1154,$1159,$1162);	# 499 BKCinsert_bun ($1163:bat[:oid,:date])<-($1154:bat[:oid,:date])($1159:oid)($1162:date)
catch MALexception;	# 500  (MALexception:str) jump 501
exit MALexception;	# 501  (MALexception:str)
    redo ($1158,$1159,$1160):= chopper.hasMoreElements(date_bat);	# 502 CHPbunHasMoreElements ($1158:lng)($1159:oid)($1160:date)<-(date_bat:bat[:oid,:date]) jump 498
exit ($1158,$1159,$1160);	# 503  ($1158:lng)($1159:oid)($1160:date)
    date_addmonths := $1154;	# 504  (date_addmonths:bat[:oid,:date])<-($1154:bat[:oid,:date])
    bat.setColumn(date_bat,"date");	# 505 BKCsetColumn ($349:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($319:str)
    bat.setColumn(date_addyears,"min100y");	# 506 BKCsetColumn ($350:bat[:oid,:date])<-(date_addyears:bat[:oid,:date])($351:str)
    $1168 := bbp.new(:oid,:int);	# 507 CMDBATnew ($1168:bat[:oid,:int])<-($1169:oid)($1170:int)
barrier ($1172,$1173,$1174):= chopper.newIterator(date_addyears);	# 508 CHPbunIterator ($1172:lng)($1173:oid)($1174:date)<-(date_addyears:bat[:oid,:date]) jump 515
    $1176 := algebra.find(date_bat,$1173);	# 509 ALGfind ($1176:date)<-(date_bat:bat[:oid,:date])($1173:oid)
    $1178 := mtime.diff($1174,$1176);	# 510 MTIMEdate_diff ($1178:int)<-($1174:date)($1176:date)
    bat.insert($1168,$1173,$1178);	# 511 BKCinsert_bun ($1179:bat[:oid,:int])<-($1168:bat[:oid,:int])($1173:oid)($1178:int)
catch MALexception;	# 512  (MALexception:str) jump 513
exit MALexception;	# 513  (MALexception:str)
    redo ($1172,$1173,$1174):= chopper.hasMoreElements(date_addyears);	# 514 CHPbunHasMoreElements ($1172:lng)($1173:oid)($1174:date)<-(date_addyears:bat[:oid,:date]) jump 509
exit ($1172,$1173,$1174);	# 515  ($1172:lng)($1173:oid)($1174:date)
    df_a := $1168;	# 516  (df_a:bat[:oid,:int])<-($1168:bat[:oid,:int])
    bat.setColumn(df_a,"diff");	# 517 BKCsetColumn ($354:bat[:oid,:int])<-(df_a:bat[:oid,:int])($355:str)
    io.print("print(date_bat,date_addyears,df_a)");	# 518 IOprint_val ($356:int)<-($357:str)
    ff_a := io.print(date_bat,date_addyears,df_a);	# 519 IOtable (ff_a:int)<-(date_bat:bat[:oid,:date])(date_addyears:bat[:oid,:date])(df_a:bat[:oid,:int])
    bat.setColumn(date_bat,"date");	# 520 BKCsetColumn ($359:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($360:str)
    bat.setColumn(date_addmonths,"plus1m");	# 521 BKCsetColumn ($361:bat[:oid,:date])<-(date_addmonths:bat[:oid,:date])($362:str)
    $1184 := bbp.new(:oid,:int);	# 522 CMDBATnew ($1184:bat[:oid,:int])<-($1185:oid)($1186:int)
barrier ($1188,$1189,$1190):= chopper.newIterator(date_addmonths);	# 523 CHPbunIterator ($1188:lng)($1189:oid)($1190:date)<-(date_addmonths:bat[:oid,:date]) jump 530
    $1192 := algebra.find(date_bat,$1189);	# 524 ALGfind ($1192:date)<-(date_bat:bat[:oid,:date])($1189:oid)
    $1194 := mtime.diff($1190,$1192);	# 525 MTIMEdate_diff ($1194:int)<-($1190:date)($1192:date)
    bat.insert($1184,$1189,$1194);	# 526 BKCinsert_bun ($1195:bat[:oid,:int])<-($1184:bat[:oid,:int])($1189:oid)($1194:int)
catch MALexception;	# 527  (MALexception:str) jump 528
exit MALexception;	# 528  (MALexception:str)
    redo ($1188,$1189,$1190):= chopper.hasMoreElements(date_addmonths);	# 529 CHPbunHasMoreElements ($1188:lng)($1189:oid)($1190:date)<-(date_addmonths:bat[:oid,:date]) jump 524
exit ($1188,$1189,$1190);	# 530  ($1188:lng)($1189:oid)($1190:date)
    if_a := $1184;	# 531  (if_a:bat[:oid,:int])<-($1184:bat[:oid,:int])
    bat.setColumn(if_a,"diff");	# 532 BKCsetColumn ($364:bat[:oid,:int])<-(if_a:bat[:oid,:int])($355:str)
    io.print(" print(date_bat,date_addmonths,if_a)");	# 533 IOprint_val ($365:int)<-($366:str)
    kf_a := io.print(date_bat,date_addmonths,if_a);	# 534 IOtable (kf_a:int)<-(date_bat:bat[:oid,:date])(date_addmonths:bat[:oid,:date])(if_a:bat[:oid,:int])
    date_seq := bbp.new(:int,:date);	# 535 CMDBATnew (date_seq:bat[:int,:date])<-($369:int)($370:date)
    i := -375;	# 536  (i:int)<-($372:int)
barrier lf_a := true;	# 537  (lf_a:bit)<-($374:bit) jump 545
    i := calc.+(i,1);	# 538 CALCbinaryADDintint (i:int)<-(i:int)($348:int)
    of_a := calc.<(i,375);	# 539 CALCcompLTintint (of_a:bit)<-(i:int)($376:int)
barrier mf_a := of_a;	# 540  (mf_a:bit)<-(of_a:bit) jump 544
    pf_a := mtime.adddays(date_00,i);	# 541 MTIMEdate_adddays (pf_a:date)<-(date_00:date)(i:int)
    bat.insert(date_seq,i,pf_a);	# 542 BKCinsert_bun ($379:bat[:int,:date])<-(date_seq:bat[:int,:date])(i:int)(pf_a:date)
    redo lf_a;	# 543  (lf_a:bit) jump 538
exit mf_a;	# 544  (mf_a:bit)
exit lf_a;	# 545  (lf_a:bit)
    rf_a := bat.setColumn(date_seq,"date");	# 546 BKCsetColumn (rf_a:bat[:int,:date])<-(date_seq:bat[:int,:date])($360:str)
    $1200 := bbp.new(:int,:int);	# 547 CMDBATnew ($1200:bat[:int,:int])<-($1201:int)($1202:int)
barrier ($1204,$1205,$1206):= chopper.newIterator(date_seq);	# 548 CHPbunIterator ($1204:lng)($1205:int)($1206:date)<-(date_seq:bat[:int,:date]) jump 554
    $1208 := mtime.weekofyear($1206);	# 549 MTIMEdate_extract_weekofyear ($1208:int)<-($1206:date)
    bat.insert($1200,$1205,$1208);	# 550 BKCinsert_bun ($1209:bat[:int,:int])<-($1200:bat[:int,:int])($1205:int)($1208:int)
catch MALexception;	# 551  (MALexception:str) jump 552
exit MALexception;	# 552  (MALexception:str)
    redo ($1204,$1205,$1206):= chopper.hasMoreElements(date_seq);	# 553 CHPbunHasMoreElements ($1204:lng)($1205:int)($1206:date)<-(date_seq:bat[:int,:date]) jump 549
exit ($1204,$1205,$1206);	# 554  ($1204:lng)($1205:int)($1206:date)
    sf_a := $1200;	# 555  (sf_a:bat[:int,:int])<-($1200:bat[:int,:int])
    tf_a := bat.setColumn(sf_a,"weekofyear");	# 556 BKCsetColumn (tf_a:bat[:int,:int])<-(sf_a:bat[:int,:int])($384:str)
    $1214 := bbp.new(:int,:int);	# 557 CMDBATnew ($1214:bat[:int,:int])<-($1215:int)($1216:int)
barrier ($1218,$1219,$1220):= chopper.newIterator(date_seq);	# 558 CHPbunIterator ($1218:lng)($1219:int)($1220:date)<-(date_seq:bat[:int,:date]) jump 564
    $1222 := mtime.dayofweek($1220);	# 559 MTIMEdate_extract_dayofweek ($1222:int)<-($1220:date)
    bat.insert($1214,$1219,$1222);	# 560 BKCinsert_bun ($1223:bat[:int,:int])<-($1214:bat[:int,:int])($1219:int)($1222:int)
catch MALexception;	# 561  (MALexception:str) jump 562
exit MALexception;	# 562  (MALexception:str)
    redo ($1218,$1219,$1220):= chopper.hasMoreElements(date_seq);	# 563 CHPbunHasMoreElements ($1218:lng)($1219:int)($1220:date)<-(date_seq:bat[:int,:date]) jump 559
exit ($1218,$1219,$1220);	# 564  ($1218:lng)($1219:int)($1220:date)
    uf_a := $1214;	# 565  (uf_a:bat[:int,:int])<-($1214:bat[:int,:int])
    $1228 := bbp.new(:int,:str);	# 566 CMDBATnew ($1228:bat[:int,:str])<-($1229:int)($1230:str)
barrier ($1232,$1233,$1234):= chopper.newIterator(uf_a);	# 567 CHPbunIterator ($1232:lng)($1233:int)($1234:int)<-(uf_a:bat[:int,:int]) jump 573
    $1236 := mtime.dayname($1234);	# 568 MTIMEday_to_str ($1236:str)<-($1234:int)
    bat.insert($1228,$1233,$1236);	# 569 BKCinsert_bun ($1237:bat[:int,:str])<-($1228:bat[:int,:str])($1233:int)($1236:str)
catch MALexception;	# 570  (MALexception:str) jump 571
exit MALexception;	# 571  (MALexception:str)
    redo ($1232,$1233,$1234):= chopper.hasMoreElements(uf_a);	# 572 CHPbunHasMoreElements ($1232:lng)($1233:int)($1234:int)<-(uf_a:bat[:int,:int]) jump 568
exit ($1232,$1233,$1234);	# 573  ($1232:lng)($1233:int)($1234:int)
    vf_a := $1228;	# 574  (vf_a:bat[:int,:str])<-($1228:bat[:int,:str])
    wf_a := bat.setColumn(vf_a,"dayofweek");	# 575 BKCsetColumn (wf_a:bat[:int,:str])<-(vf_a:bat[:int,:str])($390:str)
    $1242 := bbp.new(:int,:int);	# 576 CMDBATnew ($1242:bat[:int,:int])<-($1243:int)($1244:int)
barrier ($1246,$1247,$1248):= chopper.newIterator(date_seq);	# 577 CHPbunIterator ($1246:lng)($1247:int)($1248:date)<-(date_seq:bat[:int,:date]) jump 583
    $1250 := mtime.dayofweek($1248);	# 578 MTIMEdate_extract_dayofweek ($1250:int)<-($1248:date)
    bat.insert($1242,$1247,$1250);	# 579 BKCinsert_bun ($1251:bat[:int,:int])<-($1242:bat[:int,:int])($1247:int)($1250:int)
catch MALexception;	# 580  (MALexception:str) jump 581
exit MALexception;	# 581  (MALexception:str)
    redo ($1246,$1247,$1248):= chopper.hasMoreElements(date_seq);	# 582 CHPbunHasMoreElements ($1246:lng)($1247:int)($1248:date)<-(date_seq:bat[:int,:date]) jump 578
exit ($1246,$1247,$1248);	# 583  ($1246:lng)($1247:int)($1248:date)
    xf_a := $1242;	# 584  (xf_a:bat[:int,:int])<-($1242:bat[:int,:int])
    $1256 := bbp.new(:int,:str);	# 585 CMDBATnew ($1256:bat[:int,:str])<-($1257:int)($1258:str)
barrier ($1260,$1261,$1262):= chopper.newIterator(xf_a);	# 586 CHPbunIterator ($1260:lng)($1261:int)($1262:int)<-(xf_a:bat[:int,:int]) jump 592
    $1264 := mtime.dayname($1262);	# 587 MTIMEday_to_str ($1264:str)<-($1262:int)
    bat.insert($1256,$1261,$1264);	# 588 BKCinsert_bun ($1265:bat[:int,:str])<-($1256:bat[:int,:str])($1261:int)($1264:str)
catch MALexception;	# 589  (MALexception:str) jump 590
exit MALexception;	# 590  (MALexception:str)
    redo ($1260,$1261,$1262):= chopper.hasMoreElements(xf_a);	# 591 CHPbunHasMoreElements ($1260:lng)($1261:int)($1262:int)<-(xf_a:bat[:int,:int]) jump 587
exit ($1260,$1261,$1262);	# 592  ($1260:lng)($1261:int)($1262:int)
    yf_a := $1256;	# 593  (yf_a:bat[:int,:str])<-($1256:bat[:int,:str])
    $1270 := bbp.new(:int,:int);	# 594 CMDBATnew ($1270:bat[:int,:int])<-($1271:int)($1272:int)
barrier ($1274,$1275,$1276):= chopper.newIterator(yf_a);	# 595 CHPbunIterator ($1274:lng)($1275:int)($1276:str)<-(yf_a:bat[:int,:str]) jump 601
    $1278 := mtime.daynum($1276);	# 596 MTIMEday_from_str ($1278:int)<-($1276:str)
    bat.insert($1270,$1275,$1278);	# 597 BKCinsert_bun ($1279:bat[:int,:int])<-($1270:bat[:int,:int])($1275:int)($1278:int)
catch MALexception;	# 598  (MALexception:str) jump 599
exit MALexception;	# 599  (MALexception:str)
    redo ($1274,$1275,$1276):= chopper.hasMoreElements(yf_a);	# 600 CHPbunHasMoreElements ($1274:lng)($1275:int)($1276:str)<-(yf_a:bat[:int,:str]) jump 596
exit ($1274,$1275,$1276);	# 601  ($1274:lng)($1275:int)($1276:str)
    ag_a := $1270;	# 602  (ag_a:bat[:int,:int])<-($1270:bat[:int,:int])
    bg_a := bat.setColumn(ag_a,"num");	# 603 BKCsetColumn (bg_a:bat[:int,:int])<-(ag_a:bat[:int,:int])($396:str)
    $1284 := bbp.new(:int,:int);	# 604 CMDBATnew ($1284:bat[:int,:int])<-($1285:int)($1286:int)
barrier ($1288,$1289,$1290):= chopper.newIterator(date_seq);	# 605 CHPbunIterator ($1288:lng)($1289:int)($1290:date)<-(date_seq:bat[:int,:date]) jump 611
    $1292 := mtime.dayofyear($1290);	# 606 MTIMEdate_extract_dayofyear ($1292:int)<-($1290:date)
    bat.insert($1284,$1289,$1292);	# 607 BKCinsert_bun ($1293:bat[:int,:int])<-($1284:bat[:int,:int])($1289:int)($1292:int)
catch MALexception;	# 608  (MALexception:str) jump 609
exit MALexception;	# 609  (MALexception:str)
    redo ($1288,$1289,$1290):= chopper.hasMoreElements(date_seq);	# 610 CHPbunHasMoreElements ($1288:lng)($1289:int)($1290:date)<-(date_seq:bat[:int,:date]) jump 606
exit ($1288,$1289,$1290);	# 611  ($1288:lng)($1289:int)($1290:date)
    cg_a := $1284;	# 612  (cg_a:bat[:int,:int])<-($1284:bat[:int,:int])
    dg_a := bat.setColumn(cg_a,"dayofyear");	# 613 BKCsetColumn (dg_a:bat[:int,:int])<-(cg_a:bat[:int,:int])($400:str)
    io.print("date_seq,sf_a,vf_a,ag_a,cg_a");	# 614 IOprint_val ($401:int)<-($402:str)
    eg_a := io.print(date_seq,sf_a,vf_a,ag_a,cg_a);	# 615 IOtable (eg_a:int)<-(date_seq:bat[:int,:date])(sf_a:bat[:int,:int])(vf_a:bat[:int,:str])(ag_a:bat[:int,:int])(cg_a:bat[:int,:int])
    daytime_00 := mtime.daytime(23,59,59,999);	# 616 MTIMEdaytime_create (daytime_00:daytime)<-($405:int)($406:int)($406:int)($407:int)
    daytime_01 := mtime.daytime("23:59");	# 617 MTIMEdaytime_fromstr (daytime_01:daytime)<-($409:str)
    daytime_02 := mtime.daytime("00:00");	# 618 MTIMEdaytime_fromstr (daytime_02:daytime)<-($411:str)
    daytime_03 := mtime.daytime("23:59:59");	# 619 MTIMEdaytime_fromstr (daytime_03:daytime)<-($413:str)
    daytime_04 := mtime.daytime("00:00:00.000");	# 620 MTIMEdaytime_fromstr (daytime_04:daytime)<-($415:str)
    daytime_05 := mtime.daytime("00:00:00");	# 621 MTIMEdaytime_fromstr (daytime_05:daytime)<-($417:str)
    daytime_06 := mtime.daytime("00:00:00:001");	# 622 MTIMEdaytime_fromstr (daytime_06:daytime)<-($419:str)
    daytime_07 := mtime.daytime("03:49:02.999");	# 623 MTIMEdaytime_fromstr (daytime_07:daytime)<-($421:str)
    daytime_08 := mtime.daytime("20:48:42:999");	# 624 MTIMEdaytime_fromstr (daytime_08:daytime)<-($423:str)
    daytime_09 := mtime.daytime("17:53:38:999");	# 625 MTIMEdaytime_fromstr (daytime_09:daytime)<-($425:str)
    daytime_10 := mtime.daytime("13:15:34:999");	# 626 MTIMEdaytime_fromstr (daytime_10:daytime)<-($427:str)
    daytime_11 := mtime.daytime("07:34:27.999");	# 627 MTIMEdaytime_fromstr (daytime_11:daytime)<-($429:str)
    daytime_12 := mtime.daytime("23:59:59:999");	# 628 MTIMEdaytime_fromstr (daytime_12:daytime)<-($431:str)
    daytime_13 := mtime.daytime("01:00:03.999");	# 629 MTIMEdaytime_fromstr (daytime_13:daytime)<-($433:str)
    daytime_14 := mtime.daytime("23:59:59.999");	# 630 MTIMEdaytime_fromstr (daytime_14:daytime)<-($435:str)
    daytime_15 := mtime.daytime(24,59,59,999);	# 631 MTIMEdaytime_create (daytime_15:daytime)<-($437:int)($406:int)($406:int)($407:int)
    daytime_16 := mtime.daytime(23,60,59,999);	# 632 MTIMEdaytime_create (daytime_16:daytime)<-($439:int)($440:int)($441:int)($442:int)
    daytime_17 := mtime.daytime(23,59,60,999);	# 633 MTIMEdaytime_create (daytime_17:daytime)<-($439:int)($441:int)($440:int)($442:int)
    daytime_18 := mtime.daytime(23,59,60,1000);	# 634 MTIMEdaytime_create (daytime_18:daytime)<-($439:int)($441:int)($440:int)($445:int)
    daytime_19 := mtime.daytime("nil");	# 635 MTIMEdaytime_fromstr (daytime_19:daytime)<-($447:str)
    daytime_bat := bbp.new(:oid,:daytime);	# 636 CMDBATnew (daytime_bat:bat[:oid,:daytime])<-($449:oid)($450:daytime)
    bat.insert(daytime_bat,00@0,daytime_00);	# 637 BKCinsert_bun ($451:bat[:oid,:daytime])<-(daytime_bat:bat[:oid,:daytime])($452:oid)(daytime_00:daytime)
    bat.insert(daytime_bat,01@0,daytime_01);	# 638 BKCinsert_bun ($453:bat[:oid,:daytime])<-(daytime_bat:bat[:oid,:daytime])($454:oid)(daytime_01:daytime)
    bat.insert(daytime_bat,02@0,daytime_02);	# 639 BKCinsert_bun ($455:bat[:oid,:daytime])<-(daytime_bat:bat[:oid,:daytime])($456:oid)(daytime_02:daytime)
    bat.insert(daytime_bat,03@0,daytime_03);	# 640 BKCinsert_bun ($457:bat[:oid,:daytime])<-(daytime_bat:bat[:oid,:daytime])($458:oid)(daytime_03:daytime)
    bat.insert(daytime_bat,04@0,daytime_04);	# 641 BKCinsert_bun ($459:bat[:oid,:daytime])<-(daytime_bat:bat[:oid,:daytime])($460:oid)(daytime_04:daytime)
    bat.insert(daytime_bat,05@0,daytime_05);	# 642 BKCinsert_bun ($461:bat[:oid,:daytime])<-(daytime_bat:bat[:oid,:daytime])($462:oid)(daytime_05:daytime)
    bat.insert(daytime_bat,06@0,daytime_06);	# 643 BKCinsert_bun ($463:bat[:oid,:daytime])<-(daytime_bat:bat[:oid,:daytime])($464:oid)(daytime_06:daytime)
    bat.insert(daytime_bat,07@0,daytime_07);	# 644 BKCinsert_bun ($465:bat[:oid,:daytime])<-(daytime_bat:bat[:oid,:daytime])($466:oid)(daytime_07:daytime)
    bat.insert(daytime_bat,08@0,daytime_08);	# 645 BKCinsert_bun ($467:bat[:oid,:daytime])<-(daytime_bat:bat[:oid,:daytime])($468:oid)(daytime_08:daytime)
    bat.insert(daytime_bat,09@0,daytime_09);	# 646 BKCinsert_bun ($469:bat[:oid,:daytime])<-(daytime_bat:bat[:oid,:daytime])($470:oid)(daytime_09:daytime)
    bat.insert(daytime_bat,10@0,daytime_10);	# 647 BKCinsert_bun ($471:bat[:oid,:daytime])<-(daytime_bat:bat[:oid,:daytime])($472:oid)(daytime_10:daytime)
    bat.insert(daytime_bat,11@0,daytime_11);	# 648 BKCinsert_bun ($473:bat[:oid,:daytime])<-(daytime_bat:bat[:oid,:daytime])($474:oid)(daytime_11:daytime)
    bat.insert(daytime_bat,12@0,daytime_12);	# 649 BKCinsert_bun ($475:bat[:oid,:daytime])<-(daytime_bat:bat[:oid,:daytime])($476:oid)(daytime_12:daytime)
    bat.insert(daytime_bat,13@0,daytime_13);	# 650 BKCinsert_bun ($477:bat[:oid,:daytime])<-(daytime_bat:bat[:oid,:daytime])($478:oid)(daytime_13:daytime)
    bat.insert(daytime_bat,14@0,daytime_14);	# 651 BKCinsert_bun ($479:bat[:oid,:daytime])<-(daytime_bat:bat[:oid,:daytime])($480:oid)(daytime_14:daytime)
    bat.insert(daytime_bat,15@0,daytime_15);	# 652 BKCinsert_bun ($481:bat[:oid,:daytime])<-(daytime_bat:bat[:oid,:daytime])($482:oid)(daytime_15:daytime)
    bat.insert(daytime_bat,16@0,daytime_16);	# 653 BKCinsert_bun ($483:bat[:oid,:daytime])<-(daytime_bat:bat[:oid,:daytime])($484:oid)(daytime_16:daytime)
    bat.insert(daytime_bat,17@0,daytime_17);	# 654 BKCinsert_bun ($485:bat[:oid,:daytime])<-(daytime_bat:bat[:oid,:daytime])($486:oid)(daytime_17:daytime)
    bat.insert(daytime_bat,18@0,daytime_18);	# 655 BKCinsert_bun ($487:bat[:oid,:daytime])<-(daytime_bat:bat[:oid,:daytime])($488:oid)(daytime_18:daytime)
    bat.insert(daytime_bat,19@0,daytime_19);	# 656 BKCinsert_bun ($489:bat[:oid,:daytime])<-(daytime_bat:bat[:oid,:daytime])($490:oid)(daytime_19:daytime)
    bat.setColumn(daytime_bat,"daytime");	# 657 BKCsetColumn ($491:bat[:oid,:daytime])<-(daytime_bat:bat[:oid,:daytime])($492:str)
    $1298 := bbp.new(:oid,:int);	# 658 CMDBATnew ($1298:bat[:oid,:int])<-($1299:oid)($1300:int)
barrier ($1302,$1303,$1304):= chopper.newIterator(daytime_bat);	# 659 CHPbunIterator ($1302:lng)($1303:oid)($1304:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 665
    $1306 := mtime.hours($1304);	# 660 MTIMEdaytime_extract_hours ($1306:int)<-($1304:daytime)
    bat.insert($1298,$1303,$1306);	# 661 BKCinsert_bun ($1307:bat[:oid,:int])<-($1298:bat[:oid,:int])($1303:oid)($1306:int)
catch MALexception;	# 662  (MALexception:str) jump 663
exit MALexception;	# 663  (MALexception:str)
    redo ($1302,$1303,$1304):= chopper.hasMoreElements(daytime_bat);	# 664 CHPbunHasMoreElements ($1302:lng)($1303:oid)($1304:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 660
exit ($1302,$1303,$1304);	# 665  ($1302:lng)($1303:oid)($1304:daytime)
    bh_a := $1298;	# 666  (bh_a:bat[:oid,:int])<-($1298:bat[:oid,:int])
    bat.setColumn(bh_a,"hours");	# 667 BKCsetColumn ($495:bat[:oid,:int])<-(bh_a:bat[:oid,:int])($496:str)
    $1312 := bbp.new(:oid,:int);	# 668 CMDBATnew ($1312:bat[:oid,:int])<-($1313:oid)($1314:int)
barrier ($1316,$1317,$1318):= chopper.newIterator(daytime_bat);	# 669 CHPbunIterator ($1316:lng)($1317:oid)($1318:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 675
    $1320 := mtime.minutes($1318);	# 670 MTIMEdaytime_extract_minutes ($1320:int)<-($1318:daytime)
    bat.insert($1312,$1317,$1320);	# 671 BKCinsert_bun ($1321:bat[:oid,:int])<-($1312:bat[:oid,:int])($1317:oid)($1320:int)
catch MALexception;	# 672  (MALexception:str) jump 673
exit MALexception;	# 673  (MALexception:str)
    redo ($1316,$1317,$1318):= chopper.hasMoreElements(daytime_bat);	# 674 CHPbunHasMoreElements ($1316:lng)($1317:oid)($1318:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 670
exit ($1316,$1317,$1318);	# 675  ($1316:lng)($1317:oid)($1318:daytime)
    dh_a := $1312;	# 676  (dh_a:bat[:oid,:int])<-($1312:bat[:oid,:int])
    bat.setColumn(dh_a,"minutes");	# 677 BKCsetColumn ($499:bat[:oid,:int])<-(dh_a:bat[:oid,:int])($500:str)
    $1326 := bbp.new(:oid,:int);	# 678 CMDBATnew ($1326:bat[:oid,:int])<-($1327:oid)($1328:int)
barrier ($1330,$1331,$1332):= chopper.newIterator(daytime_bat);	# 679 CHPbunIterator ($1330:lng)($1331:oid)($1332:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 685
    $1334 := mtime.seconds($1332);	# 680 MTIMEdaytime_extract_seconds ($1334:int)<-($1332:daytime)
    bat.insert($1326,$1331,$1334);	# 681 BKCinsert_bun ($1335:bat[:oid,:int])<-($1326:bat[:oid,:int])($1331:oid)($1334:int)
catch MALexception;	# 682  (MALexception:str) jump 683
exit MALexception;	# 683  (MALexception:str)
    redo ($1330,$1331,$1332):= chopper.hasMoreElements(daytime_bat);	# 684 CHPbunHasMoreElements ($1330:lng)($1331:oid)($1332:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 680
exit ($1330,$1331,$1332);	# 685  ($1330:lng)($1331:oid)($1332:daytime)
    fh_a := $1326;	# 686  (fh_a:bat[:oid,:int])<-($1326:bat[:oid,:int])
    bat.setColumn(fh_a,"seconds");	# 687 BKCsetColumn ($503:bat[:oid,:int])<-(fh_a:bat[:oid,:int])($504:str)
    $1340 := bbp.new(:oid,:int);	# 688 CMDBATnew ($1340:bat[:oid,:int])<-($1341:oid)($1342:int)
barrier ($1344,$1345,$1346):= chopper.newIterator(daytime_bat);	# 689 CHPbunIterator ($1344:lng)($1345:oid)($1346:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 695
    $1348 := mtime.milliseconds($1346);	# 690 MTIMEdaytime_extract_milliseconds ($1348:int)<-($1346:daytime)
    bat.insert($1340,$1345,$1348);	# 691 BKCinsert_bun ($1349:bat[:oid,:int])<-($1340:bat[:oid,:int])($1345:oid)($1348:int)
catch MALexception;	# 692  (MALexception:str) jump 693
exit MALexception;	# 693  (MALexception:str)
    redo ($1344,$1345,$1346):= chopper.hasMoreElements(daytime_bat);	# 694 CHPbunHasMoreElements ($1344:lng)($1345:oid)($1346:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 690
exit ($1344,$1345,$1346);	# 695  ($1344:lng)($1345:oid)($1346:daytime)
    hh_a := $1340;	# 696  (hh_a:bat[:oid,:int])<-($1340:bat[:oid,:int])
    bat.setColumn(hh_a,"milliseconds");	# 697 BKCsetColumn ($507:bat[:oid,:int])<-(hh_a:bat[:oid,:int])($508:str)
    io.print("daytime_bat,bh_a,dh_a,fh_a,hh_a");	# 698 IOprint_val ($509:int)<-($510:str)
    jh_a := io.print(daytime_bat,bh_a,dh_a,fh_a,hh_a);	# 699 IOtable (jh_a:int)<-(daytime_bat:bat[:oid,:daytime])(bh_a:bat[:oid,:int])(dh_a:bat[:oid,:int])(fh_a:bat[:oid,:int])(hh_a:bat[:oid,:int])
    $1354 := bbp.new(:oid,:timestamp);	# 700 CMDBATnew ($1354:bat[:oid,:timestamp])<-($1355:oid)($1356:timestamp)
barrier ($1358,$1359,$1360):= chopper.newIterator(date_bat);	# 701 CHPbunIterator ($1358:lng)($1359:oid)($1360:date)<-(date_bat:bat[:oid,:date]) jump 709
    $1362 := algebra.find(daytime_bat,$1359);	# 702 ALGfind ($1362:daytime)<-(daytime_bat:bat[:oid,:daytime])($1359:oid)
    $1364 := algebra.find(tzone_bat,$1359);	# 703 ALGfind ($1364:tzone)<-(tzone_bat:bat[:oid,:tzone])($1359:oid)
    $1366 := mtime.timestamp($1360,$1362,$1364);	# 704 MTIMEtimestamp_create ($1366:timestamp)<-($1360:date)($1362:daytime)($1364:tzone)
    bat.insert($1354,$1359,$1366);	# 705 BKCinsert_bun ($1367:bat[:oid,:timestamp])<-($1354:bat[:oid,:timestamp])($1359:oid)($1366:timestamp)
catch MALexception;	# 706  (MALexception:str) jump 707
exit MALexception;	# 707  (MALexception:str)
    redo ($1358,$1359,$1360):= chopper.hasMoreElements(date_bat);	# 708 CHPbunHasMoreElements ($1358:lng)($1359:oid)($1360:date)<-(date_bat:bat[:oid,:date]) jump 702
exit ($1358,$1359,$1360);	# 709  ($1358:lng)($1359:oid)($1360:date)
    kh_a := $1354;	# 710  (kh_a:bat[:oid,:timestamp])<-($1354:bat[:oid,:timestamp])
    timestamp_bat := kh_a;	# 711  (timestamp_bat:bat[:oid,:timestamp])<-(kh_a:bat[:oid,:timestamp])
    bat.setWriteMode(kh_a);	# 712 BKCsetWriteMode ($515:bat[:oid,:timestamp])<-(kh_a:bat[:oid,:timestamp])
    bat.setColumn(timestamp_bat,"timestamp");	# 713 BKCsetColumn ($516:bat[:oid,:timestamp])<-(timestamp_bat:bat[:oid,:timestamp])($517:str)
    $1372 := bbp.new(:oid,:date);	# 714 CMDBATnew ($1372:bat[:oid,:date])<-($1373:oid)($1374:date)
barrier ($1376,$1377,$1378):= chopper.newIterator(timestamp_bat);	# 715 CHPbunIterator ($1376:lng)($1377:oid)($1378:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 722
    $1380 := algebra.find(tzone_bat,$1377);	# 716 ALGfind ($1380:tzone)<-(tzone_bat:bat[:oid,:tzone])($1377:oid)
    $1382 := mtime.date($1378,$1380);	# 717 MTIMEtimestamp_extract_date ($1382:date)<-($1378:timestamp)($1380:tzone)
    bat.insert($1372,$1377,$1382);	# 718 BKCinsert_bun ($1383:bat[:oid,:date])<-($1372:bat[:oid,:date])($1377:oid)($1382:date)
catch MALexception;	# 719  (MALexception:str) jump 720
exit MALexception;	# 720  (MALexception:str)
    redo ($1376,$1377,$1378):= chopper.hasMoreElements(timestamp_bat);	# 721 CHPbunHasMoreElements ($1376:lng)($1377:oid)($1378:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 716
exit ($1376,$1377,$1378);	# 722  ($1376:lng)($1377:oid)($1378:timestamp)
    mh_a := $1372;	# 723  (mh_a:bat[:oid,:date])<-($1372:bat[:oid,:date])
    bat.setColumn(mh_a,"date");	# 724 BKCsetColumn ($520:bat[:oid,:date])<-(mh_a:bat[:oid,:date])($521:str)
    $1388 := bbp.new(:oid,:daytime);	# 725 CMDBATnew ($1388:bat[:oid,:daytime])<-($1389:oid)($1390:daytime)
barrier ($1392,$1393,$1394):= chopper.newIterator(timestamp_bat);	# 726 CHPbunIterator ($1392:lng)($1393:oid)($1394:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 733
    $1396 := algebra.find(tzone_bat,$1393);	# 727 ALGfind ($1396:tzone)<-(tzone_bat:bat[:oid,:tzone])($1393:oid)
    $1398 := mtime.daytime($1394,$1396);	# 728 MTIMEtimestamp_extract_daytime ($1398:daytime)<-($1394:timestamp)($1396:tzone)
    bat.insert($1388,$1393,$1398);	# 729 BKCinsert_bun ($1399:bat[:oid,:daytime])<-($1388:bat[:oid,:daytime])($1393:oid)($1398:daytime)
catch MALexception;	# 730  (MALexception:str) jump 731
exit MALexception;	# 731  (MALexception:str)
    redo ($1392,$1393,$1394):= chopper.hasMoreElements(timestamp_bat);	# 732 CHPbunHasMoreElements ($1392:lng)($1393:oid)($1394:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 727
exit ($1392,$1393,$1394);	# 733  ($1392:lng)($1393:oid)($1394:timestamp)
    oh_a := $1388;	# 734  (oh_a:bat[:oid,:daytime])<-($1388:bat[:oid,:daytime])
    bat.setColumn(oh_a,"daytime");	# 735 BKCsetColumn ($524:bat[:oid,:daytime])<-(oh_a:bat[:oid,:daytime])($525:str)
    io.print("print(timestamp_bat,mh_a,oh_a)");	# 736 IOprint_val ($526:int)<-($527:str)
    io.print(timestamp_bat,mh_a,oh_a);	# 737 IOtable ($528:int)<-(timestamp_bat:bat[:oid,:timestamp])(mh_a:bat[:oid,:date])(oh_a:bat[:oid,:daytime])
    rh_a := bat.setColumn(timestamp_bat,"timestamp");	# 738 BKCsetColumn (rh_a:bat[:oid,:timestamp])<-(timestamp_bat:bat[:oid,:timestamp])($517:str)
    timezones := bbp.bind("timezones");	# 739 CMDbbpbind (timezones:bat[:str,:tzone])<-($531:str)
    io.print("print(timezones)");	# 740 IOprint_val ($532:int)<-($533:str)
    io.print(timezones);	# 741 IOprint_val ($534:int)<-(timezones:bat[:str,:tzone])
    sh_a := algebra.find(timezones,"Wake Island");	# 742 ALGfind (sh_a:tzone)<-(timezones:bat[:str,:tzone])($536:str)
    $1404 := bbp.new(:oid,:date);	# 743 CMDBATnew ($1404:bat[:oid,:date])<-($1405:oid)($1406:date)
barrier ($1408,$1409,$1410):= chopper.newIterator(timestamp_bat);	# 744 CHPbunIterator ($1408:lng)($1409:oid)($1410:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 750
    $1412 := mtime.date($1410,sh_a);	# 745 MTIMEtimestamp_extract_date ($1412:date)<-($1410:timestamp)(sh_a:tzone)
    bat.insert($1404,$1409,$1412);	# 746 BKCinsert_bun ($1413:bat[:oid,:date])<-($1404:bat[:oid,:date])($1409:oid)($1412:date)
catch MALexception;	# 747  (MALexception:str) jump 748
exit MALexception;	# 748  (MALexception:str)
    redo ($1408,$1409,$1410):= chopper.hasMoreElements(timestamp_bat);	# 749 CHPbunHasMoreElements ($1408:lng)($1409:oid)($1410:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 745
exit ($1408,$1409,$1410);	# 750  ($1408:lng)($1409:oid)($1410:timestamp)
    th_a := $1404;	# 751  (th_a:bat[:oid,:date])<-($1404:bat[:oid,:date])
    uh_a := bat.setColumn(th_a,"Wake Island");	# 752 BKCsetColumn (uh_a:bat[:oid,:date])<-(th_a:bat[:oid,:date])($536:str)
    vh_a := algebra.find(timezones,"Wake Island");	# 753 ALGfind (vh_a:tzone)<-(timezones:bat[:str,:tzone])($536:str)
    $1418 := bbp.new(:oid,:daytime);	# 754 CMDBATnew ($1418:bat[:oid,:daytime])<-($1419:oid)($1420:daytime)
barrier ($1422,$1423,$1424):= chopper.newIterator(timestamp_bat);	# 755 CHPbunIterator ($1422:lng)($1423:oid)($1424:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 761
    $1426 := mtime.daytime($1424,vh_a);	# 756 MTIMEtimestamp_extract_daytime ($1426:daytime)<-($1424:timestamp)(vh_a:tzone)
    bat.insert($1418,$1423,$1426);	# 757 BKCinsert_bun ($1427:bat[:oid,:daytime])<-($1418:bat[:oid,:daytime])($1423:oid)($1426:daytime)
catch MALexception;	# 758  (MALexception:str) jump 759
exit MALexception;	# 759  (MALexception:str)
    redo ($1422,$1423,$1424):= chopper.hasMoreElements(timestamp_bat);	# 760 CHPbunHasMoreElements ($1422:lng)($1423:oid)($1424:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 756
exit ($1422,$1423,$1424);	# 761  ($1422:lng)($1423:oid)($1424:timestamp)
    wh_a := $1418;	# 762  (wh_a:bat[:oid,:daytime])<-($1418:bat[:oid,:daytime])
    xh_a := algebra.find(timezones,"American Samoa");	# 763 ALGfind (xh_a:tzone)<-(timezones:bat[:str,:tzone])($542:str)
    $1432 := bbp.new(:oid,:date);	# 764 CMDBATnew ($1432:bat[:oid,:date])<-($1433:oid)($1434:date)
barrier ($1436,$1437,$1438):= chopper.newIterator(timestamp_bat);	# 765 CHPbunIterator ($1436:lng)($1437:oid)($1438:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 771
    $1440 := mtime.date($1438,xh_a);	# 766 MTIMEtimestamp_extract_date ($1440:date)<-($1438:timestamp)(xh_a:tzone)
    bat.insert($1432,$1437,$1440);	# 767 BKCinsert_bun ($1441:bat[:oid,:date])<-($1432:bat[:oid,:date])($1437:oid)($1440:date)
catch MALexception;	# 768  (MALexception:str) jump 769
exit MALexception;	# 769  (MALexception:str)
    redo ($1436,$1437,$1438):= chopper.hasMoreElements(timestamp_bat);	# 770 CHPbunHasMoreElements ($1436:lng)($1437:oid)($1438:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 766
exit ($1436,$1437,$1438);	# 771  ($1436:lng)($1437:oid)($1438:timestamp)
    yh_a := $1432;	# 772  (yh_a:bat[:oid,:date])<-($1432:bat[:oid,:date])
    ai_a := bat.setColumn(yh_a,"American Samoa");	# 773 BKCsetColumn (ai_a:bat[:oid,:date])<-(yh_a:bat[:oid,:date])($542:str)
    bi_a := algebra.find(timezones,"American Samoa");	# 774 ALGfind (bi_a:tzone)<-(timezones:bat[:str,:tzone])($542:str)
    $1446 := bbp.new(:oid,:daytime);	# 775 CMDBATnew ($1446:bat[:oid,:daytime])<-($1447:oid)($1448:daytime)
barrier ($1450,$1451,$1452):= chopper.newIterator(timestamp_bat);	# 776 CHPbunIterator ($1450:lng)($1451:oid)($1452:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 782
    $1454 := mtime.daytime($1452,bi_a);	# 777 MTIMEtimestamp_extract_daytime ($1454:daytime)<-($1452:timestamp)(bi_a:tzone)
    bat.insert($1446,$1451,$1454);	# 778 BKCinsert_bun ($1455:bat[:oid,:daytime])<-($1446:bat[:oid,:daytime])($1451:oid)($1454:daytime)
catch MALexception;	# 779  (MALexception:str) jump 780
exit MALexception;	# 780  (MALexception:str)
    redo ($1450,$1451,$1452):= chopper.hasMoreElements(timestamp_bat);	# 781 CHPbunHasMoreElements ($1450:lng)($1451:oid)($1452:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 777
exit ($1450,$1451,$1452);	# 782  ($1450:lng)($1451:oid)($1452:timestamp)
    ci_a := $1446;	# 783  (ci_a:bat[:oid,:daytime])<-($1446:bat[:oid,:daytime])
    io.print("print(timestamp_bat,th_a,wh_a,yh_a,ci_a)");	# 784 IOprint_val ($547:int)<-($548:str)
    di_a := io.print(timestamp_bat,th_a,wh_a,yh_a,ci_a);	# 785 IOtable (di_a:int)<-(timestamp_bat:bat[:oid,:timestamp])(th_a:bat[:oid,:date])(wh_a:bat[:oid,:daytime])(yh_a:bat[:oid,:date])(ci_a:bat[:oid,:daytime])
    ei_a := calc.*(60,1000);	# 786 CALCbinaryMULintint (ei_a:int)<-($551:int)($552:int)
    fi_a := calc.*(60,ei_a);	# 787 CALCbinaryMULintint (fi_a:int)<-($551:int)(ei_a:int)
    gi_a := calc.*(23,fi_a);	# 788 CALCbinaryMULintint (gi_a:int)<-($555:int)(fi_a:int)
    hi_a := calc.lng(gi_a);	# 789 CALCint2lng (hi_a:lng)<-(gi_a:int)
    $1460 := bbp.new(:oid,:timestamp);	# 790 CMDBATnew ($1460:bat[:oid,:timestamp])<-($1461:oid)($1462:timestamp)
barrier ($1464,$1465,$1466):= chopper.newIterator(timestamp_bat);	# 791 CHPbunIterator ($1464:lng)($1465:oid)($1466:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 797
    $1468 := mtime.add($1466,hi_a);	# 792 MTIMEtimestamp_add ($1468:timestamp)<-($1466:timestamp)(hi_a:lng)
    bat.insert($1460,$1465,$1468);	# 793 BKCinsert_bun ($1469:bat[:oid,:timestamp])<-($1460:bat[:oid,:timestamp])($1465:oid)($1468:timestamp)
catch MALexception;	# 794  (MALexception:str) jump 795
exit MALexception;	# 795  (MALexception:str)
    redo ($1464,$1465,$1466):= chopper.hasMoreElements(timestamp_bat);	# 796 CHPbunHasMoreElements ($1464:lng)($1465:oid)($1466:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 792
exit ($1464,$1465,$1466);	# 797  ($1464:lng)($1465:oid)($1466:timestamp)
    timestamp_plus := $1460;	# 798  (timestamp_plus:bat[:oid,:timestamp])<-($1460:bat[:oid,:timestamp])
    ii_a := calc.*(-60,1000);	# 799 CALCbinaryMULintint (ii_a:int)<-($560:int)($552:int)
    ji_a := calc.lng(ii_a);	# 800 CALCint2lng (ji_a:lng)<-(ii_a:int)
    $1474 := bbp.new(:oid,:timestamp);	# 801 CMDBATnew ($1474:bat[:oid,:timestamp])<-($1475:oid)($1476:timestamp)
barrier ($1478,$1479,$1480):= chopper.newIterator(timestamp_bat);	# 802 CHPbunIterator ($1478:lng)($1479:oid)($1480:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 808
    $1482 := mtime.add($1480,ji_a);	# 803 MTIMEtimestamp_add ($1482:timestamp)<-($1480:timestamp)(ji_a:lng)
    bat.insert($1474,$1479,$1482);	# 804 BKCinsert_bun ($1483:bat[:oid,:timestamp])<-($1474:bat[:oid,:timestamp])($1479:oid)($1482:timestamp)
catch MALexception;	# 805  (MALexception:str) jump 806
exit MALexception;	# 806  (MALexception:str)
    redo ($1478,$1479,$1480):= chopper.hasMoreElements(timestamp_bat);	# 807 CHPbunHasMoreElements ($1478:lng)($1479:oid)($1480:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 803
exit ($1478,$1479,$1480);	# 808  ($1478:lng)($1479:oid)($1480:timestamp)
    timestamp_minus := $1474;	# 809  (timestamp_minus:bat[:oid,:timestamp])<-($1474:bat[:oid,:timestamp])
    ki_a := bat.setColumn(timestamp_bat,"timestamp");	# 810 BKCsetColumn (ki_a:bat[:oid,:timestamp])<-(timestamp_bat:bat[:oid,:timestamp])($564:str)
    li_a := bat.setColumn(timestamp_plus,"plus23");	# 811 BKCsetColumn (li_a:bat[:oid,:timestamp])<-(timestamp_plus:bat[:oid,:timestamp])($566:str)
    mi_a := bat.setColumn(timestamp_minus,"min1");	# 812 BKCsetColumn (mi_a:bat[:oid,:timestamp])<-(timestamp_minus:bat[:oid,:timestamp])($568:str)
    $1488 := bbp.new(:oid,:lng);	# 813 CMDBATnew ($1488:bat[:oid,:lng])<-($1489:oid)($1490:lng)
barrier ($1492,$1493,$1494):= chopper.newIterator(timestamp_plus);	# 814 CHPbunIterator ($1492:lng)($1493:oid)($1494:timestamp)<-(timestamp_plus:bat[:oid,:timestamp]) jump 821
    $1496 := algebra.find(timestamp_minus,$1493);	# 815 ALGfind ($1496:timestamp)<-(timestamp_minus:bat[:oid,:timestamp])($1493:oid)
    $1498 := mtime.diff($1494,$1496);	# 816 MTIMEtimestamp_diff ($1498:lng)<-($1494:timestamp)($1496:timestamp)
    bat.insert($1488,$1493,$1498);	# 817 BKCinsert_bun ($1499:bat[:oid,:lng])<-($1488:bat[:oid,:lng])($1493:oid)($1498:lng)
catch MALexception;	# 818  (MALexception:str) jump 819
exit MALexception;	# 819  (MALexception:str)
    redo ($1492,$1493,$1494):= chopper.hasMoreElements(timestamp_plus);	# 820 CHPbunHasMoreElements ($1492:lng)($1493:oid)($1494:timestamp)<-(timestamp_plus:bat[:oid,:timestamp]) jump 815
exit ($1492,$1493,$1494);	# 821  ($1492:lng)($1493:oid)($1494:timestamp)
    ni_a := $1488;	# 822  (ni_a:bat[:oid,:lng])<-($1488:bat[:oid,:lng])
    oi_a := calc.*(60,1000);	# 823 CALCbinaryMULintint (oi_a:int)<-($551:int)($552:int)
    pi_a := calc.*(60,oi_a);	# 824 CALCbinaryMULintint (pi_a:int)<-($551:int)(oi_a:int)
    qi_a := calc.lng(pi_a);	# 825 CALCint2lng (qi_a:lng)<-(pi_a:int)
    ri_a := batcalc./(ni_a,qi_a);	# 826 CMDbatDIVcst (ri_a:bat[:oid,:lng])<-(ni_a:bat[:oid,:lng])(qi_a:lng)
    si_a := bat.setColumn(ri_a,"diff");	# 827 BKCsetColumn (si_a:bat[:oid,:lng])<-(ri_a:bat[:oid,:lng])($576:str)
    io.print("print(timestamp_bat,timestamp_plus,timestamp_minus,ri_a)");	# 828 IOprint_val ($577:int)<-($578:str)
    ti_a := io.print(timestamp_bat,timestamp_plus,timestamp_minus,ri_a);	# 829 IOtable (ti_a:int)<-(timestamp_bat:bat[:oid,:timestamp])(timestamp_plus:bat[:oid,:timestamp])(timestamp_minus:bat[:oid,:timestamp])(ri_a:bat[:oid,:lng])
    ui_a := algebra.find(timezones,"West/Europe");	# 830 ALGfind (ui_a:tzone)<-(timezones:bat[:str,:tzone])($581:str)
    $1504 := bbp.new(:int,:timestamp);	# 831 CMDBATnew ($1504:bat[:int,:timestamp])<-($1505:int)($1506:timestamp)
barrier ($1508,$1509,$1510):= chopper.newIterator(date_seq);	# 832 CHPbunIterator ($1508:lng)($1509:int)($1510:date)<-(date_seq:bat[:int,:date]) jump 838
    $1512 := mtime.timestamp($1510,daytime_00,ui_a);	# 833 MTIMEtimestamp_create ($1512:timestamp)<-($1510:date)(daytime_00:daytime)(ui_a:tzone)
    bat.insert($1504,$1509,$1512);	# 834 BKCinsert_bun ($1513:bat[:int,:timestamp])<-($1504:bat[:int,:timestamp])($1509:int)($1512:timestamp)
catch MALexception;	# 835  (MALexception:str) jump 836
exit MALexception;	# 836  (MALexception:str)
    redo ($1508,$1509,$1510):= chopper.hasMoreElements(date_seq);	# 837 CHPbunHasMoreElements ($1508:lng)($1509:int)($1510:date)<-(date_seq:bat[:int,:date]) jump 833
exit ($1508,$1509,$1510);	# 838  ($1508:lng)($1509:int)($1510:date)
    timestamp_eur := $1504;	# 839  (timestamp_eur:bat[:int,:timestamp])<-($1504:bat[:int,:timestamp])
    vi_a := algebra.find(timezones,"Andes/Brazil");	# 840 ALGfind (vi_a:tzone)<-(timezones:bat[:str,:tzone])($585:str)
    $1518 := bbp.new(:int,:timestamp);	# 841 CMDBATnew ($1518:bat[:int,:timestamp])<-($1519:int)($1520:timestamp)
barrier ($1522,$1523,$1524):= chopper.newIterator(date_seq);	# 842 CHPbunIterator ($1522:lng)($1523:int)($1524:date)<-(date_seq:bat[:int,:date]) jump 848
    $1526 := mtime.timestamp($1524,daytime_00,vi_a);	# 843 MTIMEtimestamp_create ($1526:timestamp)<-($1524:date)(daytime_00:daytime)(vi_a:tzone)
    bat.insert($1518,$1523,$1526);	# 844 BKCinsert_bun ($1527:bat[:int,:timestamp])<-($1518:bat[:int,:timestamp])($1523:int)($1526:timestamp)
catch MALexception;	# 845  (MALexception:str) jump 846
exit MALexception;	# 846  (MALexception:str)
    redo ($1522,$1523,$1524):= chopper.hasMoreElements(date_seq);	# 847 CHPbunHasMoreElements ($1522:lng)($1523:int)($1524:date)<-(date_seq:bat[:int,:date]) jump 843
exit ($1522,$1523,$1524);	# 848  ($1522:lng)($1523:int)($1524:date)
    timestamp_bra := $1518;	# 849  (timestamp_bra:bat[:int,:timestamp])<-($1518:bat[:int,:timestamp])
    wi_a := bat.setColumn(date_seq,"date");	# 850 BKCsetColumn (wi_a:bat[:int,:date])<-(date_seq:bat[:int,:date])($588:str)
    $1532 := bbp.new(:int,:int);	# 851 CMDBATnew ($1532:bat[:int,:int])<-($1533:int)($1534:int)
barrier ($1536,$1537,$1538):= chopper.newIterator(date_seq);	# 852 CHPbunIterator ($1536:lng)($1537:int)($1538:date)<-(date_seq:bat[:int,:date]) jump 858
    $1540 := mtime.dayofweek($1538);	# 853 MTIMEdate_extract_dayofweek ($1540:int)<-($1538:date)
    bat.insert($1532,$1537,$1540);	# 854 BKCinsert_bun ($1541:bat[:int,:int])<-($1532:bat[:int,:int])($1537:int)($1540:int)
catch MALexception;	# 855  (MALexception:str) jump 856
exit MALexception;	# 856  (MALexception:str)
    redo ($1536,$1537,$1538):= chopper.hasMoreElements(date_seq);	# 857 CHPbunHasMoreElements ($1536:lng)($1537:int)($1538:date)<-(date_seq:bat[:int,:date]) jump 853
exit ($1536,$1537,$1538);	# 858  ($1536:lng)($1537:int)($1538:date)
    xi_a := $1532;	# 859  (xi_a:bat[:int,:int])<-($1532:bat[:int,:int])
    $1546 := bbp.new(:int,:str);	# 860 CMDBATnew ($1546:bat[:int,:str])<-($1547:int)($1548:str)
barrier ($1550,$1551,$1552):= chopper.newIterator(xi_a);	# 861 CHPbunIterator ($1550:lng)($1551:int)($1552:int)<-(xi_a:bat[:int,:int]) jump 867
    $1554 := mtime.dayname($1552);	# 862 MTIMEday_to_str ($1554:str)<-($1552:int)
    bat.insert($1546,$1551,$1554);	# 863 BKCinsert_bun ($1555:bat[:int,:str])<-($1546:bat[:int,:str])($1551:int)($1554:str)
catch MALexception;	# 864  (MALexception:str) jump 865
exit MALexception;	# 865  (MALexception:str)
    redo ($1550,$1551,$1552):= chopper.hasMoreElements(xi_a);	# 866 CHPbunHasMoreElements ($1550:lng)($1551:int)($1552:int)<-(xi_a:bat[:int,:int]) jump 862
exit ($1550,$1551,$1552);	# 867  ($1550:lng)($1551:int)($1552:int)
    yi_a := $1546;	# 868  (yi_a:bat[:int,:str])<-($1546:bat[:int,:str])
    aj_a := bat.setColumn(yi_a,"day");	# 869 BKCsetColumn (aj_a:bat[:int,:str])<-(yi_a:bat[:int,:str])($594:str)
    bj_a := bat.setColumn(timestamp_eur,"West/Europe");	# 870 BKCsetColumn (bj_a:bat[:int,:timestamp])<-(timestamp_eur:bat[:int,:timestamp])($581:str)
    cj_a := algebra.find(timezones,"West/Europe");	# 871 ALGfind (cj_a:tzone)<-(timezones:bat[:str,:tzone])($581:str)
    $1560 := bbp.new(:int,:bit);	# 872 CMDBATnew ($1560:bat[:int,:bit])<-($1561:int)($1562:bit)
barrier ($1564,$1565,$1566):= chopper.newIterator(timestamp_eur);	# 873 CHPbunIterator ($1564:lng)($1565:int)($1566:timestamp)<-(timestamp_eur:bat[:int,:timestamp]) jump 879
    $1568 := mtime.dst($1566,cj_a);	# 874 MTIMEtimestamp_inside_dst ($1568:bit)<-($1566:timestamp)(cj_a:tzone)
    bat.insert($1560,$1565,$1568);	# 875 BKCinsert_bun ($1569:bat[:int,:bit])<-($1560:bat[:int,:bit])($1565:int)($1568:bit)
catch MALexception;	# 876  (MALexception:str) jump 877
exit MALexception;	# 877  (MALexception:str)
    redo ($1564,$1565,$1566):= chopper.hasMoreElements(timestamp_eur);	# 878 CHPbunHasMoreElements ($1564:lng)($1565:int)($1566:timestamp)<-(timestamp_eur:bat[:int,:timestamp]) jump 874
exit ($1564,$1565,$1566);	# 879  ($1564:lng)($1565:int)($1566:timestamp)
    dj_a := $1560;	# 880  (dj_a:bat[:int,:bit])<-($1560:bat[:int,:bit])
    ej_a := bat.setColumn(dj_a,"dst");	# 881 BKCsetColumn (ej_a:bat[:int,:bit])<-(dj_a:bat[:int,:bit])($600:str)
    fj_a := bat.setColumn(timestamp_bra,"Andes/Brazil");	# 882 BKCsetColumn (fj_a:bat[:int,:timestamp])<-(timestamp_bra:bat[:int,:timestamp])($585:str)
    gj_a := algebra.find(timezones,"Andes/Brazil");	# 883 ALGfind (gj_a:tzone)<-(timezones:bat[:str,:tzone])($585:str)
    $1574 := bbp.new(:int,:bit);	# 884 CMDBATnew ($1574:bat[:int,:bit])<-($1575:int)($1576:bit)
barrier ($1578,$1579,$1580):= chopper.newIterator(timestamp_bra);	# 885 CHPbunIterator ($1578:lng)($1579:int)($1580:timestamp)<-(timestamp_bra:bat[:int,:timestamp]) jump 891
    $1582 := mtime.dst($1580,gj_a);	# 886 MTIMEtimestamp_inside_dst ($1582:bit)<-($1580:timestamp)(gj_a:tzone)
    bat.insert($1574,$1579,$1582);	# 887 BKCinsert_bun ($1583:bat[:int,:bit])<-($1574:bat[:int,:bit])($1579:int)($1582:bit)
catch MALexception;	# 888  (MALexception:str) jump 889
exit MALexception;	# 889  (MALexception:str)
    redo ($1578,$1579,$1580):= chopper.hasMoreElements(timestamp_bra);	# 890 CHPbunHasMoreElements ($1578:lng)($1579:int)($1580:timestamp)<-(timestamp_bra:bat[:int,:timestamp]) jump 886
exit ($1578,$1579,$1580);	# 891  ($1578:lng)($1579:int)($1580:timestamp)
    hj_a := $1574;	# 892  (hj_a:bat[:int,:bit])<-($1574:bat[:int,:bit])
    ij_a := bat.setColumn(hj_a,"dst");	# 893 BKCsetColumn (ij_a:bat[:int,:bit])<-(hj_a:bat[:int,:bit])($600:str)
    io.print("print(date_seq,yi_a,timestamp_eur,dj_a,timestamp_bra,hj_a)");	# 894 IOprint_val ($605:int)<-($606:str)
    jj_a := io.print(date_seq,yi_a,timestamp_eur,dj_a,timestamp_bra,hj_a);	# 895 IOtable (jj_a:int)<-(date_seq:bat[:int,:date])(yi_a:bat[:int,:str])(timestamp_eur:bat[:int,:timestamp])(dj_a:bat[:int,:bit])(timestamp_bra:bat[:int,:timestamp])(hj_a:bat[:int,:bit])
end main;	# 896  
[ "rule_bat,na_a,pa_a,ra_a,ta_a" ]
#---------------------------------------------------------------------------------------------------------#
# h	rule						month	weekday		day	minutes		  # name
# str	rule						int	int		int	int		  # type
#---------------------------------------------------------------------------------------------------------#
[ "jan",  first monday from start of january@01:15,	  1,	  2,		  1,	  75		  ]
[ "feb",  nil,						  nil,	  nil,		  nil,	  nil		  ]
[ "mar",  first wednesday on or after march 10@01:15,	  3,	  -4,		  10,	  75		  ]
[ "apr",  last thursday on or before april 1@01:15,	  4,	  -5,		  -1,	  75		  ]
[ "may",  may 26@01:15,					  5,	  0,		  26,	  75		  ]
[ "jun",  second tuesday from end of june@01:15,	  6,	  3,		  -2,	  75		  ]
[ "jul",  first sunday from start of july@01:15,	  7,	  1,		  1,	  75		  ]
[ "aug",  first sunday from end of august@01:15,	  8,	  1,		  -1,	  75		  ]
[ "sep",  10th tuesday from end of september@01:15,	  9,	  3,		  -10,	  75		  ]
[ "oct",  october 31@01:15,				  10,	  0,		  31,	  75		  ]
[ "nov",  last wednesday on or before november 10@01:15,  11,	  -4,		  -10,	  75		  ]
[ "dec",  nil,						  nil,	  nil,		  nil,	  nil		  ]
[ "rule_bat,xa_a,cb_a,eb_a,ib_a,kb_a,ob_a" ]
#---------------------------------------------------------------------------------------------------------------------------------------------------------#
# h	rule						2001		2001		1999		1999		1992		1992		  # name
# str	rule						date		str		date		str		date		str		  # type
#---------------------------------------------------------------------------------------------------------------------------------------------------------#
[ "jan",  first monday from start of january@01:15,	  2001-01-01,	  "monday",	  1999-01-04,	  "monday",	  1992-01-06,	  "monday"	  ]
[ "feb",  nil,						  nil,		  nil,		  nil,		  nil,		  nil,		  nil		  ]
[ "mar",  first wednesday on or after march 10@01:15,	  2001-03-14,	  "wednesday",	  1999-03-10,	  "wednesday",	  1992-03-11,	  "wednesday"	  ]
[ "apr",  last thursday on or before april 1@01:15,	  2001-03-29,	  "thursday",	  1999-04-01,	  "thursday",	  1992-03-26,	  "thursday"	  ]
[ "may",  may 26@01:15,					  2001-05-26,	  "saturday",	  1999-05-26,	  "wednesday",	  1992-05-26,	  "tuesday"	  ]
[ "jun",  second tuesday from end of june@01:15,	  2001-06-19,	  "tuesday",	  1999-06-22,	  "tuesday",	  1992-06-23,	  "tuesday"	  ]
[ "jul",  first sunday from start of july@01:15,	  2001-07-01,	  "sunday",	  1999-07-04,	  "sunday",	  1992-07-05,	  "sunday"	  ]
[ "aug",  first sunday from end of august@01:15,	  2001-08-26,	  "sunday",	  1999-08-29,	  "sunday",	  1992-08-30,	  "sunday"	  ]
[ "sep",  10th tuesday from end of september@01:15,	  2001-07-24,	  "tuesday",	  1999-07-27,	  "tuesday",	  1992-07-28,	  "tuesday"	  ]
[ "oct",  october 31@01:15,				  2001-10-31,	  "wednesday",	  1999-10-31,	  "sunday",	  1992-10-31,	  "saturday"	  ]
[ "nov",  last wednesday on or before november 10@01:15,  2001-11-07,	  "wednesday",	  1999-11-10,	  "wednesday",	  1992-11-04,	  "wednesday"	  ]
[ "dec",  nil,						  nil,		  nil,		  nil,		  nil,		  nil,		  nil		  ]
[ "rule_bat,sb_a,wb_a,yb_a,dc_a,fc_a,jc_a" ]
#---------------------------------------------------------------------------------------------------------------------------------------------------------#
# h	rule						1572		1572		1		1		-2000		-2000		  # name
# str	rule						date		str		date		str		date		str		  # type
#---------------------------------------------------------------------------------------------------------------------------------------------------------#
[ "jan",  first monday from start of january@01:15,	  1572-01-03,	  "monday",	  1-01-01,	  "monday",	  -2000-01-01,	  "monday"	  ]
[ "feb",  nil,						  nil,		  nil,		  nil,		  nil,		  nil,		  nil		  ]
[ "mar",  first wednesday on or after march 10@01:15,	  1572-03-15,	  "wednesday",	  1-03-14,	  "wednesday",	  -2000-03-14,	  "wednesday"	  ]
[ "apr",  last thursday on or before april 1@01:15,	  1572-03-30,	  "thursday",	  1-03-29,	  "thursday",	  -2000-03-29,	  "thursday"	  ]
[ "may",  may 26@01:15,					  1572-05-26,	  "friday",	  1-05-26,	  "saturday",	  -2000-05-26,	  "saturday"	  ]
[ "jun",  second tuesday from end of june@01:15,	  1572-06-20,	  "tuesday",	  1-06-19,	  "tuesday",	  -2000-06-19,	  "tuesday"	  ]
[ "jul",  first sunday from start of july@01:15,	  1572-07-02,	  "sunday",	  1-07-01,	  "sunday",	  -2000-07-01,	  "sunday"	  ]
[ "aug",  first sunday from end of august@01:15,	  1572-08-27,	  "sunday",	  1-08-26,	  "sunday",	  -2000-08-26,	  "sunday"	  ]
[ "sep",  10th tuesday from end of september@01:15,	  1572-07-25,	  "tuesday",	  1-07-24,	  "tuesday",	  -2000-07-24,	  "tuesday"	  ]
[ "oct",  october 31@01:15,				  1572-10-31,	  "tuesday",	  1-10-31,	  "wednesday",	  -2000-10-31,	  "wednesday"	  ]
[ "nov",  last wednesday on or before november 10@01:15,  1572-11-08,	  "wednesday",	  1-11-07,	  "wednesday",	  -2000-11-07,	  "wednesday"	  ]
[ "dec",  nil,						  nil,		  nil,		  nil,		  nil,		  nil,		  nil		  ]
#-----------------------------------------------------------------------------------------------------------------#
# h	tzone													  # name
# oid	tzone													  # type
#-----------------------------------------------------------------------------------------------------------------#
[ 0@0,	  GMT													  ]
[ 1@0,	  GMT+01:00												  ]
[ 2@0,	  GMT+01:00												  ]
[ 3@0,	  GMT+01:00-DST[october 31@01:15,first wednesday on or after march 26@01:15]				  ]
[ 4@0,	  GMT-DST[17th monday from start of january@01:15,31th sunday from start of august@01:15]		  ]
[ 5@0,	  GMT-01:37-DST[october 31@01:15,first thursday on or after april 31@01:15]				  ]
[ 6@0,	  GMT-01:37-DST[may 26@01:15,22th tuesday from start of september@01:15]				  ]
[ 7@0,	  GMT+23:00-DST[first thursday on or after april 31@01:15,first wednesday on or after november 22@01:15]  ]
[ 8@0,	  GMT-23:36												  ]
[ 9@0,	  GMT													  ]
[ 10@0,	  GMT-01:00												  ]
[ 11@0,	  GMT+23:59												  ]
[ 12@0,	  GMT+01:00												  ]
[ 13@0,	  nil													  ]
[ 15@0,	  nil													  ]
[ "print(kd_a,md_a,od_a)" ]
#-------------------------------------------------------------------------------------------------------------------------#
# h	minutes		start_dst					end_dst						  # name
# oid	int		rule						rule						  # type
#-------------------------------------------------------------------------------------------------------------------------#
[ 0@0,	  0,		  nil,						  nil						  ]
[ 1@0,	  60,		  nil,						  nil						  ]
[ 2@0,	  60,		  nil,						  nil						  ]
[ 3@0,	  60,		  october 31@01:15,				  first wednesday on or after march 26@01:15	  ]
[ 4@0,	  0,		  17th monday from start of january@01:15,	  31th sunday from start of august@01:15	  ]
[ 5@0,	  -97,		  october 31@01:15,				  first thursday on or after april 31@01:15	  ]
[ 6@0,	  -97,		  may 26@01:15,					  22th tuesday from start of september@01:15	  ]
[ 7@0,	  1380,		  first thursday on or after april 31@01:15,	  first wednesday on or after november 22@01:15	  ]
[ 8@0,	  -1416,	  nil,						  nil						  ]
[ 9@0,	  0,		  nil,						  nil						  ]
[ 10@0,	  -60,		  nil,						  nil						  ]
[ 11@0,	  1439,		  nil,						  nil						  ]
[ 12@0,	  60,		  nil,						  nil						  ]
[ 13@0,	  nil,		  nil,						  nil						  ]
[ 15@0,	  nil,		  nil,						  nil						  ]
[ "print(date_bat,oe_a,qe_a,te_a,xe_a)" ]
#---------------------------------------------------------------------------------#
# h	date		year		day	monthname	monthnum		  # name
# oid	date		int		int	str		int		  # type
#---------------------------------------------------------------------------------#
[ 0@0,	  2000-01-01,	  2000,		  1,	  "january",	  1		  ]
[ 1@0,	  5000-01-01,	  5000,		  1,	  "january",	  1		  ]
[ 2@0,	  1968-02-29,	  1968,		  29,	  "february",	  2		  ]
[ 3@0,	  1-03-01,	  1,		  1,	  "march",	  3		  ]
[ 4@0,	  -5867411-01-01, -5867411,	  1,	  "january",	  1		  ]
[ 5@0,	  -768-10-01,	  -768,		  1,	  "october",	  10		  ]
[ 6@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 7@0,	  -1999-06-01,	  -1999,	  1,	  "june",	  6		  ]
[ 8@0,	  2000-07-14,	  2000,		  14,	  "july",	  7		  ]
[ 9@0,	  1999-09-01,	  1999,		  1,	  "september",	  9		  ]
[ 10@0,	  1998-12-01,	  1998,		  1,	  "december",	  12		  ]
[ 11@0,	  1953-05-01,	  1953,		  1,	  "may",	  5		  ]
[ 12@0,	  5867411-12-31,  5867411,	  31,	  "december",	  12		  ]
[ 13@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 14@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 15@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 16@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 17@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 18@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 19@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 20@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ "print(date_bat,date_addyears,df_a)" ]
#-------------------------------------------------#
# h	date		min100y		diff	  # name
# oid	date		date		int	  # type
#-------------------------------------------------#
[ 0@0,	  2000-01-01,	  1900-01-01,	  -36524  ]
[ 1@0,	  5000-01-01,	  4900-01-01,	  -36524  ]
[ 2@0,	  1968-02-29,	  1868-02-29,	  -36524  ]
[ 3@0,	  1-03-01,	  -100-03-01,	  -36525  ]
[ 4@0,	  -5867411-01-01, nil,		  nil	  ]
[ 5@0,	  -768-10-01,	  -868-10-01,	  -36525  ]
[ 6@0,	  nil,		  nil,		  nil	  ]
[ 7@0,	  -1999-06-01,	  -2099-06-01,	  -36525  ]
[ 8@0,	  2000-07-14,	  1900-07-14,	  -36525  ]
[ 9@0,	  1999-09-01,	  1899-09-01,	  -36524  ]
[ 10@0,	  1998-12-01,	  1898-12-01,	  -36524  ]
[ 11@0,	  1953-05-01,	  1853-05-01,	  -36524  ]
[ 12@0,	  5867411-12-31,  5867311-12-31,  -36524  ]
[ 13@0,	  nil,		  nil,		  nil	  ]
[ 14@0,	  nil,		  nil,		  nil	  ]
[ 15@0,	  nil,		  nil,		  nil	  ]
[ 16@0,	  nil,		  nil,		  nil	  ]
[ 17@0,	  nil,		  nil,		  nil	  ]
[ 18@0,	  nil,		  nil,		  nil	  ]
[ 19@0,	  nil,		  nil,		  nil	  ]
[ 20@0,	  nil,		  nil,		  nil	  ]
[ " print(date_bat,date_addmonths,if_a)" ]
#-------------------------------------------------#
# h	date		plus1m		diff	  # name
# oid	date		date		int	  # type
#-------------------------------------------------#
[ 0@0,	  2000-01-01,	  2000-02-01,	  31	  ]
[ 1@0,	  5000-01-01,	  5000-02-01,	  31	  ]
[ 2@0,	  1968-02-29,	  1968-03-29,	  29	  ]
[ 3@0,	  1-03-01,	  1-04-01,	  31	  ]
[ 4@0,	  -5867411-01-01, -5867411-02-01, 31	  ]
[ 5@0,	  -768-10-01,	  -768-11-01,	  31	  ]
[ 6@0,	  nil,		  nil,		  nil	  ]
[ 7@0,	  -1999-06-01,	  -1999-07-01,	  30	  ]
[ 8@0,	  2000-07-14,	  2000-08-14,	  31	  ]
[ 9@0,	  1999-09-01,	  1999-10-01,	  30	  ]
[ 10@0,	  1998-12-01,	  1999-01-01,	  31	  ]
[ 11@0,	  1953-05-01,	  1953-06-01,	  31	  ]
[ 12@0,	  5867411-12-31,  nil,		  nil	  ]
[ 13@0,	  nil,		  nil,		  nil	  ]
[ 14@0,	  nil,		  nil,		  nil	  ]
[ 15@0,	  nil,		  nil,		  nil	  ]
[ 16@0,	  nil,		  nil,		  nil	  ]
[ 17@0,	  nil,		  nil,		  nil	  ]
[ 18@0,	  nil,		  nil,		  nil	  ]
[ 19@0,	  nil,		  nil,		  nil	  ]
[ 20@0,	  nil,		  nil,		  nil	  ]
[ "date_seq,sf_a,vf_a,ag_a,cg_a" ]
#---------------------------------------------------------------------------------#
# h	date		weekofyear	dayofweek	num	dayofyear	  # name
# int	date		int		str		int	int		  # type
#---------------------------------------------------------------------------------#
[ -374,	  1998-12-23,	  51,		  "wednesday",	  4,	  357		  ]
[ -373,	  1998-12-24,	  51,		  "thursday",	  5,	  358		  ]
[ -372,	  1998-12-25,	  51,		  "friday",	  6,	  359		  ]
[ -371,	  1998-12-26,	  51,		  "saturday",	  7,	  360		  ]
[ -370,	  1998-12-27,	  52,		  "sunday",	  1,	  361		  ]
[ -369,	  1998-12-28,	  52,		  "monday",	  2,	  362		  ]
[ -368,	  1998-12-29,	  52,		  "tuesday",	  3,	  363		  ]
[ -367,	  1998-12-30,	  52,		  "wednesday",	  4,	  364		  ]
[ -366,	  1998-12-31,	  52,		  "thursday",	  5,	  365		  ]
[ -365,	  1999-01-01,	  52,		  "friday",	  6,	  1		  ]
[ -364,	  1999-01-02,	  52,		  "saturday",	  7,	  2		  ]
[ -363,	  1999-01-03,	  1,		  "sunday",	  1,	  3		  ]
[ -362,	  1999-01-04,	  1,		  "monday",	  2,	  4		  ]
[ -361,	  1999-01-05,	  1,		  "tuesday",	  3,	  5		  ]
[ -360,	  1999-01-06,	  1,		  "wednesday",	  4,	  6		  ]
[ -359,	  1999-01-07,	  1,		  "thursday",	  5,	  7		  ]
[ -358,	  1999-01-08,	  1,		  "friday",	  6,	  8		  ]
[ -357,	  1999-01-09,	  1,		  "saturday",	  7,	  9		  ]
[ -356,	  1999-01-10,	  2,		  "sunday",	  1,	  10		  ]
[ -355,	  1999-01-11,	  2,		  "monday",	  2,	  11		  ]
[ -354,	  1999-01-12,	  2,		  "tuesday",	  3,	  12		  ]
[ -353,	  1999-01-13,	  2,		  "wednesday",	  4,	  13		  ]
[ -352,	  1999-01-14,	  2,		  "thursday",	  5,	  14		  ]
[ -351,	  1999-01-15,	  2,		  "friday",	  6,	  15		  ]
[ -350,	  1999-01-16,	  2,		  "saturday",	  7,	  16		  ]
[ -349,	  1999-01-17,	  3,		  "sunday",	  1,	  17		  ]
[ -348,	  1999-01-18,	  3,		  "monday",	  2,	  18		  ]
[ -347,	  1999-01-19,	  3,		  "tuesday",	  3,	  19		  ]
[ -346,	  1999-01-20,	  3,		  "wednesday",	  4,	  20		  ]
[ -345,	  1999-01-21,	  3,		  "thursday",	  5,	  21		  ]
[ -344,	  1999-01-22,	  3,		  "friday",	  6,	  22		  ]
[ -343,	  1999-01-23,	  3,		  "saturday",	  7,	  23		  ]
[ -342,	  1999-01-24,	  4,		  "sunday",	  1,	  24		  ]
[ -341,	  1999-01-25,	  4,		  "monday",	  2,	  25		  ]
[ -340,	  1999-01-26,	  4,		  "tuesday",	  3,	  26		  ]
[ -339,	  1999-01-27,	  4,		  "wednesday",	  4,	  27		  ]
[ -338,	  1999-01-28,	  4,		  "thursday",	  5,	  28		  ]
[ -337,	  1999-01-29,	  4,		  "friday",	  6,	  29		  ]
[ -336,	  1999-01-30,	  4,		  "saturday",	  7,	  30		  ]
[ -335,	  1999-01-31,	  5,		  "sunday",	  1,	  31		  ]
[ -334,	  1999-02-01,	  5,		  "monday",	  2,	  32		  ]
[ -333,	  1999-02-02,	  5,		  "tuesday",	  3,	  33		  ]
[ -332,	  1999-02-03,	  5,		  "wednesday",	  4,	  34		  ]
[ -331,	  1999-02-04,	  5,		  "thursday",	  5,	  35		  ]
[ -330,	  1999-02-05,	  5,		  "friday",	  6,	  36		  ]
[ -329,	  1999-02-06,	  5,		  "saturday",	  7,	  37		  ]
[ -328,	  1999-02-07,	  6,		  "sunday",	  1,	  38		  ]
[ -327,	  1999-02-08,	  6,		  "monday",	  2,	  39		  ]
[ -326,	  1999-02-09,	  6,		  "tuesday",	  3,	  40		  ]
[ -325,	  1999-02-10,	  6,		  "wednesday",	  4,	  41		  ]
[ -324,	  1999-02-11,	  6,		  "thursday",	  5,	  42		  ]
[ -323,	  1999-02-12,	  6,		  "friday",	  6,	  43		  ]
[ -322,	  1999-02-13,	  6,		  "saturday",	  7,	  44		  ]
[ -321,	  1999-02-14,	  7,		  "sunday",	  1,	  45		  ]
[ -320,	  1999-02-15,	  7,		  "monday",	  2,	  46		  ]
[ -319,	  1999-02-16,	  7,		  "tuesday",	  3,	  47		  ]
[ -318,	  1999-02-17,	  7,		  "wednesday",	  4,	  48		  ]
[ -317,	  1999-02-18,	  7,		  "thursday",	  5,	  49		  ]
[ -316,	  1999-02-19,	  7,		  "friday",	  6,	  50		  ]
[ -315,	  1999-02-20,	  7,		  "saturday",	  7,	  51		  ]
[ -314,	  1999-02-21,	  8,		  "sunday",	  1,	  52		  ]
[ -313,	  1999-02-22,	  8,		  "monday",	  2,	  53		  ]
[ -312,	  1999-02-23,	  8,		  "tuesday",	  3,	  54		  ]
[ -311,	  1999-02-24,	  8,		  "wednesday",	  4,	  55		  ]
[ -310,	  1999-02-25,	  8,		  "thursday",	  5,	  56		  ]
[ -309,	  1999-02-26,	  8,		  "friday",	  6,	  57		  ]
[ -308,	  1999-02-27,	  8,		  "saturday",	  7,	  58		  ]
[ -307,	  1999-02-28,	  9,		  "sunday",	  1,	  59		  ]
[ -306,	  1999-03-01,	  9,		  "monday",	  2,	  60		  ]
[ -305,	  1999-03-02,	  9,		  "tuesday",	  3,	  61		  ]
[ -304,	  1999-03-03,	  9,		  "wednesday",	  4,	  62		  ]
[ -303,	  1999-03-04,	  9,		  "thursday",	  5,	  63		  ]
[ -302,	  1999-03-05,	  9,		  "friday",	  6,	  64		  ]
[ -301,	  1999-03-06,	  9,		  "saturday",	  7,	  65		  ]
[ -300,	  1999-03-07,	  10,		  "sunday",	  1,	  66		  ]
[ -299,	  1999-03-08,	  10,		  "monday",	  2,	  67		  ]
[ -298,	  1999-03-09,	  10,		  "tuesday",	  3,	  68		  ]
[ -297,	  1999-03-10,	  10,		  "wednesday",	  4,	  69		  ]
[ -296,	  1999-03-11,	  10,		  "thursday",	  5,	  70		  ]
[ -295,	  1999-03-12,	  10,		  "friday",	  6,	  71		  ]
[ -294,	  1999-03-13,	  10,		  "saturday",	  7,	  72		  ]
[ -293,	  1999-03-14,	  11,		  "sunday",	  1,	  73		  ]
[ -292,	  1999-03-15,	  11,		  "monday",	  2,	  74		  ]
[ -291,	  1999-03-16,	  11,		  "tuesday",	  3,	  75		  ]
[ -290,	  1999-03-17,	  11,		  "wednesday",	  4,	  76		  ]
[ -289,	  1999-03-18,	  11,		  "thursday",	  5,	  77		  ]
[ -288,	  1999-03-19,	  11,		  "friday",	  6,	  78		  ]
[ -287,	  1999-03-20,	  11,		  "saturday",	  7,	  79		  ]
[ -286,	  1999-03-21,	  12,		  "sunday",	  1,	  80		  ]
[ -285,	  1999-03-22,	  12,		  "monday",	  2,	  81		  ]
[ -284,	  1999-03-23,	  12,		  "tuesday",	  3,	  82		  ]
[ -283,	  1999-03-24,	  12,		  "wednesday",	  4,	  83		  ]
[ -282,	  1999-03-25,	  12,		  "thursday",	  5,	  84		  ]
[ -281,	  1999-03-26,	  12,		  "friday",	  6,	  85		  ]
[ -280,	  1999-03-27,	  12,		  "saturday",	  7,	  86		  ]
[ -279,	  1999-03-28,	  13,		  "sunday",	  1,	  87		  ]
[ -278,	  1999-03-29,	  13,		  "monday",	  2,	  88		  ]
[ -277,	  1999-03-30,	  13,		  "tuesday",	  3,	  89		  ]
[ -276,	  1999-03-31,	  13,		  "wednesday",	  4,	  90		  ]
[ -275,	  1999-04-01,	  13,		  "thursday",	  5,	  91		  ]
[ -274,	  1999-04-02,	  13,		  "friday",	  6,	  92		  ]
[ -273,	  1999-04-03,	  13,		  "saturday",	  7,	  93		  ]
[ -272,	  1999-04-04,	  14,		  "sunday",	  1,	  94		  ]
[ -271,	  1999-04-05,	  14,		  "monday",	  2,	  95		  ]
[ -270,	  1999-04-06,	  14,		  "tuesday",	  3,	  96		  ]
[ -269,	  1999-04-07,	  14,		  "wednesday",	  4,	  97		  ]
[ -268,	  1999-04-08,	  14,		  "thursday",	  5,	  98		  ]
[ -267,	  1999-04-09,	  14,		  "friday",	  6,	  99		  ]
[ -266,	  1999-04-10,	  14,		  "saturday",	  7,	  100		  ]
[ -265,	  1999-04-11,	  15,		  "sunday",	  1,	  101		  ]
[ -264,	  1999-04-12,	  15,		  "monday",	  2,	  102		  ]
[ -263,	  1999-04-13,	  15,		  "tuesday",	  3,	  103		  ]
[ -262,	  1999-04-14,	  15,		  "wednesday",	  4,	  104		  ]
[ -261,	  1999-04-15,	  15,		  "thursday",	  5,	  105		  ]
[ -260,	  1999-04-16,	  15,		  "friday",	  6,	  106		  ]
[ -259,	  1999-04-17,	  15,		  "saturday",	  7,	  107		  ]
[ -258,	  1999-04-18,	  16,		  "sunday",	  1,	  108		  ]
[ -257,	  1999-04-19,	  16,		  "monday",	  2,	  109		  ]
[ -256,	  1999-04-20,	  16,		  "tuesday",	  3,	  110		  ]
[ -255,	  1999-04-21,	  16,		  "wednesday",	  4,	  111		  ]
[ -254,	  1999-04-22,	  16,		  "thursday",	  5,	  112		  ]
[ -253,	  1999-04-23,	  16,		  "friday",	  6,	  113		  ]
[ -252,	  1999-04-24,	  16,		  "saturday",	  7,	  114		  ]
[ -251,	  1999-04-25,	  17,		  "sunday",	  1,	  115		  ]
[ -250,	  1999-04-26,	  17,		  "monday",	  2,	  116		  ]
[ -249,	  1999-04-27,	  17,		  "tuesday",	  3,	  117		  ]
[ -248,	  1999-04-28,	  17,		  "wednesday",	  4,	  118		  ]
[ -247,	  1999-04-29,	  17,		  "thursday",	  5,	  119		  ]
[ -246,	  1999-04-30,	  17,		  "friday",	  6,	  120		  ]
[ -245,	  1999-05-01,	  17,		  "saturday",	  7,	  121		  ]
[ -244,	  1999-05-02,	  18,		  "sunday",	  1,	  122		  ]
[ -243,	  1999-05-03,	  18,		  "monday",	  2,	  123		  ]
[ -242,	  1999-05-04,	  18,		  "tuesday",	  3,	  124		  ]
[ -241,	  1999-05-05,	  18,		  "wednesday",	  4,	  125		  ]
[ -240,	  1999-05-06,	  18,		  "thursday",	  5,	  126		  ]
[ -239,	  1999-05-07,	  18,		  "friday",	  6,	  127		  ]
[ -238,	  1999-05-08,	  18,		  "saturday",	  7,	  128		  ]
[ -237,	  1999-05-09,	  19,		  "sunday",	  1,	  129		  ]
[ -236,	  1999-05-10,	  19,		  "monday",	  2,	  130		  ]
[ -235,	  1999-05-11,	  19,		  "tuesday",	  3,	  131		  ]
[ -234,	  1999-05-12,	  19,		  "wednesday",	  4,	  132		  ]
[ -233,	  1999-05-13,	  19,		  "thursday",	  5,	  133		  ]
[ -232,	  1999-05-14,	  19,		  "friday",	  6,	  134		  ]
[ -231,	  1999-05-15,	  19,		  "saturday",	  7,	  135		  ]
[ -230,	  1999-05-16,	  20,		  "sunday",	  1,	  136		  ]
[ -229,	  1999-05-17,	  20,		  "monday",	  2,	  137		  ]
[ -228,	  1999-05-18,	  20,		  "tuesday",	  3,	  138		  ]
[ -227,	  1999-05-19,	  20,		  "wednesday",	  4,	  139		  ]
[ -226,	  1999-05-20,	  20,		  "thursday",	  5,	  140		  ]
[ -225,	  1999-05-21,	  20,		  "friday",	  6,	  141		  ]
[ -224,	  1999-05-22,	  20,		  "saturday",	  7,	  142		  ]
[ -223,	  1999-05-23,	  21,		  "sunday",	  1,	  143		  ]
[ -222,	  1999-05-24,	  21,		  "monday",	  2,	  144		  ]
[ -221,	  1999-05-25,	  21,		  "tuesday",	  3,	  145		  ]
[ -220,	  1999-05-26,	  21,		  "wednesday",	  4,	  146		  ]
[ -219,	  1999-05-27,	  21,		  "thursday",	  5,	  147		  ]
[ -218,	  1999-05-28,	  21,		  "friday",	  6,	  148		  ]
[ -217,	  1999-05-29,	  21,		  "saturday",	  7,	  149		  ]
[ -216,	  1999-05-30,	  22,		  "sunday",	  1,	  150		  ]
[ -215,	  1999-05-31,	  22,		  "monday",	  2,	  151		  ]
[ -214,	  1999-06-01,	  22,		  "tuesday",	  3,	  152		  ]
[ -213,	  1999-06-02,	  22,		  "wednesday",	  4,	  153		  ]
[ -212,	  1999-06-03,	  22,		  "thursday",	  5,	  154		  ]
[ -211,	  1999-06-04,	  22,		  "friday",	  6,	  155		  ]
[ -210,	  1999-06-05,	  22,		  "saturday",	  7,	  156		  ]
[ -209,	  1999-06-06,	  23,		  "sunday",	  1,	  157		  ]
[ -208,	  1999-06-07,	  23,		  "monday",	  2,	  158		  ]
[ -207,	  1999-06-08,	  23,		  "tuesday",	  3,	  159		  ]
[ -206,	  1999-06-09,	  23,		  "wednesday",	  4,	  160		  ]
[ -205,	  1999-06-10,	  23,		  "thursday",	  5,	  161		  ]
[ -204,	  1999-06-11,	  23,		  "friday",	  6,	  162		  ]
[ -203,	  1999-06-12,	  23,		  "saturday",	  7,	  163		  ]
[ -202,	  1999-06-13,	  24,		  "sunday",	  1,	  164		  ]
[ -201,	  1999-06-14,	  24,		  "monday",	  2,	  165		  ]
[ -200,	  1999-06-15,	  24,		  "tuesday",	  3,	  166		  ]
[ -199,	  1999-06-16,	  24,		  "wednesday",	  4,	  167		  ]
[ -198,	  1999-06-17,	  24,		  "thursday",	  5,	  168		  ]
[ -197,	  1999-06-18,	  24,		  "friday",	  6,	  169		  ]
[ -196,	  1999-06-19,	  24,		  "saturday",	  7,	  170		  ]
[ -195,	  1999-06-20,	  25,		  "sunday",	  1,	  171		  ]
[ -194,	  1999-06-21,	  25,		  "monday",	  2,	  172		  ]
[ -193,	  1999-06-22,	  25,		  "tuesday",	  3,	  173		  ]
[ -192,	  1999-06-23,	  25,		  "wednesday",	  4,	  174		  ]
[ -191,	  1999-06-24,	  25,		  "thursday",	  5,	  175		  ]
[ -190,	  1999-06-25,	  25,		  "friday",	  6,	  176		  ]
[ -189,	  1999-06-26,	  25,		  "saturday",	  7,	  177		  ]
[ -188,	  1999-06-27,	  26,		  "sunday",	  1,	  178		  ]
[ -187,	  1999-06-28,	  26,		  "monday",	  2,	  179		  ]
[ -186,	  1999-06-29,	  26,		  "tuesday",	  3,	  180		  ]
[ -185,	  1999-06-30,	  26,		  "wednesday",	  4,	  181		  ]
[ -184,	  1999-07-01,	  26,		  "thursday",	  5,	  182		  ]
[ -183,	  1999-07-02,	  26,		  "friday",	  6,	  183		  ]
[ -182,	  1999-07-03,	  26,		  "saturday",	  7,	  184		  ]
[ -181,	  1999-07-04,	  27,		  "sunday",	  1,	  185		  ]
[ -180,	  1999-07-05,	  27,		  "monday",	  2,	  186		  ]
[ -179,	  1999-07-06,	  27,		  "tuesday",	  3,	  187		  ]
[ -178,	  1999-07-07,	  27,		  "wednesday",	  4,	  188		  ]
[ -177,	  1999-07-08,	  27,		  "thursday",	  5,	  189		  ]
[ -176,	  1999-07-09,	  27,		  "friday",	  6,	  190		  ]
[ -175,	  1999-07-10,	  27,		  "saturday",	  7,	  191		  ]
[ -174,	  1999-07-11,	  28,		  "sunday",	  1,	  192		  ]
[ -173,	  1999-07-12,	  28,		  "monday",	  2,	  193		  ]
[ -172,	  1999-07-13,	  28,		  "tuesday",	  3,	  194		  ]
[ -171,	  1999-07-14,	  28,		  "wednesday",	  4,	  195		  ]
[ -170,	  1999-07-15,	  28,		  "thursday",	  5,	  196		  ]
[ -169,	  1999-07-16,	  28,		  "friday",	  6,	  197		  ]
[ -168,	  1999-07-17,	  28,		  "saturday",	  7,	  198		  ]
[ -167,	  1999-07-18,	  29,		  "sunday",	  1,	  199		  ]
[ -166,	  1999-07-19,	  29,		  "monday",	  2,	  200		  ]
[ -165,	  1999-07-20,	  29,		  "tuesday",	  3,	  201		  ]
[ -164,	  1999-07-21,	  29,		  "wednesday",	  4,	  202		  ]
[ -163,	  1999-07-22,	  29,		  "thursday",	  5,	  203		  ]
[ -162,	  1999-07-23,	  29,		  "friday",	  6,	  204		  ]
[ -161,	  1999-07-24,	  29,		  "saturday",	  7,	  205		  ]
[ -160,	  1999-07-25,	  30,		  "sunday",	  1,	  206		  ]
[ -159,	  1999-07-26,	  30,		  "monday",	  2,	  207		  ]
[ -158,	  1999-07-27,	  30,		  "tuesday",	  3,	  208		  ]
[ -157,	  1999-07-28,	  30,		  "wednesday",	  4,	  209		  ]
[ -156,	  1999-07-29,	  30,		  "thursday",	  5,	  210		  ]
[ -155,	  1999-07-30,	  30,		  "friday",	  6,	  211		  ]
[ -154,	  1999-07-31,	  30,		  "saturday",	  7,	  212		  ]
[ -153,	  1999-08-01,	  31,		  "sunday",	  1,	  213		  ]
[ -152,	  1999-08-02,	  31,		  "monday",	  2,	  214		  ]
[ -151,	  1999-08-03,	  31,		  "tuesday",	  3,	  215		  ]
[ -150,	  1999-08-04,	  31,		  "wednesday",	  4,	  216		  ]
[ -149,	  1999-08-05,	  31,		  "thursday",	  5,	  217		  ]
[ -148,	  1999-08-06,	  31,		  "friday",	  6,	  218		  ]
[ -147,	  1999-08-07,	  31,		  "saturday",	  7,	  219		  ]
[ -146,	  1999-08-08,	  32,		  "sunday",	  1,	  220		  ]
[ -145,	  1999-08-09,	  32,		  "monday",	  2,	  221		  ]
[ -144,	  1999-08-10,	  32,		  "tuesday",	  3,	  222		  ]
[ -143,	  1999-08-11,	  32,		  "wednesday",	  4,	  223		  ]
[ -142,	  1999-08-12,	  32,		  "thursday",	  5,	  224		  ]
[ -141,	  1999-08-13,	  32,		  "friday",	  6,	  225		  ]
[ -140,	  1999-08-14,	  32,		  "saturday",	  7,	  226		  ]
[ -139,	  1999-08-15,	  33,		  "sunday",	  1,	  227		  ]
[ -138,	  1999-08-16,	  33,		  "monday",	  2,	  228		  ]
[ -137,	  1999-08-17,	  33,		  "tuesday",	  3,	  229		  ]
[ -136,	  1999-08-18,	  33,		  "wednesday",	  4,	  230		  ]
[ -135,	  1999-08-19,	  33,		  "thursday",	  5,	  231		  ]
[ -134,	  1999-08-20,	  33,		  "friday",	  6,	  232		  ]
[ -133,	  1999-08-21,	  33,		  "saturday",	  7,	  233		  ]
[ -132,	  1999-08-22,	  34,		  "sunday",	  1,	  234		  ]
[ -131,	  1999-08-23,	  34,		  "monday",	  2,	  235		  ]
[ -130,	  1999-08-24,	  34,		  "tuesday",	  3,	  236		  ]
[ -129,	  1999-08-25,	  34,		  "wednesday",	  4,	  237		  ]
[ -128,	  1999-08-26,	  34,		  "thursday",	  5,	  238		  ]
[ -127,	  1999-08-27,	  34,		  "friday",	  6,	  239		  ]
[ -126,	  1999-08-28,	  34,		  "saturday",	  7,	  240		  ]
[ -125,	  1999-08-29,	  35,		  "sunday",	  1,	  241		  ]
[ -124,	  1999-08-30,	  35,		  "monday",	  2,	  242		  ]
[ -123,	  1999-08-31,	  35,		  "tuesday",	  3,	  243		  ]
[ -122,	  1999-09-01,	  35,		  "wednesday",	  4,	  244		  ]
[ -121,	  1999-09-02,	  35,		  "thursday",	  5,	  245		  ]
[ -120,	  1999-09-03,	  35,		  "friday",	  6,	  246		  ]
[ -119,	  1999-09-04,	  35,		  "saturday",	  7,	  247		  ]
[ -118,	  1999-09-05,	  36,		  "sunday",	  1,	  248		  ]
[ -117,	  1999-09-06,	  36,		  "monday",	  2,	  249		  ]
[ -116,	  1999-09-07,	  36,		  "tuesday",	  3,	  250		  ]
[ -115,	  1999-09-08,	  36,		  "wednesday",	  4,	  251		  ]
[ -114,	  1999-09-09,	  36,		  "thursday",	  5,	  252		  ]
[ -113,	  1999-09-10,	  36,		  "friday",	  6,	  253		  ]
[ -112,	  1999-09-11,	  36,		  "saturday",	  7,	  254		  ]
[ -111,	  1999-09-12,	  37,		  "sunday",	  1,	  255		  ]
[ -110,	  1999-09-13,	  37,		  "monday",	  2,	  256		  ]
[ -109,	  1999-09-14,	  37,		  "tuesday",	  3,	  257		  ]
[ -108,	  1999-09-15,	  37,		  "wednesday",	  4,	  258		  ]
[ -107,	  1999-09-16,	  37,		  "thursday",	  5,	  259		  ]
[ -106,	  1999-09-17,	  37,		  "friday",	  6,	  260		  ]
[ -105,	  1999-09-18,	  37,		  "saturday",	  7,	  261		  ]
[ -104,	  1999-09-19,	  38,		  "sunday",	  1,	  262		  ]
[ -103,	  1999-09-20,	  38,		  "monday",	  2,	  263		  ]
[ -102,	  1999-09-21,	  38,		  "tuesday",	  3,	  264		  ]
[ -101,	  1999-09-22,	  38,		  "wednesday",	  4,	  265		  ]
[ -100,	  1999-09-23,	  38,		  "thursday",	  5,	  266		  ]
[ -99,	  1999-09-24,	  38,		  "friday",	  6,	  267		  ]
[ -98,	  1999-09-25,	  38,		  "saturday",	  7,	  268		  ]
[ -97,	  1999-09-26,	  39,		  "sunday",	  1,	  269		  ]
[ -96,	  1999-09-27,	  39,		  "monday",	  2,	  270		  ]
[ -95,	  1999-09-28,	  39,		  "tuesday",	  3,	  271		  ]
[ -94,	  1999-09-29,	  39,		  "wednesday",	  4,	  272		  ]
[ -93,	  1999-09-30,	  39,		  "thursday",	  5,	  273		  ]
[ -92,	  1999-10-01,	  39,		  "friday",	  6,	  274		  ]
[ -91,	  1999-10-02,	  39,		  "saturday",	  7,	  275		  ]
[ -90,	  1999-10-03,	  40,		  "sunday",	  1,	  276		  ]
[ -89,	  1999-10-04,	  40,		  "monday",	  2,	  277		  ]
[ -88,	  1999-10-05,	  40,		  "tuesday",	  3,	  278		  ]
[ -87,	  1999-10-06,	  40,		  "wednesday",	  4,	  279		  ]
[ -86,	  1999-10-07,	  40,		  "thursday",	  5,	  280		  ]
[ -85,	  1999-10-08,	  40,		  "friday",	  6,	  281		  ]
[ -84,	  1999-10-09,	  40,		  "saturday",	  7,	  282		  ]
[ -83,	  1999-10-10,	  41,		  "sunday",	  1,	  283		  ]
[ -82,	  1999-10-11,	  41,		  "monday",	  2,	  284		  ]
[ -81,	  1999-10-12,	  41,		  "tuesday",	  3,	  285		  ]
[ -80,	  1999-10-13,	  41,		  "wednesday",	  4,	  286		  ]
[ -79,	  1999-10-14,	  41,		  "thursday",	  5,	  287		  ]
[ -78,	  1999-10-15,	  41,		  "friday",	  6,	  288		  ]
[ -77,	  1999-10-16,	  41,		  "saturday",	  7,	  289		  ]
[ -76,	  1999-10-17,	  42,		  "sunday",	  1,	  290		  ]
[ -75,	  1999-10-18,	  42,		  "monday",	  2,	  291		  ]
[ -74,	  1999-10-19,	  42,		  "tuesday",	  3,	  292		  ]
[ -73,	  1999-10-20,	  42,		  "wednesday",	  4,	  293		  ]
[ -72,	  1999-10-21,	  42,		  "thursday",	  5,	  294		  ]
[ -71,	  1999-10-22,	  42,		  "friday",	  6,	  295		  ]
[ -70,	  1999-10-23,	  42,		  "saturday",	  7,	  296		  ]
[ -69,	  1999-10-24,	  43,		  "sunday",	  1,	  297		  ]
[ -68,	  1999-10-25,	  43,		  "monday",	  2,	  298		  ]
[ -67,	  1999-10-26,	  43,		  "tuesday",	  3,	  299		  ]
[ -66,	  1999-10-27,	  43,		  "wednesday",	  4,	  300		  ]
[ -65,	  1999-10-28,	  43,		  "thursday",	  5,	  301		  ]
[ -64,	  1999-10-29,	  43,		  "friday",	  6,	  302		  ]
[ -63,	  1999-10-30,	  43,		  "saturday",	  7,	  303		  ]
[ -62,	  1999-10-31,	  44,		  "sunday",	  1,	  304		  ]
[ -61,	  1999-11-01,	  44,		  "monday",	  2,	  305		  ]
[ -60,	  1999-11-02,	  44,		  "tuesday",	  3,	  306		  ]
[ -59,	  1999-11-03,	  44,		  "wednesday",	  4,	  307		  ]
[ -58,	  1999-11-04,	  44,		  "thursday",	  5,	  308		  ]
[ -57,	  1999-11-05,	  44,		  "friday",	  6,	  309		  ]
[ -56,	  1999-11-06,	  44,		  "saturday",	  7,	  310		  ]
[ -55,	  1999-11-07,	  45,		  "sunday",	  1,	  311		  ]
[ -54,	  1999-11-08,	  45,		  "monday",	  2,	  312		  ]
[ -53,	  1999-11-09,	  45,		  "tuesday",	  3,	  313		  ]
[ -52,	  1999-11-10,	  45,		  "wednesday",	  4,	  314		  ]
[ -51,	  1999-11-11,	  45,		  "thursday",	  5,	  315		  ]
[ -50,	  1999-11-12,	  45,		  "friday",	  6,	  316		  ]
[ -49,	  1999-11-13,	  45,		  "saturday",	  7,	  317		  ]
[ -48,	  1999-11-14,	  46,		  "sunday",	  1,	  318		  ]
[ -47,	  1999-11-15,	  46,		  "monday",	  2,	  319		  ]
[ -46,	  1999-11-16,	  46,		  "tuesday",	  3,	  320		  ]
[ -45,	  1999-11-17,	  46,		  "wednesday",	  4,	  321		  ]
[ -44,	  1999-11-18,	  46,		  "thursday",	  5,	  322		  ]
[ -43,	  1999-11-19,	  46,		  "friday",	  6,	  323		  ]
[ -42,	  1999-11-20,	  46,		  "saturday",	  7,	  324		  ]
[ -41,	  1999-11-21,	  47,		  "sunday",	  1,	  325		  ]
[ -40,	  1999-11-22,	  47,		  "monday",	  2,	  326		  ]
[ -39,	  1999-11-23,	  47,		  "tuesday",	  3,	  327		  ]
[ -38,	  1999-11-24,	  47,		  "wednesday",	  4,	  328		  ]
[ -37,	  1999-11-25,	  47,		  "thursday",	  5,	  329		  ]
[ -36,	  1999-11-26,	  47,		  "friday",	  6,	  330		  ]
[ -35,	  1999-11-27,	  47,		  "saturday",	  7,	  331		  ]
[ -34,	  1999-11-28,	  48,		  "sunday",	  1,	  332		  ]
[ -33,	  1999-11-29,	  48,		  "monday",	  2,	  333		  ]
[ -32,	  1999-11-30,	  48,		  "tuesday",	  3,	  334		  ]
[ -31,	  1999-12-01,	  48,		  "wednesday",	  4,	  335		  ]
[ -30,	  1999-12-02,	  48,		  "thursday",	  5,	  336		  ]
[ -29,	  1999-12-03,	  48,		  "friday",	  6,	  337		  ]
[ -28,	  1999-12-04,	  48,		  "saturday",	  7,	  338		  ]
[ -27,	  1999-12-05,	  49,		  "sunday",	  1,	  339		  ]
[ -26,	  1999-12-06,	  49,		  "monday",	  2,	  340		  ]
[ -25,	  1999-12-07,	  49,		  "tuesday",	  3,	  341		  ]
[ -24,	  1999-12-08,	  49,		  "wednesday",	  4,	  342		  ]
[ -23,	  1999-12-09,	  49,		  "thursday",	  5,	  343		  ]
[ -22,	  1999-12-10,	  49,		  "friday",	  6,	  344		  ]
[ -21,	  1999-12-11,	  49,		  "saturday",	  7,	  345		  ]
[ -20,	  1999-12-12,	  50,		  "sunday",	  1,	  346		  ]
[ -19,	  1999-12-13,	  50,		  "monday",	  2,	  347		  ]
[ -18,	  1999-12-14,	  50,		  "tuesday",	  3,	  348		  ]
[ -17,	  1999-12-15,	  50,		  "wednesday",	  4,	  349		  ]
[ -16,	  1999-12-16,	  50,		  "thursday",	  5,	  350		  ]
[ -15,	  1999-12-17,	  50,		  "friday",	  6,	  351		  ]
[ -14,	  1999-12-18,	  50,		  "saturday",	  7,	  352		  ]
[ -13,	  1999-12-19,	  51,		  "sunday",	  1,	  353		  ]
[ -12,	  1999-12-20,	  51,		  "monday",	  2,	  354		  ]
[ -11,	  1999-12-21,	  51,		  "tuesday",	  3,	  355		  ]
[ -10,	  1999-12-22,	  51,		  "wednesday",	  4,	  356		  ]
[ -9,	  1999-12-23,	  51,		  "thursday",	  5,	  357		  ]
[ -8,	  1999-12-24,	  51,		  "friday",	  6,	  358		  ]
[ -7,	  1999-12-25,	  51,		  "saturday",	  7,	  359		  ]
[ -6,	  1999-12-26,	  52,		  "sunday",	  1,	  360		  ]
[ -5,	  1999-12-27,	  52,		  "monday",	  2,	  361		  ]
[ -4,	  1999-12-28,	  52,		  "tuesday",	  3,	  362		  ]
[ -3,	  1999-12-29,	  52,		  "wednesday",	  4,	  363		  ]
[ -2,	  1999-12-30,	  52,		  "thursday",	  5,	  364		  ]
[ -1,	  1999-12-31,	  52,		  "friday",	  6,	  365		  ]
[ 0,	  2000-01-01,	  52,		  "saturday",	  7,	  1		  ]
[ 1,	  2000-01-02,	  1,		  "sunday",	  1,	  2		  ]
[ 2,	  2000-01-03,	  1,		  "monday",	  2,	  3		  ]
[ 3,	  2000-01-04,	  1,		  "tuesday",	  3,	  4		  ]
[ 4,	  2000-01-05,	  1,		  "wednesday",	  4,	  5		  ]
[ 5,	  2000-01-06,	  1,		  "thursday",	  5,	  6		  ]
[ 6,	  2000-01-07,	  1,		  "friday",	  6,	  7		  ]
[ 7,	  2000-01-08,	  1,		  "saturday",	  7,	  8		  ]
[ 8,	  2000-01-09,	  2,		  "sunday",	  1,	  9		  ]
[ 9,	  2000-01-10,	  2,		  "monday",	  2,	  10		  ]
[ 10,	  2000-01-11,	  2,		  "tuesday",	  3,	  11		  ]
[ 11,	  2000-01-12,	  2,		  "wednesday",	  4,	  12		  ]
[ 12,	  2000-01-13,	  2,		  "thursday",	  5,	  13		  ]
[ 13,	  2000-01-14,	  2,		  "friday",	  6,	  14		  ]
[ 14,	  2000-01-15,	  2,		  "saturday",	  7,	  15		  ]
[ 15,	  2000-01-16,	  3,		  "sunday",	  1,	  16		  ]
[ 16,	  2000-01-17,	  3,		  "monday",	  2,	  17		  ]
[ 17,	  2000-01-18,	  3,		  "tuesday",	  3,	  18		  ]
[ 18,	  2000-01-19,	  3,		  "wednesday",	  4,	  19		  ]
[ 19,	  2000-01-20,	  3,		  "thursday",	  5,	  20		  ]
[ 20,	  2000-01-21,	  3,		  "friday",	  6,	  21		  ]
[ 21,	  2000-01-22,	  3,		  "saturday",	  7,	  22		  ]
[ 22,	  2000-01-23,	  4,		  "sunday",	  1,	  23		  ]
[ 23,	  2000-01-24,	  4,		  "monday",	  2,	  24		  ]
[ 24,	  2000-01-25,	  4,		  "tuesday",	  3,	  25		  ]
[ 25,	  2000-01-26,	  4,		  "wednesday",	  4,	  26		  ]
[ 26,	  2000-01-27,	  4,		  "thursday",	  5,	  27		  ]
[ 27,	  2000-01-28,	  4,		  "friday",	  6,	  28		  ]
[ 28,	  2000-01-29,	  4,		  "saturday",	  7,	  29		  ]
[ 29,	  2000-01-30,	  5,		  "sunday",	  1,	  30		  ]
[ 30,	  2000-01-31,	  5,		  "monday",	  2,	  31		  ]
[ 31,	  2000-02-01,	  5,		  "tuesday",	  3,	  32		  ]
[ 32,	  2000-02-02,	  5,		  "wednesday",	  4,	  33		  ]
[ 33,	  2000-02-03,	  5,		  "thursday",	  5,	  34		  ]
[ 34,	  2000-02-04,	  5,		  "friday",	  6,	  35		  ]
[ 35,	  2000-02-05,	  5,		  "saturday",	  7,	  36		  ]
[ 36,	  2000-02-06,	  6,		  "sunday",	  1,	  37		  ]
[ 37,	  2000-02-07,	  6,		  "monday",	  2,	  38		  ]
[ 38,	  2000-02-08,	  6,		  "tuesday",	  3,	  39		  ]
[ 39,	  2000-02-09,	  6,		  "wednesday",	  4,	  40		  ]
[ 40,	  2000-02-10,	  6,		  "thursday",	  5,	  41		  ]
[ 41,	  2000-02-11,	  6,		  "friday",	  6,	  42		  ]
[ 42,	  2000-02-12,	  6,		  "saturday",	  7,	  43		  ]
[ 43,	  2000-02-13,	  7,		  "sunday",	  1,	  44		  ]
[ 44,	  2000-02-14,	  7,		  "monday",	  2,	  45		  ]
[ 45,	  2000-02-15,	  7,		  "tuesday",	  3,	  46		  ]
[ 46,	  2000-02-16,	  7,		  "wednesday",	  4,	  47		  ]
[ 47,	  2000-02-17,	  7,		  "thursday",	  5,	  48		  ]
[ 48,	  2000-02-18,	  7,		  "friday",	  6,	  49		  ]
[ 49,	  2000-02-19,	  7,		  "saturday",	  7,	  50		  ]
[ 50,	  2000-02-20,	  8,		  "sunday",	  1,	  51		  ]
[ 51,	  2000-02-21,	  8,		  "monday",	  2,	  52		  ]
[ 52,	  2000-02-22,	  8,		  "tuesday",	  3,	  53		  ]
[ 53,	  2000-02-23,	  8,		  "wednesday",	  4,	  54		  ]
[ 54,	  2000-02-24,	  8,		  "thursday",	  5,	  55		  ]
[ 55,	  2000-02-25,	  8,		  "friday",	  6,	  56		  ]
[ 56,	  2000-02-26,	  8,		  "saturday",	  7,	  57		  ]
[ 57,	  2000-02-27,	  9,		  "sunday",	  1,	  58		  ]
[ 58,	  2000-02-28,	  9,		  "monday",	  2,	  59		  ]
[ 59,	  2000-02-29,	  9,		  "tuesday",	  3,	  60		  ]
[ 60,	  2000-03-01,	  9,		  "wednesday",	  4,	  61		  ]
[ 61,	  2000-03-02,	  9,		  "thursday",	  5,	  62		  ]
[ 62,	  2000-03-03,	  9,		  "friday",	  6,	  63		  ]
[ 63,	  2000-03-04,	  9,		  "saturday",	  7,	  64		  ]
[ 64,	  2000-03-05,	  10,		  "sunday",	  1,	  65		  ]
[ 65,	  2000-03-06,	  10,		  "monday",	  2,	  66		  ]
[ 66,	  2000-03-07,	  10,		  "tuesday",	  3,	  67		  ]
[ 67,	  2000-03-08,	  10,		  "wednesday",	  4,	  68		  ]
[ 68,	  2000-03-09,	  10,		  "thursday",	  5,	  69		  ]
[ 69,	  2000-03-10,	  10,		  "friday",	  6,	  70		  ]
[ 70,	  2000-03-11,	  10,		  "saturday",	  7,	  71		  ]
[ 71,	  2000-03-12,	  11,		  "sunday",	  1,	  72		  ]
[ 72,	  2000-03-13,	  11,		  "monday",	  2,	  73		  ]
[ 73,	  2000-03-14,	  11,		  "tuesday",	  3,	  74		  ]
[ 74,	  2000-03-15,	  11,		  "wednesday",	  4,	  75		  ]
[ 75,	  2000-03-16,	  11,		  "thursday",	  5,	  76		  ]
[ 76,	  2000-03-17,	  11,		  "friday",	  6,	  77		  ]
[ 77,	  2000-03-18,	  11,		  "saturday",	  7,	  78		  ]
[ 78,	  2000-03-19,	  12,		  "sunday",	  1,	  79		  ]
[ 79,	  2000-03-20,	  12,		  "monday",	  2,	  80		  ]
[ 80,	  2000-03-21,	  12,		  "tuesday",	  3,	  81		  ]
[ 81,	  2000-03-22,	  12,		  "wednesday",	  4,	  82		  ]
[ 82,	  2000-03-23,	  12,		  "thursday",	  5,	  83		  ]
[ 83,	  2000-03-24,	  12,		  "friday",	  6,	  84		  ]
[ 84,	  2000-03-25,	  12,		  "saturday",	  7,	  85		  ]
[ 85,	  2000-03-26,	  13,		  "sunday",	  1,	  86		  ]
[ 86,	  2000-03-27,	  13,		  "monday",	  2,	  87		  ]
[ 87,	  2000-03-28,	  13,		  "tuesday",	  3,	  88		  ]
[ 88,	  2000-03-29,	  13,		  "wednesday",	  4,	  89		  ]
[ 89,	  2000-03-30,	  13,		  "thursday",	  5,	  90		  ]
[ 90,	  2000-03-31,	  13,		  "friday",	  6,	  91		  ]
[ 91,	  2000-04-01,	  13,		  "saturday",	  7,	  92		  ]
[ 92,	  2000-04-02,	  14,		  "sunday",	  1,	  93		  ]
[ 93,	  2000-04-03,	  14,		  "monday",	  2,	  94		  ]
[ 94,	  2000-04-04,	  14,		  "tuesday",	  3,	  95		  ]
[ 95,	  2000-04-05,	  14,		  "wednesday",	  4,	  96		  ]
[ 96,	  2000-04-06,	  14,		  "thursday",	  5,	  97		  ]
[ 97,	  2000-04-07,	  14,		  "friday",	  6,	  98		  ]
[ 98,	  2000-04-08,	  14,		  "saturday",	  7,	  99		  ]
[ 99,	  2000-04-09,	  15,		  "sunday",	  1,	  100		  ]
[ 100,	  2000-04-10,	  15,		  "monday",	  2,	  101		  ]
[ 101,	  2000-04-11,	  15,		  "tuesday",	  3,	  102		  ]
[ 102,	  2000-04-12,	  15,		  "wednesday",	  4,	  103		  ]
[ 103,	  2000-04-13,	  15,		  "thursday",	  5,	  104		  ]
[ 104,	  2000-04-14,	  15,		  "friday",	  6,	  105		  ]
[ 105,	  2000-04-15,	  15,		  "saturday",	  7,	  106		  ]
[ 106,	  2000-04-16,	  16,		  "sunday",	  1,	  107		  ]
[ 107,	  2000-04-17,	  16,		  "monday",	  2,	  108		  ]
[ 108,	  2000-04-18,	  16,		  "tuesday",	  3,	  109		  ]
[ 109,	  2000-04-19,	  16,		  "wednesday",	  4,	  110		  ]
[ 110,	  2000-04-20,	  16,		  "thursday",	  5,	  111		  ]
[ 111,	  2000-04-21,	  16,		  "friday",	  6,	  112		  ]
[ 112,	  2000-04-22,	  16,		  "saturday",	  7,	  113		  ]
[ 113,	  2000-04-23,	  17,		  "sunday",	  1,	  114		  ]
[ 114,	  2000-04-24,	  17,		  "monday",	  2,	  115		  ]
[ 115,	  2000-04-25,	  17,		  "tuesday",	  3,	  116		  ]
[ 116,	  2000-04-26,	  17,		  "wednesday",	  4,	  117		  ]
[ 117,	  2000-04-27,	  17,		  "thursday",	  5,	  118		  ]
[ 118,	  2000-04-28,	  17,		  "friday",	  6,	  119		  ]
[ 119,	  2000-04-29,	  17,		  "saturday",	  7,	  120		  ]
[ 120,	  2000-04-30,	  18,		  "sunday",	  1,	  121		  ]
[ 121,	  2000-05-01,	  18,		  "monday",	  2,	  122		  ]
[ 122,	  2000-05-02,	  18,		  "tuesday",	  3,	  123		  ]
[ 123,	  2000-05-03,	  18,		  "wednesday",	  4,	  124		  ]
[ 124,	  2000-05-04,	  18,		  "thursday",	  5,	  125		  ]
[ 125,	  2000-05-05,	  18,		  "friday",	  6,	  126		  ]
[ 126,	  2000-05-06,	  18,		  "saturday",	  7,	  127		  ]
[ 127,	  2000-05-07,	  19,		  "sunday",	  1,	  128		  ]
[ 128,	  2000-05-08,	  19,		  "monday",	  2,	  129		  ]
[ 129,	  2000-05-09,	  19,		  "tuesday",	  3,	  130		  ]
[ 130,	  2000-05-10,	  19,		  "wednesday",	  4,	  131		  ]
[ 131,	  2000-05-11,	  19,		  "thursday",	  5,	  132		  ]
[ 132,	  2000-05-12,	  19,		  "friday",	  6,	  133		  ]
[ 133,	  2000-05-13,	  19,		  "saturday",	  7,	  134		  ]
[ 134,	  2000-05-14,	  20,		  "sunday",	  1,	  135		  ]
[ 135,	  2000-05-15,	  20,		  "monday",	  2,	  136		  ]
[ 136,	  2000-05-16,	  20,		  "tuesday",	  3,	  137		  ]
[ 137,	  2000-05-17,	  20,		  "wednesday",	  4,	  138		  ]
[ 138,	  2000-05-18,	  20,		  "thursday",	  5,	  139		  ]
[ 139,	  2000-05-19,	  20,		  "friday",	  6,	  140		  ]
[ 140,	  2000-05-20,	  20,		  "saturday",	  7,	  141		  ]
[ 141,	  2000-05-21,	  21,		  "sunday",	  1,	  142		  ]
[ 142,	  2000-05-22,	  21,		  "monday",	  2,	  143		  ]
[ 143,	  2000-05-23,	  21,		  "tuesday",	  3,	  144		  ]
[ 144,	  2000-05-24,	  21,		  "wednesday",	  4,	  145		  ]
[ 145,	  2000-05-25,	  21,		  "thursday",	  5,	  146		  ]
[ 146,	  2000-05-26,	  21,		  "friday",	  6,	  147		  ]
[ 147,	  2000-05-27,	  21,		  "saturday",	  7,	  148		  ]
[ 148,	  2000-05-28,	  22,		  "sunday",	  1,	  149		  ]
[ 149,	  2000-05-29,	  22,		  "monday",	  2,	  150		  ]
[ 150,	  2000-05-30,	  22,		  "tuesday",	  3,	  151		  ]
[ 151,	  2000-05-31,	  22,		  "wednesday",	  4,	  152		  ]
[ 152,	  2000-06-01,	  22,		  "thursday",	  5,	  153		  ]
[ 153,	  2000-06-02,	  22,		  "friday",	  6,	  154		  ]
[ 154,	  2000-06-03,	  22,		  "saturday",	  7,	  155		  ]
[ 155,	  2000-06-04,	  23,		  "sunday",	  1,	  156		  ]
[ 156,	  2000-06-05,	  23,		  "monday",	  2,	  157		  ]
[ 157,	  2000-06-06,	  23,		  "tuesday",	  3,	  158		  ]
[ 158,	  2000-06-07,	  23,		  "wednesday",	  4,	  159		  ]
[ 159,	  2000-06-08,	  23,		  "thursday",	  5,	  160		  ]
[ 160,	  2000-06-09,	  23,		  "friday",	  6,	  161		  ]
[ 161,	  2000-06-10,	  23,		  "saturday",	  7,	  162		  ]
[ 162,	  2000-06-11,	  24,		  "sunday",	  1,	  163		  ]
[ 163,	  2000-06-12,	  24,		  "monday",	  2,	  164		  ]
[ 164,	  2000-06-13,	  24,		  "tuesday",	  3,	  165		  ]
[ 165,	  2000-06-14,	  24,		  "wednesday",	  4,	  166		  ]
[ 166,	  2000-06-15,	  24,		  "thursday",	  5,	  167		  ]
[ 167,	  2000-06-16,	  24,		  "friday",	  6,	  168		  ]
[ 168,	  2000-06-17,	  24,		  "saturday",	  7,	  169		  ]
[ 169,	  2000-06-18,	  25,		  "sunday",	  1,	  170		  ]
[ 170,	  2000-06-19,	  25,		  "monday",	  2,	  171		  ]
[ 171,	  2000-06-20,	  25,		  "tuesday",	  3,	  172		  ]
[ 172,	  2000-06-21,	  25,		  "wednesday",	  4,	  173		  ]
[ 173,	  2000-06-22,	  25,		  "thursday",	  5,	  174		  ]
[ 174,	  2000-06-23,	  25,		  "friday",	  6,	  175		  ]
[ 175,	  2000-06-24,	  25,		  "saturday",	  7,	  176		  ]
[ 176,	  2000-06-25,	  26,		  "sunday",	  1,	  177		  ]
[ 177,	  2000-06-26,	  26,		  "monday",	  2,	  178		  ]
[ 178,	  2000-06-27,	  26,		  "tuesday",	  3,	  179		  ]
[ 179,	  2000-06-28,	  26,		  "wednesday",	  4,	  180		  ]
[ 180,	  2000-06-29,	  26,		  "thursday",	  5,	  181		  ]
[ 181,	  2000-06-30,	  26,		  "friday",	  6,	  182		  ]
[ 182,	  2000-07-01,	  26,		  "saturday",	  7,	  183		  ]
[ 183,	  2000-07-02,	  27,		  "sunday",	  1,	  184		  ]
[ 184,	  2000-07-03,	  27,		  "monday",	  2,	  185		  ]
[ 185,	  2000-07-04,	  27,		  "tuesday",	  3,	  186		  ]
[ 186,	  2000-07-05,	  27,		  "wednesday",	  4,	  187		  ]
[ 187,	  2000-07-06,	  27,		  "thursday",	  5,	  188		  ]
[ 188,	  2000-07-07,	  27,		  "friday",	  6,	  189		  ]
[ 189,	  2000-07-08,	  27,		  "saturday",	  7,	  190		  ]
[ 190,	  2000-07-09,	  28,		  "sunday",	  1,	  191		  ]
[ 191,	  2000-07-10,	  28,		  "monday",	  2,	  192		  ]
[ 192,	  2000-07-11,	  28,		  "tuesday",	  3,	  193		  ]
[ 193,	  2000-07-12,	  28,		  "wednesday",	  4,	  194		  ]
[ 194,	  2000-07-13,	  28,		  "thursday",	  5,	  195		  ]
[ 195,	  2000-07-14,	  28,		  "friday",	  6,	  196		  ]
[ 196,	  2000-07-15,	  28,		  "saturday",	  7,	  197		  ]
[ 197,	  2000-07-16,	  29,		  "sunday",	  1,	  198		  ]
[ 198,	  2000-07-17,	  29,		  "monday",	  2,	  199		  ]
[ 199,	  2000-07-18,	  29,		  "tuesday",	  3,	  200		  ]
[ 200,	  2000-07-19,	  29,		  "wednesday",	  4,	  201		  ]
[ 201,	  2000-07-20,	  29,		  "thursday",	  5,	  202		  ]
[ 202,	  2000-07-21,	  29,		  "friday",	  6,	  203		  ]
[ 203,	  2000-07-22,	  29,		  "saturday",	  7,	  204		  ]
[ 204,	  2000-07-23,	  30,		  "sunday",	  1,	  205		  ]
[ 205,	  2000-07-24,	  30,		  "monday",	  2,	  206		  ]
[ 206,	  2000-07-25,	  30,		  "tuesday",	  3,	  207		  ]
[ 207,	  2000-07-26,	  30,		  "wednesday",	  4,	  208		  ]
[ 208,	  2000-07-27,	  30,		  "thursday",	  5,	  209		  ]
[ 209,	  2000-07-28,	  30,		  "friday",	  6,	  210		  ]
[ 210,	  2000-07-29,	  30,		  "saturday",	  7,	  211		  ]
[ 211,	  2000-07-30,	  31,		  "sunday",	  1,	  212		  ]
[ 212,	  2000-07-31,	  31,		  "monday",	  2,	  213		  ]
[ 213,	  2000-08-01,	  31,		  "tuesday",	  3,	  214		  ]
[ 214,	  2000-08-02,	  31,		  "wednesday",	  4,	  215		  ]
[ 215,	  2000-08-03,	  31,		  "thursday",	  5,	  216		  ]
[ 216,	  2000-08-04,	  31,		  "friday",	  6,	  217		  ]
[ 217,	  2000-08-05,	  31,		  "saturday",	  7,	  218		  ]
[ 218,	  2000-08-06,	  32,		  "sunday",	  1,	  219		  ]
[ 219,	  2000-08-07,	  32,		  "monday",	  2,	  220		  ]
[ 220,	  2000-08-08,	  32,		  "tuesday",	  3,	  221		  ]
[ 221,	  2000-08-09,	  32,		  "wednesday",	  4,	  222		  ]
[ 222,	  2000-08-10,	  32,		  "thursday",	  5,	  223		  ]
[ 223,	  2000-08-11,	  32,		  "friday",	  6,	  224		  ]
[ 224,	  2000-08-12,	  32,		  "saturday",	  7,	  225		  ]
[ 225,	  2000-08-13,	  33,		  "sunday",	  1,	  226		  ]
[ 226,	  2000-08-14,	  33,		  "monday",	  2,	  227		  ]
[ 227,	  2000-08-15,	  33,		  "tuesday",	  3,	  228		  ]
[ 228,	  2000-08-16,	  33,		  "wednesday",	  4,	  229		  ]
[ 229,	  2000-08-17,	  33,		  "thursday",	  5,	  230		  ]
[ 230,	  2000-08-18,	  33,		  "friday",	  6,	  231		  ]
[ 231,	  2000-08-19,	  33,		  "saturday",	  7,	  232		  ]
[ 232,	  2000-08-20,	  34,		  "sunday",	  1,	  233		  ]
[ 233,	  2000-08-21,	  34,		  "monday",	  2,	  234		  ]
[ 234,	  2000-08-22,	  34,		  "tuesday",	  3,	  235		  ]
[ 235,	  2000-08-23,	  34,		  "wednesday",	  4,	  236		  ]
[ 236,	  2000-08-24,	  34,		  "thursday",	  5,	  237		  ]
[ 237,	  2000-08-25,	  34,		  "friday",	  6,	  238		  ]
[ 238,	  2000-08-26,	  34,		  "saturday",	  7,	  239		  ]
[ 239,	  2000-08-27,	  35,		  "sunday",	  1,	  240		  ]
[ 240,	  2000-08-28,	  35,		  "monday",	  2,	  241		  ]
[ 241,	  2000-08-29,	  35,		  "tuesday",	  3,	  242		  ]
[ 242,	  2000-08-30,	  35,		  "wednesday",	  4,	  243		  ]
[ 243,	  2000-08-31,	  35,		  "thursday",	  5,	  244		  ]
[ 244,	  2000-09-01,	  35,		  "friday",	  6,	  245		  ]
[ 245,	  2000-09-02,	  35,		  "saturday",	  7,	  246		  ]
[ 246,	  2000-09-03,	  36,		  "sunday",	  1,	  247		  ]
[ 247,	  2000-09-04,	  36,		  "monday",	  2,	  248		  ]
[ 248,	  2000-09-05,	  36,		  "tuesday",	  3,	  249		  ]
[ 249,	  2000-09-06,	  36,		  "wednesday",	  4,	  250		  ]
[ 250,	  2000-09-07,	  36,		  "thursday",	  5,	  251		  ]
[ 251,	  2000-09-08,	  36,		  "friday",	  6,	  252		  ]
[ 252,	  2000-09-09,	  36,		  "saturday",	  7,	  253		  ]
[ 253,	  2000-09-10,	  37,		  "sunday",	  1,	  254		  ]
[ 254,	  2000-09-11,	  37,		  "monday",	  2,	  255		  ]
[ 255,	  2000-09-12,	  37,		  "tuesday",	  3,	  256		  ]
[ 256,	  2000-09-13,	  37,		  "wednesday",	  4,	  257		  ]
[ 257,	  2000-09-14,	  37,		  "thursday",	  5,	  258		  ]
[ 258,	  2000-09-15,	  37,		  "friday",	  6,	  259		  ]
[ 259,	  2000-09-16,	  37,		  "saturday",	  7,	  260		  ]
[ 260,	  2000-09-17,	  38,		  "sunday",	  1,	  261		  ]
[ 261,	  2000-09-18,	  38,		  "monday",	  2,	  262		  ]
[ 262,	  2000-09-19,	  38,		  "tuesday",	  3,	  263		  ]
[ 263,	  2000-09-20,	  38,		  "wednesday",	  4,	  264		  ]
[ 264,	  2000-09-21,	  38,		  "thursday",	  5,	  265		  ]
[ 265,	  2000-09-22,	  38,		  "friday",	  6,	  266		  ]
[ 266,	  2000-09-23,	  38,		  "saturday",	  7,	  267		  ]
[ 267,	  2000-09-24,	  39,		  "sunday",	  1,	  268		  ]
[ 268,	  2000-09-25,	  39,		  "monday",	  2,	  269		  ]
[ 269,	  2000-09-26,	  39,		  "tuesday",	  3,	  270		  ]
[ 270,	  2000-09-27,	  39,		  "wednesday",	  4,	  271		  ]
[ 271,	  2000-09-28,	  39,		  "thursday",	  5,	  272		  ]
[ 272,	  2000-09-29,	  39,		  "friday",	  6,	  273		  ]
[ 273,	  2000-09-30,	  39,		  "saturday",	  7,	  274		  ]
[ 274,	  2000-10-01,	  40,		  "sunday",	  1,	  275		  ]
[ 275,	  2000-10-02,	  40,		  "monday",	  2,	  276		  ]
[ 276,	  2000-10-03,	  40,		  "tuesday",	  3,	  277		  ]
[ 277,	  2000-10-04,	  40,		  "wednesday",	  4,	  278		  ]
[ 278,	  2000-10-05,	  40,		  "thursday",	  5,	  279		  ]
[ 279,	  2000-10-06,	  40,		  "friday",	  6,	  280		  ]
[ 280,	  2000-10-07,	  40,		  "saturday",	  7,	  281		  ]
[ 281,	  2000-10-08,	  41,		  "sunday",	  1,	  282		  ]
[ 282,	  2000-10-09,	  41,		  "monday",	  2,	  283		  ]
[ 283,	  2000-10-10,	  41,		  "tuesday",	  3,	  284		  ]
[ 284,	  2000-10-11,	  41,		  "wednesday",	  4,	  285		  ]
[ 285,	  2000-10-12,	  41,		  "thursday",	  5,	  286		  ]
[ 286,	  2000-10-13,	  41,		  "friday",	  6,	  287		  ]
[ 287,	  2000-10-14,	  41,		  "saturday",	  7,	  288		  ]
[ 288,	  2000-10-15,	  42,		  "sunday",	  1,	  289		  ]
[ 289,	  2000-10-16,	  42,		  "monday",	  2,	  290		  ]
[ 290,	  2000-10-17,	  42,		  "tuesday",	  3,	  291		  ]
[ 291,	  2000-10-18,	  42,		  "wednesday",	  4,	  292		  ]
[ 292,	  2000-10-19,	  42,		  "thursday",	  5,	  293		  ]
[ 293,	  2000-10-20,	  42,		  "friday",	  6,	  294		  ]
[ 294,	  2000-10-21,	  42,		  "saturday",	  7,	  295		  ]
[ 295,	  2000-10-22,	  43,		  "sunday",	  1,	  296		  ]
[ 296,	  2000-10-23,	  43,		  "monday",	  2,	  297		  ]
[ 297,	  2000-10-24,	  43,		  "tuesday",	  3,	  298		  ]
[ 298,	  2000-10-25,	  43,		  "wednesday",	  4,	  299		  ]
[ 299,	  2000-10-26,	  43,		  "thursday",	  5,	  300		  ]
[ 300,	  2000-10-27,	  43,		  "friday",	  6,	  301		  ]
[ 301,	  2000-10-28,	  43,		  "saturday",	  7,	  302		  ]
[ 302,	  2000-10-29,	  44,		  "sunday",	  1,	  303		  ]
[ 303,	  2000-10-30,	  44,		  "monday",	  2,	  304		  ]
[ 304,	  2000-10-31,	  44,		  "tuesday",	  3,	  305		  ]
[ 305,	  2000-11-01,	  44,		  "wednesday",	  4,	  306		  ]
[ 306,	  2000-11-02,	  44,		  "thursday",	  5,	  307		  ]
[ 307,	  2000-11-03,	  44,		  "friday",	  6,	  308		  ]
[ 308,	  2000-11-04,	  44,		  "saturday",	  7,	  309		  ]
[ 309,	  2000-11-05,	  45,		  "sunday",	  1,	  310		  ]
[ 310,	  2000-11-06,	  45,		  "monday",	  2,	  311		  ]
[ 311,	  2000-11-07,	  45,		  "tuesday",	  3,	  312		  ]
[ 312,	  2000-11-08,	  45,		  "wednesday",	  4,	  313		  ]
[ 313,	  2000-11-09,	  45,		  "thursday",	  5,	  314		  ]
[ 314,	  2000-11-10,	  45,		  "friday",	  6,	  315		  ]
[ 315,	  2000-11-11,	  45,		  "saturday",	  7,	  316		  ]
[ 316,	  2000-11-12,	  46,		  "sunday",	  1,	  317		  ]
[ 317,	  2000-11-13,	  46,		  "monday",	  2,	  318		  ]
[ 318,	  2000-11-14,	  46,		  "tuesday",	  3,	  319		  ]
[ 319,	  2000-11-15,	  46,		  "wednesday",	  4,	  320		  ]
[ 320,	  2000-11-16,	  46,		  "thursday",	  5,	  321		  ]
[ 321,	  2000-11-17,	  46,		  "friday",	  6,	  322		  ]
[ 322,	  2000-11-18,	  46,		  "saturday",	  7,	  323		  ]
[ 323,	  2000-11-19,	  47,		  "sunday",	  1,	  324		  ]
[ 324,	  2000-11-20,	  47,		  "monday",	  2,	  325		  ]
[ 325,	  2000-11-21,	  47,		  "tuesday",	  3,	  326		  ]
[ 326,	  2000-11-22,	  47,		  "wednesday",	  4,	  327		  ]
[ 327,	  2000-11-23,	  47,		  "thursday",	  5,	  328		  ]
[ 328,	  2000-11-24,	  47,		  "friday",	  6,	  329		  ]
[ 329,	  2000-11-25,	  47,		  "saturday",	  7,	  330		  ]
[ 330,	  2000-11-26,	  48,		  "sunday",	  1,	  331		  ]
[ 331,	  2000-11-27,	  48,		  "monday",	  2,	  332		  ]
[ 332,	  2000-11-28,	  48,		  "tuesday",	  3,	  333		  ]
[ 333,	  2000-11-29,	  48,		  "wednesday",	  4,	  334		  ]
[ 334,	  2000-11-30,	  48,		  "thursday",	  5,	  335		  ]
[ 335,	  2000-12-01,	  48,		  "friday",	  6,	  336		  ]
[ 336,	  2000-12-02,	  48,		  "saturday",	  7,	  337		  ]
[ 337,	  2000-12-03,	  49,		  "sunday",	  1,	  338		  ]
[ 338,	  2000-12-04,	  49,		  "monday",	  2,	  339		  ]
[ 339,	  2000-12-05,	  49,		  "tuesday",	  3,	  340		  ]
[ 340,	  2000-12-06,	  49,		  "wednesday",	  4,	  341		  ]
[ 341,	  2000-12-07,	  49,		  "thursday",	  5,	  342		  ]
[ 342,	  2000-12-08,	  49,		  "friday",	  6,	  343		  ]
[ 343,	  2000-12-09,	  49,		  "saturday",	  7,	  344		  ]
[ 344,	  2000-12-10,	  50,		  "sunday",	  1,	  345		  ]
[ 345,	  2000-12-11,	  50,		  "monday",	  2,	  346		  ]
[ 346,	  2000-12-12,	  50,		  "tuesday",	  3,	  347		  ]
[ 347,	  2000-12-13,	  50,		  "wednesday",	  4,	  348		  ]
[ 348,	  2000-12-14,	  50,		  "thursday",	  5,	  349		  ]
[ 349,	  2000-12-15,	  50,		  "friday",	  6,	  350		  ]
[ 350,	  2000-12-16,	  50,		  "saturday",	  7,	  351		  ]
[ 351,	  2000-12-17,	  51,		  "sunday",	  1,	  352		  ]
[ 352,	  2000-12-18,	  51,		  "monday",	  2,	  353		  ]
[ 353,	  2000-12-19,	  51,		  "tuesday",	  3,	  354		  ]
[ 354,	  2000-12-20,	  51,		  "wednesday",	  4,	  355		  ]
[ 355,	  2000-12-21,	  51,		  "thursday",	  5,	  356		  ]
[ 356,	  2000-12-22,	  51,		  "friday",	  6,	  357		  ]
[ 357,	  2000-12-23,	  51,		  "saturday",	  7,	  358		  ]
[ 358,	  2000-12-24,	  52,		  "sunday",	  1,	  359		  ]
[ 359,	  2000-12-25,	  52,		  "monday",	  2,	  360		  ]
[ 360,	  2000-12-26,	  52,		  "tuesday",	  3,	  361		  ]
[ 361,	  2000-12-27,	  52,		  "wednesday",	  4,	  362		  ]
[ 362,	  2000-12-28,	  52,		  "thursday",	  5,	  363		  ]
[ 363,	  2000-12-29,	  52,		  "friday",	  6,	  364		  ]
[ 364,	  2000-12-30,	  52,		  "saturday",	  7,	  365		  ]
[ 365,	  2000-12-31,	  53,		  "sunday",	  1,	  366		  ]
[ 366,	  2001-01-01,	  1,		  "monday",	  2,	  1		  ]
[ 367,	  2001-01-02,	  1,		  "tuesday",	  3,	  2		  ]
[ 368,	  2001-01-03,	  1,		  "wednesday",	  4,	  3		  ]
[ 369,	  2001-01-04,	  1,		  "thursday",	  5,	  4		  ]
[ 370,	  2001-01-05,	  1,		  "friday",	  6,	  5		  ]
[ 371,	  2001-01-06,	  1,		  "saturday",	  7,	  6		  ]
[ 372,	  2001-01-07,	  2,		  "sunday",	  1,	  7		  ]
[ 373,	  2001-01-08,	  2,		  "monday",	  2,	  8		  ]
[ 374,	  2001-01-09,	  2,		  "tuesday",	  3,	  9		  ]
[ "daytime_bat,bh_a,dh_a,fh_a,hh_a" ]
#---------------------------------------------------------------------------------#
# h	daytime		hours	minutes		seconds		milliseconds	  # name
# oid	daytime	int	int		int		int		  # type
#---------------------------------------------------------------------------------#
[ 0@0,	  23:59:59.999,	  23,	  59,		  59,		  999		  ]
[ 1@0,	  23:59:00.000,	  23,	  59,		  0,		  0		  ]
[ 2@0,	  00:00:00.000,	  0,	  0,		  0,		  0		  ]
[ 3@0,	  23:59:59.000,	  23,	  59,		  59,		  0		  ]
[ 4@0,	  00:00:00.000,	  0,	  0,		  0,		  0		  ]
[ 5@0,	  00:00:00.000,	  0,	  0,		  0,		  0		  ]
[ 6@0,	  00:00:00.001,	  0,	  0,		  0,		  1		  ]
[ 7@0,	  03:49:02.999,	  3,	  49,		  2,		  999		  ]
[ 8@0,	  20:48:42.999,	  20,	  48,		  42,		  999		  ]
[ 9@0,	  17:53:38.999,	  17,	  53,		  38,		  999		  ]
[ 10@0,	  13:15:34.999,	  13,	  15,		  34,		  999		  ]
[ 11@0,	  07:34:27.999,	  7,	  34,		  27,		  999		  ]
[ 12@0,	  23:59:59.999,	  23,	  59,		  59,		  999		  ]
[ 13@0,	  01:00:03.999,	  1,	  0,		  3,		  999		  ]
[ 14@0,	  23:59:59.999,	  23,	  59,		  59,		  999		  ]
[ 15@0,	  nil,		  nil,	  nil,		  nil,		  nil		  ]
[ 16@0,	  nil,		  nil,	  nil,		  nil,		  nil		  ]
[ 17@0,	  nil,		  nil,	  nil,		  nil,		  nil		  ]
[ 18@0,	  nil,		  nil,	  nil,		  nil,		  nil		  ]
[ 19@0,	  nil,		  nil,	  nil,		  nil,		  nil		  ]
[ "print(timestamp_bat,mh_a,oh_a)" ]
#-------------------------------------------------------------------------#
# h	timestamp			date		daytime		  # name
# oid	timestamp			date		daytime	  # type
#-------------------------------------------------------------------------#
[ 0@0,	  2000-01-01 23:59:59.999,	  2000-01-01,	  23:59:59.999	  ]
[ 1@0,	  5000-01-01 22:59:00.000,	  5000-01-01,	  23:59:00.000	  ]
[ 2@0,	  1968-02-28 23:00:00.000,	  1968-02-29,	  00:00:00.000	  ]
[ 3@0,	  1-03-01 21:59:59.000,		  1-03-01,	  23:59:59.000	  ]
[ 4@0,	  -5867411-01-01 00:00:00.000,	  -5867411-01-01, 00:00:00.000	  ]
[ 5@0,	  -768-10-01 01:37:00.000,	  -768-10-01,	  00:00:00.000	  ]
[ 6@0,	  nil,				  nil,		  nil		  ]
[ 7@0,	  -1999-05-31 03:49:02.999,	  -1999-06-01,	  03:49:02.999	  ]
[ 8@0,	  2000-07-15 20:24:42.999,	  2000-07-14,	  20:48:42.999	  ]
[ 9@0,	  1999-09-01 17:53:38.999,	  1999-09-01,	  17:53:38.999	  ]
[ 10@0,	  1998-12-01 14:15:34.999,	  1998-12-01,	  13:15:34.999	  ]
[ 11@0,	  1953-04-30 07:35:27.999,	  1953-05-01,	  07:34:27.999	  ]
[ 12@0,	  5867411-12-31 22:59:59.999,	  5867411-12-31,  23:59:59.999	  ]
[ 13@0,	  nil,				  nil,		  nil		  ]
[ 15@0,	  nil,				  nil,		  nil		  ]
[ "print(timezones)" ]
#-------------------------------------------------------------------------------------------------------------------------#
# h			timezones											  # name
# str			tzone												  # type
#-------------------------------------------------------------------------------------------------------------------------#
[ "Wake Island",	  GMT+12:00											  ]
[ "Melbourne/Australia",  GMT+11:00											  ]
[ "Brisbane/Australia",	  GMT+10:00											  ]
[ "Japan",		  GMT+09:00											  ]
[ "Singapore",		  GMT+08:00											  ]
[ "Thailand",		  GMT+07:00											  ]
[ "Pakistan",		  GMT+05:00											  ]
[ "United Arab Emirates", GMT+04:00											  ]
[ "GMT",		  GMT												  ]
[ "Azore Islands",	  GMT-01:00											  ]
[ "Hawaii/USA",		  GMT-10:00											  ]
[ "American Samoa",	  GMT-11:00											  ]
[ "Kazakhstan",		  GMT+06:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "Moscow/Russia",	  GMT+03:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "East/Europe",	  GMT+02:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "West/Europe",	  GMT+01:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "UK",			  GMT-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]		  ]
[ "Eastern/Brazil",	  GMT-02:00-DST[first sunday from end of october@02:01,first sunday from end of march@02:01]	  ]
[ "Western/Brazil",	  GMT-03:00-DST[first sunday from end of october@02:01,first sunday from end of march@02:01]	  ]
[ "Andes/Brazil",	  GMT-04:00-DST[first sunday from end of october@02:01,first sunday from end of march@02:01]	  ]
[ "East/USA",		  GMT-05:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "Central/USA",	  GMT-06:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "Mountain/USA",	  GMT-07:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "Alaska/USA",		  GMT-09:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "print(timestamp_bat,th_a,wh_a,yh_a,ci_a)" ]
#---------------------------------------------------------------------------------------------------------#
# h	timestamp			Wake Island	tmp_66		American Samoa	tmp_68		  # name
# oid	timestamp			date		daytime	date		daytime	  # type
#---------------------------------------------------------------------------------------------------------#
[ 0@0,	  2000-01-01 23:59:59.999,	  2000-01-02,	  11:59:59.999,	  2000-01-01,	  12:59:59.999	  ]
[ 1@0,	  5000-01-01 22:59:00.000,	  5000-01-02,	  10:59:00.000,	  5000-01-01,	  11:59:00.000	  ]
[ 2@0,	  1968-02-28 23:00:00.000,	  1968-02-29,	  11:00:00.000,	  1968-02-28,	  12:00:00.000	  ]
[ 3@0,	  1-03-01 21:59:59.000,		  1-03-02,	  09:59:59.000,	  1-03-01,	  10:59:59.000	  ]
[ 4@0,	  -5867411-01-01 00:00:00.000,	  -5867411-01-01, 12:00:00.000,	  nil,		  nil		  ]
[ 5@0,	  -768-10-01 01:37:00.000,	  -768-10-01,	  13:37:00.000,	  -768-09-30,	  14:37:00.000	  ]
[ 6@0,	  nil,				  nil,		  nil,		  nil,		  nil		  ]
[ 7@0,	  -1999-05-31 03:49:02.999,	  -1999-05-31,	  15:49:02.999,	  -1999-05-30,	  16:49:02.999	  ]
[ 8@0,	  2000-07-15 20:24:42.999,	  2000-07-16,	  08:24:42.999,	  2000-07-15,	  09:24:42.999	  ]
[ 9@0,	  1999-09-01 17:53:38.999,	  1999-09-02,	  05:53:38.999,	  1999-09-01,	  06:53:38.999	  ]
[ 10@0,	  1998-12-01 14:15:34.999,	  1998-12-02,	  02:15:34.999,	  1998-12-01,	  03:15:34.999	  ]
[ 11@0,	  1953-04-30 07:35:27.999,	  1953-04-30,	  19:35:27.999,	  1953-04-29,	  20:35:27.999	  ]
[ 12@0,	  5867411-12-31 22:59:59.999,	  nil,		  nil,		  5867411-12-31,  11:59:59.999	  ]
[ 13@0,	  nil,				  nil,		  nil,		  nil,		  nil		  ]
[ 15@0,	  nil,				  nil,		  nil,		  nil,		  nil		  ]
[ "print(timestamp_bat,timestamp_plus,timestamp_minus,ri_a)" ]
#-----------------------------------------------------------------------------------------------------------------#
# h	timestamp			plus23				min1				diff	  # name
# oid	timestamp			timestamp			timestamp			lng	  # type
#-----------------------------------------------------------------------------------------------------------------#
[ 0@0,	  2000-01-01 23:59:59.999,	  2000-01-02 22:59:59.999,	  2000-01-01 23:58:59.999,	  23	  ]
[ 1@0,	  5000-01-01 22:59:00.000,	  5000-01-02 21:59:00.000,	  5000-01-01 22:58:00.000,	  23	  ]
[ 2@0,	  1968-02-28 23:00:00.000,	  1968-02-29 22:00:00.000,	  1968-02-28 22:59:00.000,	  23	  ]
[ 3@0,	  1-03-01 21:59:59.000,		  1-03-02 20:59:59.000,		  1-03-01 21:58:59.000,		  23	  ]
[ 4@0,	  -5867411-01-01 00:00:00.000,	  -5867411-01-01 23:00:00.000,	  nil,				  nil	  ]
[ 5@0,	  -768-10-01 01:37:00.000,	  -768-10-02 00:37:00.000,	  -768-10-01 01:36:00.000,	  23	  ]
[ 6@0,	  nil,				  nil,				  nil,				  nil	  ]
[ 7@0,	  -1999-05-31 03:49:02.999,	  -1999-06-01 02:49:02.999,	  -1999-05-31 03:48:02.999,	  23	  ]
[ 8@0,	  2000-07-15 20:24:42.999,	  2000-07-16 19:24:42.999,	  2000-07-15 20:23:42.999,	  23	  ]
[ 9@0,	  1999-09-01 17:53:38.999,	  1999-09-02 16:53:38.999,	  1999-09-01 17:52:38.999,	  23	  ]
[ 10@0,	  1998-12-01 14:15:34.999,	  1998-12-02 13:15:34.999,	  1998-12-01 14:14:34.999,	  23	  ]
[ 11@0,	  1953-04-30 07:35:27.999,	  1953-05-01 06:35:27.999,	  1953-04-30 07:34:27.999,	  23	  ]
[ 12@0,	  5867411-12-31 22:59:59.999,	  nil,				  5867411-12-31 22:58:59.999,	  nil	  ]
[ 13@0,	  nil,				  nil,				  nil,				  nil	  ]
[ 15@0,	  nil,				  nil,				  nil,				  nil	  ]
[ "print(date_seq,yi_a,timestamp_eur,dj_a,timestamp_bra,hj_a)" ]
#-------------------------------------------------------------------------------------------------------------------------#
# h	date		day		West/Europe			dst	Andes/Brazil			dst	  # name
# int	date		str		timestamp			bit	timestamp			bit	  # type
#-------------------------------------------------------------------------------------------------------------------------#
[ -374,	  1998-12-23,	  "wednesday",	  1998-12-23 22:59:59.999,	  false,  1998-12-24 02:59:59.999,	  true	  ]
[ -373,	  1998-12-24,	  "thursday",	  1998-12-24 22:59:59.999,	  false,  1998-12-25 02:59:59.999,	  true	  ]
[ -372,	  1998-12-25,	  "friday",	  1998-12-25 22:59:59.999,	  false,  1998-12-26 02:59:59.999,	  true	  ]
[ -371,	  1998-12-26,	  "saturday",	  1998-12-26 22:59:59.999,	  false,  1998-12-27 02:59:59.999,	  true	  ]
[ -370,	  1998-12-27,	  "sunday",	  1998-12-27 22:59:59.999,	  false,  1998-12-28 02:59:59.999,	  true	  ]
[ -369,	  1998-12-28,	  "monday",	  1998-12-28 22:59:59.999,	  false,  1998-12-29 02:59:59.999,	  true	  ]
[ -368,	  1998-12-29,	  "tuesday",	  1998-12-29 22:59:59.999,	  false,  1998-12-30 02:59:59.999,	  true	  ]
[ -367,	  1998-12-30,	  "wednesday",	  1998-12-30 22:59:59.999,	  false,  1998-12-31 02:59:59.999,	  true	  ]
[ -366,	  1998-12-31,	  "thursday",	  1998-12-31 22:59:59.999,	  false,  1999-01-01 02:59:59.999,	  true	  ]
[ -365,	  1999-01-01,	  "friday",	  1999-01-01 22:59:59.999,	  false,  1999-01-02 02:59:59.999,	  true	  ]
[ -364,	  1999-01-02,	  "saturday",	  1999-01-02 22:59:59.999,	  false,  1999-01-03 02:59:59.999,	  true	  ]
[ -363,	  1999-01-03,	  "sunday",	  1999-01-03 22:59:59.999,	  false,  1999-01-04 02:59:59.999,	  true	  ]
[ -362,	  1999-01-04,	  "monday",	  1999-01-04 22:59:59.999,	  false,  1999-01-05 02:59:59.999,	  true	  ]
[ -361,	  1999-01-05,	  "tuesday",	  1999-01-05 22:59:59.999,	  false,  1999-01-06 02:59:59.999,	  true	  ]
[ -360,	  1999-01-06,	  "wednesday",	  1999-01-06 22:59:59.999,	  false,  1999-01-07 02:59:59.999,	  true	  ]
[ -359,	  1999-01-07,	  "thursday",	  1999-01-07 22:59:59.999,	  false,  1999-01-08 02:59:59.999,	  true	  ]
[ -358,	  1999-01-08,	  "friday",	  1999-01-08 22:59:59.999,	  false,  1999-01-09 02:59:59.999,	  true	  ]
[ -357,	  1999-01-09,	  "saturday",	  1999-01-09 22:59:59.999,	  false,  1999-01-10 02:59:59.999,	  true	  ]
[ -356,	  1999-01-10,	  "sunday",	  1999-01-10 22:59:59.999,	  false,  1999-01-11 02:59:59.999,	  true	  ]
[ -355,	  1999-01-11,	  "monday",	  1999-01-11 22:59:59.999,	  false,  1999-01-12 02:59:59.999,	  true	  ]
[ -354,	  1999-01-12,	  "tuesday",	  1999-01-12 22:59:59.999,	  false,  1999-01-13 02:59:59.999,	  true	  ]
[ -353,	  1999-01-13,	  "wednesday",	  1999-01-13 22:59:59.999,	  false,  1999-01-14 02:59:59.999,	  true	  ]
[ -352,	  1999-01-14,	  "thursday",	  1999-01-14 22:59:59.999,	  false,  1999-01-15 02:59:59.999,	  true	  ]
[ -351,	  1999-01-15,	  "friday",	  1999-01-15 22:59:59.999,	  false,  1999-01-16 02:59:59.999,	  true	  ]
[ -350,	  1999-01-16,	  "saturday",	  1999-01-16 22:59:59.999,	  false,  1999-01-17 02:59:59.999,	  true	  ]
[ -349,	  1999-01-17,	  "sunday",	  1999-01-17 22:59:59.999,	  false,  1999-01-18 02:59:59.999,	  true	  ]
[ -348,	  1999-01-18,	  "monday",	  1999-01-18 22:59:59.999,	  false,  1999-01-19 02:59:59.999,	  true	  ]
[ -347,	  1999-01-19,	  "tuesday",	  1999-01-19 22:59:59.999,	  false,  1999-01-20 02:59:59.999,	  true	  ]
[ -346,	  1999-01-20,	  "wednesday",	  1999-01-20 22:59:59.999,	  false,  1999-01-21 02:59:59.999,	  true	  ]
[ -345,	  1999-01-21,	  "thursday",	  1999-01-21 22:59:59.999,	  false,  1999-01-22 02:59:59.999,	  true	  ]
[ -344,	  1999-01-22,	  "friday",	  1999-01-22 22:59:59.999,	  false,  1999-01-23 02:59:59.999,	  true	  ]
[ -343,	  1999-01-23,	  "saturday",	  1999-01-23 22:59:59.999,	  false,  1999-01-24 02:59:59.999,	  true	  ]
[ -342,	  1999-01-24,	  "sunday",	  1999-01-24 22:59:59.999,	  false,  1999-01-25 02:59:59.999,	  true	  ]
[ -341,	  1999-01-25,	  "monday",	  1999-01-25 22:59:59.999,	  false,  1999-01-26 02:59:59.999,	  true	  ]
[ -340,	  1999-01-26,	  "tuesday",	  1999-01-26 22:59:59.999,	  false,  1999-01-27 02:59:59.999,	  true	  ]
[ -339,	  1999-01-27,	  "wednesday",	  1999-01-27 22:59:59.999,	  false,  1999-01-28 02:59:59.999,	  true	  ]
[ -338,	  1999-01-28,	  "thursday",	  1999-01-28 22:59:59.999,	  false,  1999-01-29 02:59:59.999,	  true	  ]
[ -337,	  1999-01-29,	  "friday",	  1999-01-29 22:59:59.999,	  false,  1999-01-30 02:59:59.999,	  true	  ]
[ -336,	  1999-01-30,	  "saturday",	  1999-01-30 22:59:59.999,	  false,  1999-01-31 02:59:59.999,	  true	  ]
[ -335,	  1999-01-31,	  "sunday",	  1999-01-31 22:59:59.999,	  false,  1999-02-01 02:59:59.999,	  true	  ]
[ -334,	  1999-02-01,	  "monday",	  1999-02-01 22:59:59.999,	  false,  1999-02-02 02:59:59.999,	  true	  ]
[ -333,	  1999-02-02,	  "tuesday",	  1999-02-02 22:59:59.999,	  false,  1999-02-03 02:59:59.999,	  true	  ]
[ -332,	  1999-02-03,	  "wednesday",	  1999-02-03 22:59:59.999,	  false,  1999-02-04 02:59:59.999,	  true	  ]
[ -331,	  1999-02-04,	  "thursday",	  1999-02-04 22:59:59.999,	  false,  1999-02-05 02:59:59.999,	  true	  ]
[ -330,	  1999-02-05,	  "friday",	  1999-02-05 22:59:59.999,	  false,  1999-02-06 02:59:59.999,	  true	  ]
[ -329,	  1999-02-06,	  "saturday",	  1999-02-06 22:59:59.999,	  false,  1999-02-07 02:59:59.999,	  true	  ]
[ -328,	  1999-02-07,	  "sunday",	  1999-02-07 22:59:59.999,	  false,  1999-02-08 02:59:59.999,	  true	  ]
[ -327,	  1999-02-08,	  "monday",	  1999-02-08 22:59:59.999,	  false,  1999-02-09 02:59:59.999,	  true	  ]
[ -326,	  1999-02-09,	  "tuesday",	  1999-02-09 22:59:59.999,	  false,  1999-02-10 02:59:59.999,	  true	  ]
[ -325,	  1999-02-10,	  "wednesday",	  1999-02-10 22:59:59.999,	  false,  1999-02-11 02:59:59.999,	  true	  ]
[ -324,	  1999-02-11,	  "thursday",	  1999-02-11 22:59:59.999,	  false,  1999-02-12 02:59:59.999,	  true	  ]
[ -323,	  1999-02-12,	  "friday",	  1999-02-12 22:59:59.999,	  false,  1999-02-13 02:59:59.999,	  true	  ]
[ -322,	  1999-02-13,	  "saturday",	  1999-02-13 22:59:59.999,	  false,  1999-02-14 02:59:59.999,	  true	  ]
[ -321,	  1999-02-14,	  "sunday",	  1999-02-14 22:59:59.999,	  false,  1999-02-15 02:59:59.999,	  true	  ]
[ -320,	  1999-02-15,	  "monday",	  1999-02-15 22:59:59.999,	  false,  1999-02-16 02:59:59.999,	  true	  ]
[ -319,	  1999-02-16,	  "tuesday",	  1999-02-16 22:59:59.999,	  false,  1999-02-17 02:59:59.999,	  true	  ]
[ -318,	  1999-02-17,	  "wednesday",	  1999-02-17 22:59:59.999,	  false,  1999-02-18 02:59:59.999,	  true	  ]
[ -317,	  1999-02-18,	  "thursday",	  1999-02-18 22:59:59.999,	  false,  1999-02-19 02:59:59.999,	  true	  ]
[ -316,	  1999-02-19,	  "friday",	  1999-02-19 22:59:59.999,	  false,  1999-02-20 02:59:59.999,	  true	  ]
[ -315,	  1999-02-20,	  "saturday",	  1999-02-20 22:59:59.999,	  false,  1999-02-21 02:59:59.999,	  true	  ]
[ -314,	  1999-02-21,	  "sunday",	  1999-02-21 22:59:59.999,	  false,  1999-02-22 02:59:59.999,	  true	  ]
[ -313,	  1999-02-22,	  "monday",	  1999-02-22 22:59:59.999,	  false,  1999-02-23 02:59:59.999,	  true	  ]
[ -312,	  1999-02-23,	  "tuesday",	  1999-02-23 22:59:59.999,	  false,  1999-02-24 02:59:59.999,	  true	  ]
[ -311,	  1999-02-24,	  "wednesday",	  1999-02-24 22:59:59.999,	  false,  1999-02-25 02:59:59.999,	  true	  ]
[ -310,	  1999-02-25,	  "thursday",	  1999-02-25 22:59:59.999,	  false,  1999-02-26 02:59:59.999,	  true	  ]
[ -309,	  1999-02-26,	  "friday",	  1999-02-26 22:59:59.999,	  false,  1999-02-27 02:59:59.999,	  true	  ]
[ -308,	  1999-02-27,	  "saturday",	  1999-02-27 22:59:59.999,	  false,  1999-02-28 02:59:59.999,	  true	  ]
[ -307,	  1999-02-28,	  "sunday",	  1999-02-28 22:59:59.999,	  false,  1999-03-01 02:59:59.999,	  true	  ]
[ -306,	  1999-03-01,	  "monday",	  1999-03-01 22:59:59.999,	  false,  1999-03-02 02:59:59.999,	  true	  ]
[ -305,	  1999-03-02,	  "tuesday",	  1999-03-02 22:59:59.999,	  false,  1999-03-03 02:59:59.999,	  true	  ]
[ -304,	  1999-03-03,	  "wednesday",	  1999-03-03 22:59:59.999,	  false,  1999-03-04 02:59:59.999,	  true	  ]
[ -303,	  1999-03-04,	  "thursday",	  1999-03-04 22:59:59.999,	  false,  1999-03-05 02:59:59.999,	  true	  ]
[ -302,	  1999-03-05,	  "friday",	  1999-03-05 22:59:59.999,	  false,  1999-03-06 02:59:59.999,	  true	  ]
[ -301,	  1999-03-06,	  "saturday",	  1999-03-06 22:59:59.999,	  false,  1999-03-07 02:59:59.999,	  true	  ]
[ -300,	  1999-03-07,	  "sunday",	  1999-03-07 22:59:59.999,	  false,  1999-03-08 02:59:59.999,	  true	  ]
[ -299,	  1999-03-08,	  "monday",	  1999-03-08 22:59:59.999,	  false,  1999-03-09 02:59:59.999,	  true	  ]
[ -298,	  1999-03-09,	  "tuesday",	  1999-03-09 22:59:59.999,	  false,  1999-03-10 02:59:59.999,	  true	  ]
[ -297,	  1999-03-10,	  "wednesday",	  1999-03-10 22:59:59.999,	  false,  1999-03-11 02:59:59.999,	  true	  ]
[ -296,	  1999-03-11,	  "thursday",	  1999-03-11 22:59:59.999,	  false,  1999-03-12 02:59:59.999,	  true	  ]
[ -295,	  1999-03-12,	  "friday",	  1999-03-12 22:59:59.999,	  false,  1999-03-13 02:59:59.999,	  true	  ]
[ -294,	  1999-03-13,	  "saturday",	  1999-03-13 22:59:59.999,	  false,  1999-03-14 02:59:59.999,	  true	  ]
[ -293,	  1999-03-14,	  "sunday",	  1999-03-14 22:59:59.999,	  false,  1999-03-15 02:59:59.999,	  true	  ]
[ -292,	  1999-03-15,	  "monday",	  1999-03-15 22:59:59.999,	  false,  1999-03-16 02:59:59.999,	  true	  ]
[ -291,	  1999-03-16,	  "tuesday",	  1999-03-16 22:59:59.999,	  false,  1999-03-17 02:59:59.999,	  true	  ]
[ -290,	  1999-03-17,	  "wednesday",	  1999-03-17 22:59:59.999,	  false,  1999-03-18 02:59:59.999,	  true	  ]
[ -289,	  1999-03-18,	  "thursday",	  1999-03-18 22:59:59.999,	  false,  1999-03-19 02:59:59.999,	  true	  ]
[ -288,	  1999-03-19,	  "friday",	  1999-03-19 22:59:59.999,	  false,  1999-03-20 02:59:59.999,	  true	  ]
[ -287,	  1999-03-20,	  "saturday",	  1999-03-20 22:59:59.999,	  false,  1999-03-21 02:59:59.999,	  true	  ]
[ -286,	  1999-03-21,	  "sunday",	  1999-03-21 22:59:59.999,	  false,  1999-03-22 02:59:59.999,	  true	  ]
[ -285,	  1999-03-22,	  "monday",	  1999-03-22 22:59:59.999,	  false,  1999-03-23 02:59:59.999,	  true	  ]
[ -284,	  1999-03-23,	  "tuesday",	  1999-03-23 22:59:59.999,	  false,  1999-03-24 02:59:59.999,	  true	  ]
[ -283,	  1999-03-24,	  "wednesday",	  1999-03-24 22:59:59.999,	  false,  1999-03-25 02:59:59.999,	  true	  ]
[ -282,	  1999-03-25,	  "thursday",	  1999-03-25 22:59:59.999,	  false,  1999-03-26 02:59:59.999,	  true	  ]
[ -281,	  1999-03-26,	  "friday",	  1999-03-26 22:59:59.999,	  false,  1999-03-27 02:59:59.999,	  true	  ]
[ -280,	  1999-03-27,	  "saturday",	  1999-03-27 22:59:59.999,	  false,  1999-03-28 02:59:59.999,	  true	  ]
[ -279,	  1999-03-28,	  "sunday",	  1999-03-28 21:59:59.999,	  true,	  1999-03-29 03:59:59.999,	  false	  ]
[ -278,	  1999-03-29,	  "monday",	  1999-03-29 21:59:59.999,	  true,	  1999-03-30 03:59:59.999,	  false	  ]
[ -277,	  1999-03-30,	  "tuesday",	  1999-03-30 21:59:59.999,	  true,	  1999-03-31 03:59:59.999,	  false	  ]
[ -276,	  1999-03-31,	  "wednesday",	  1999-03-31 21:59:59.999,	  true,	  1999-04-01 03:59:59.999,	  false	  ]
[ -275,	  1999-04-01,	  "thursday",	  1999-04-01 21:59:59.999,	  true,	  1999-04-02 03:59:59.999,	  false	  ]
[ -274,	  1999-04-02,	  "friday",	  1999-04-02 21:59:59.999,	  true,	  1999-04-03 03:59:59.999,	  false	  ]
[ -273,	  1999-04-03,	  "saturday",	  1999-04-03 21:59:59.999,	  true,	  1999-04-04 03:59:59.999,	  false	  ]
[ -272,	  1999-04-04,	  "sunday",	  1999-04-04 21:59:59.999,	  true,	  1999-04-05 03:59:59.999,	  false	  ]
[ -271,	  1999-04-05,	  "monday",	  1999-04-05 21:59:59.999,	  true,	  1999-04-06 03:59:59.999,	  false	  ]
[ -270,	  1999-04-06,	  "tuesday",	  1999-04-06 21:59:59.999,	  true,	  1999-04-07 03:59:59.999,	  false	  ]
[ -269,	  1999-04-07,	  "wednesday",	  1999-04-07 21:59:59.999,	  true,	  1999-04-08 03:59:59.999,	  false	  ]
[ -268,	  1999-04-08,	  "thursday",	  1999-04-08 21:59:59.999,	  true,	  1999-04-09 03:59:59.999,	  false	  ]
[ -267,	  1999-04-09,	  "friday",	  1999-04-09 21:59:59.999,	  true,	  1999-04-10 03:59:59.999,	  false	  ]
[ -266,	  1999-04-10,	  "saturday",	  1999-04-10 21:59:59.999,	  true,	  1999-04-11 03:59:59.999,	  false	  ]
[ -265,	  1999-04-11,	  "sunday",	  1999-04-11 21:59:59.999,	  true,	  1999-04-12 03:59:59.999,	  false	  ]
[ -264,	  1999-04-12,	  "monday",	  1999-04-12 21:59:59.999,	  true,	  1999-04-13 03:59:59.999,	  false	  ]
[ -263,	  1999-04-13,	  "tuesday",	  1999-04-13 21:59:59.999,	  true,	  1999-04-14 03:59:59.999,	  false	  ]
[ -262,	  1999-04-14,	  "wednesday",	  1999-04-14 21:59:59.999,	  true,	  1999-04-15 03:59:59.999,	  false	  ]
[ -261,	  1999-04-15,	  "thursday",	  1999-04-15 21:59:59.999,	  true,	  1999-04-16 03:59:59.999,	  false	  ]
[ -260,	  1999-04-16,	  "friday",	  1999-04-16 21:59:59.999,	  true,	  1999-04-17 03:59:59.999,	  false	  ]
[ -259,	  1999-04-17,	  "saturday",	  1999-04-17 21:59:59.999,	  true,	  1999-04-18 03:59:59.999,	  false	  ]
[ -258,	  1999-04-18,	  "sunday",	  1999-04-18 21:59:59.999,	  true,	  1999-04-19 03:59:59.999,	  false	  ]
[ -257,	  1999-04-19,	  "monday",	  1999-04-19 21:59:59.999,	  true,	  1999-04-20 03:59:59.999,	  false	  ]
[ -256,	  1999-04-20,	  "tuesday",	  1999-04-20 21:59:59.999,	  true,	  1999-04-21 03:59:59.999,	  false	  ]
[ -255,	  1999-04-21,	  "wednesday",	  1999-04-21 21:59:59.999,	  true,	  1999-04-22 03:59:59.999,	  false	  ]
[ -254,	  1999-04-22,	  "thursday",	  1999-04-22 21:59:59.999,	  true,	  1999-04-23 03:59:59.999,	  false	  ]
[ -253,	  1999-04-23,	  "friday",	  1999-04-23 21:59:59.999,	  true,	  1999-04-24 03:59:59.999,	  false	  ]
[ -252,	  1999-04-24,	  "saturday",	  1999-04-24 21:59:59.999,	  true,	  1999-04-25 03:59:59.999,	  false	  ]
[ -251,	  1999-04-25,	  "sunday",	  1999-04-25 21:59:59.999,	  true,	  1999-04-26 03:59:59.999,	  false	  ]
[ -250,	  1999-04-26,	  "monday",	  1999-04-26 21:59:59.999,	  true,	  1999-04-27 03:59:59.999,	  false	  ]
[ -249,	  1999-04-27,	  "tuesday",	  1999-04-27 21:59:59.999,	  true,	  1999-04-28 03:59:59.999,	  false	  ]
[ -248,	  1999-04-28,	  "wednesday",	  1999-04-28 21:59:59.999,	  true,	  1999-04-29 03:59:59.999,	  false	  ]
[ -247,	  1999-04-29,	  "thursday",	  1999-04-29 21:59:59.999,	  true,	  1999-04-30 03:59:59.999,	  false	  ]
[ -246,	  1999-04-30,	  "friday",	  1999-04-30 21:59:59.999,	  true,	  1999-05-01 03:59:59.999,	  false	  ]
[ -245,	  1999-05-01,	  "saturday",	  1999-05-01 21:59:59.999,	  true,	  1999-05-02 03:59:59.999,	  false	  ]
[ -244,	  1999-05-02,	  "sunday",	  1999-05-02 21:59:59.999,	  true,	  1999-05-03 03:59:59.999,	  false	  ]
[ -243,	  1999-05-03,	  "monday",	  1999-05-03 21:59:59.999,	  true,	  1999-05-04 03:59:59.999,	  false	  ]
[ -242,	  1999-05-04,	  "tuesday",	  1999-05-04 21:59:59.999,	  true,	  1999-05-05 03:59:59.999,	  false	  ]
[ -241,	  1999-05-05,	  "wednesday",	  1999-05-05 21:59:59.999,	  true,	  1999-05-06 03:59:59.999,	  false	  ]
[ -240,	  1999-05-06,	  "thursday",	  1999-05-06 21:59:59.999,	  true,	  1999-05-07 03:59:59.999,	  false	  ]
[ -239,	  1999-05-07,	  "friday",	  1999-05-07 21:59:59.999,	  true,	  1999-05-08 03:59:59.999,	  false	  ]
[ -238,	  1999-05-08,	  "saturday",	  1999-05-08 21:59:59.999,	  true,	  1999-05-09 03:59:59.999,	  false	  ]
[ -237,	  1999-05-09,	  "sunday",	  1999-05-09 21:59:59.999,	  true,	  1999-05-10 03:59:59.999,	  false	  ]
[ -236,	  1999-05-10,	  "monday",	  1999-05-10 21:59:59.999,	  true,	  1999-05-11 03:59:59.999,	  false	  ]
[ -235,	  1999-05-11,	  "tuesday",	  1999-05-11 21:59:59.999,	  true,	  1999-05-12 03:59:59.999,	  false	  ]
[ -234,	  1999-05-12,	  "wednesday",	  1999-05-12 21:59:59.999,	  true,	  1999-05-13 03:59:59.999,	  false	  ]
[ -233,	  1999-05-13,	  "thursday",	  1999-05-13 21:59:59.999,	  true,	  1999-05-14 03:59:59.999,	  false	  ]
[ -232,	  1999-05-14,	  "friday",	  1999-05-14 21:59:59.999,	  true,	  1999-05-15 03:59:59.999,	  false	  ]
[ -231,	  1999-05-15,	  "saturday",	  1999-05-15 21:59:59.999,	  true,	  1999-05-16 03:59:59.999,	  false	  ]
[ -230,	  1999-05-16,	  "sunday",	  1999-05-16 21:59:59.999,	  true,	  1999-05-17 03:59:59.999,	  false	  ]
[ -229,	  1999-05-17,	  "monday",	  1999-05-17 21:59:59.999,	  true,	  1999-05-18 03:59:59.999,	  false	  ]
[ -228,	  1999-05-18,	  "tuesday",	  1999-05-18 21:59:59.999,	  true,	  1999-05-19 03:59:59.999,	  false	  ]
[ -227,	  1999-05-19,	  "wednesday",	  1999-05-19 21:59:59.999,	  true,	  1999-05-20 03:59:59.999,	  false	  ]
[ -226,	  1999-05-20,	  "thursday",	  1999-05-20 21:59:59.999,	  true,	  1999-05-21 03:59:59.999,	  false	  ]
[ -225,	  1999-05-21,	  "friday",	  1999-05-21 21:59:59.999,	  true,	  1999-05-22 03:59:59.999,	  false	  ]
[ -224,	  1999-05-22,	  "saturday",	  1999-05-22 21:59:59.999,	  true,	  1999-05-23 03:59:59.999,	  false	  ]
[ -223,	  1999-05-23,	  "sunday",	  1999-05-23 21:59:59.999,	  true,	  1999-05-24 03:59:59.999,	  false	  ]
[ -222,	  1999-05-24,	  "monday",	  1999-05-24 21:59:59.999,	  true,	  1999-05-25 03:59:59.999,	  false	  ]
[ -221,	  1999-05-25,	  "tuesday",	  1999-05-25 21:59:59.999,	  true,	  1999-05-26 03:59:59.999,	  false	  ]
[ -220,	  1999-05-26,	  "wednesday",	  1999-05-26 21:59:59.999,	  true,	  1999-05-27 03:59:59.999,	  false	  ]
[ -219,	  1999-05-27,	  "thursday",	  1999-05-27 21:59:59.999,	  true,	  1999-05-28 03:59:59.999,	  false	  ]
[ -218,	  1999-05-28,	  "friday",	  1999-05-28 21:59:59.999,	  true,	  1999-05-29 03:59:59.999,	  false	  ]
[ -217,	  1999-05-29,	  "saturday",	  1999-05-29 21:59:59.999,	  true,	  1999-05-30 03:59:59.999,	  false	  ]
[ -216,	  1999-05-30,	  "sunday",	  1999-05-30 21:59:59.999,	  true,	  1999-05-31 03:59:59.999,	  false	  ]
[ -215,	  1999-05-31,	  "monday",	  1999-05-31 21:59:59.999,	  true,	  1999-06-01 03:59:59.999,	  false	  ]
[ -214,	  1999-06-01,	  "tuesday",	  1999-06-01 21:59:59.999,	  true,	  1999-06-02 03:59:59.999,	  false	  ]
[ -213,	  1999-06-02,	  "wednesday",	  1999-06-02 21:59:59.999,	  true,	  1999-06-03 03:59:59.999,	  false	  ]
[ -212,	  1999-06-03,	  "thursday",	  1999-06-03 21:59:59.999,	  true,	  1999-06-04 03:59:59.999,	  false	  ]
[ -211,	  1999-06-04,	  "friday",	  1999-06-04 21:59:59.999,	  true,	  1999-06-05 03:59:59.999,	  false	  ]
[ -210,	  1999-06-05,	  "saturday",	  1999-06-05 21:59:59.999,	  true,	  1999-06-06 03:59:59.999,	  false	  ]
[ -209,	  1999-06-06,	  "sunday",	  1999-06-06 21:59:59.999,	  true,	  1999-06-07 03:59:59.999,	  false	  ]
[ -208,	  1999-06-07,	  "monday",	  1999-06-07 21:59:59.999,	  true,	  1999-06-08 03:59:59.999,	  false	  ]
[ -207,	  1999-06-08,	  "tuesday",	  1999-06-08 21:59:59.999,	  true,	  1999-06-09 03:59:59.999,	  false	  ]
[ -206,	  1999-06-09,	  "wednesday",	  1999-06-09 21:59:59.999,	  true,	  1999-06-10 03:59:59.999,	  false	  ]
[ -205,	  1999-06-10,	  "thursday",	  1999-06-10 21:59:59.999,	  true,	  1999-06-11 03:59:59.999,	  false	  ]
[ -204,	  1999-06-11,	  "friday",	  1999-06-11 21:59:59.999,	  true,	  1999-06-12 03:59:59.999,	  false	  ]
[ -203,	  1999-06-12,	  "saturday",	  1999-06-12 21:59:59.999,	  true,	  1999-06-13 03:59:59.999,	  false	  ]
[ -202,	  1999-06-13,	  "sunday",	  1999-06-13 21:59:59.999,	  true,	  1999-06-14 03:59:59.999,	  false	  ]
[ -201,	  1999-06-14,	  "monday",	  1999-06-14 21:59:59.999,	  true,	  1999-06-15 03:59:59.999,	  false	  ]
[ -200,	  1999-06-15,	  "tuesday",	  1999-06-15 21:59:59.999,	  true,	  1999-06-16 03:59:59.999,	  false	  ]
[ -199,	  1999-06-16,	  "wednesday",	  1999-06-16 21:59:59.999,	  true,	  1999-06-17 03:59:59.999,	  false	  ]
[ -198,	  1999-06-17,	  "thursday",	  1999-06-17 21:59:59.999,	  true,	  1999-06-18 03:59:59.999,	  false	  ]
[ -197,	  1999-06-18,	  "friday",	  1999-06-18 21:59:59.999,	  true,	  1999-06-19 03:59:59.999,	  false	  ]
[ -196,	  1999-06-19,	  "saturday",	  1999-06-19 21:59:59.999,	  true,	  1999-06-20 03:59:59.999,	  false	  ]
[ -195,	  1999-06-20,	  "sunday",	  1999-06-20 21:59:59.999,	  true,	  1999-06-21 03:59:59.999,	  false	  ]
[ -194,	  1999-06-21,	  "monday",	  1999-06-21 21:59:59.999,	  true,	  1999-06-22 03:59:59.999,	  false	  ]
[ -193,	  1999-06-22,	  "tuesday",	  1999-06-22 21:59:59.999,	  true,	  1999-06-23 03:59:59.999,	  false	  ]
[ -192,	  1999-06-23,	  "wednesday",	  1999-06-23 21:59:59.999,	  true,	  1999-06-24 03:59:59.999,	  false	  ]
[ -191,	  1999-06-24,	  "thursday",	  1999-06-24 21:59:59.999,	  true,	  1999-06-25 03:59:59.999,	  false	  ]
[ -190,	  1999-06-25,	  "friday",	  1999-06-25 21:59:59.999,	  true,	  1999-06-26 03:59:59.999,	  false	  ]
[ -189,	  1999-06-26,	  "saturday",	  1999-06-26 21:59:59.999,	  true,	  1999-06-27 03:59:59.999,	  false	  ]
[ -188,	  1999-06-27,	  "sunday",	  1999-06-27 21:59:59.999,	  true,	  1999-06-28 03:59:59.999,	  false	  ]
[ -187,	  1999-06-28,	  "monday",	  1999-06-28 21:59:59.999,	  true,	  1999-06-29 03:59:59.999,	  false	  ]
[ -186,	  1999-06-29,	  "tuesday",	  1999-06-29 21:59:59.999,	  true,	  1999-06-30 03:59:59.999,	  false	  ]
[ -185,	  1999-06-30,	  "wednesday",	  1999-06-30 21:59:59.999,	  true,	  1999-07-01 03:59:59.999,	  false	  ]
[ -184,	  1999-07-01,	  "thursday",	  1999-07-01 21:59:59.999,	  true,	  1999-07-02 03:59:59.999,	  false	  ]
[ -183,	  1999-07-02,	  "friday",	  1999-07-02 21:59:59.999,	  true,	  1999-07-03 03:59:59.999,	  false	  ]
[ -182,	  1999-07-03,	  "saturday",	  1999-07-03 21:59:59.999,	  true,	  1999-07-04 03:59:59.999,	  false	  ]
[ -181,	  1999-07-04,	  "sunday",	  1999-07-04 21:59:59.999,	  true,	  1999-07-05 03:59:59.999,	  false	  ]
[ -180,	  1999-07-05,	  "monday",	  1999-07-05 21:59:59.999,	  true,	  1999-07-06 03:59:59.999,	  false	  ]
[ -179,	  1999-07-06,	  "tuesday",	  1999-07-06 21:59:59.999,	  true,	  1999-07-07 03:59:59.999,	  false	  ]
[ -178,	  1999-07-07,	  "wednesday",	  1999-07-07 21:59:59.999,	  true,	  1999-07-08 03:59:59.999,	  false	  ]
[ -177,	  1999-07-08,	  "thursday",	  1999-07-08 21:59:59.999,	  true,	  1999-07-09 03:59:59.999,	  false	  ]
[ -176,	  1999-07-09,	  "friday",	  1999-07-09 21:59:59.999,	  true,	  1999-07-10 03:59:59.999,	  false	  ]
[ -175,	  1999-07-10,	  "saturday",	  1999-07-10 21:59:59.999,	  true,	  1999-07-11 03:59:59.999,	  false	  ]
[ -174,	  1999-07-11,	  "sunday",	  1999-07-11 21:59:59.999,	  true,	  1999-07-12 03:59:59.999,	  false	  ]
[ -173,	  1999-07-12,	  "monday",	  1999-07-12 21:59:59.999,	  true,	  1999-07-13 03:59:59.999,	  false	  ]
[ -172,	  1999-07-13,	  "tuesday",	  1999-07-13 21:59:59.999,	  true,	  1999-07-14 03:59:59.999,	  false	  ]
[ -171,	  1999-07-14,	  "wednesday",	  1999-07-14 21:59:59.999,	  true,	  1999-07-15 03:59:59.999,	  false	  ]
[ -170,	  1999-07-15,	  "thursday",	  1999-07-15 21:59:59.999,	  true,	  1999-07-16 03:59:59.999,	  false	  ]
[ -169,	  1999-07-16,	  "friday",	  1999-07-16 21:59:59.999,	  true,	  1999-07-17 03:59:59.999,	  false	  ]
[ -168,	  1999-07-17,	  "saturday",	  1999-07-17 21:59:59.999,	  true,	  1999-07-18 03:59:59.999,	  false	  ]
[ -167,	  1999-07-18,	  "sunday",	  1999-07-18 21:59:59.999,	  true,	  1999-07-19 03:59:59.999,	  false	  ]
[ -166,	  1999-07-19,	  "monday",	  1999-07-19 21:59:59.999,	  true,	  1999-07-20 03:59:59.999,	  false	  ]
[ -165,	  1999-07-20,	  "tuesday",	  1999-07-20 21:59:59.999,	  true,	  1999-07-21 03:59:59.999,	  false	  ]
[ -164,	  1999-07-21,	  "wednesday",	  1999-07-21 21:59:59.999,	  true,	  1999-07-22 03:59:59.999,	  false	  ]
[ -163,	  1999-07-22,	  "thursday",	  1999-07-22 21:59:59.999,	  true,	  1999-07-23 03:59:59.999,	  false	  ]
[ -162,	  1999-07-23,	  "friday",	  1999-07-23 21:59:59.999,	  true,	  1999-07-24 03:59:59.999,	  false	  ]
[ -161,	  1999-07-24,	  "saturday",	  1999-07-24 21:59:59.999,	  true,	  1999-07-25 03:59:59.999,	  false	  ]
[ -160,	  1999-07-25,	  "sunday",	  1999-07-25 21:59:59.999,	  true,	  1999-07-26 03:59:59.999,	  false	  ]
[ -159,	  1999-07-26,	  "monday",	  1999-07-26 21:59:59.999,	  true,	  1999-07-27 03:59:59.999,	  false	  ]
[ -158,	  1999-07-27,	  "tuesday",	  1999-07-27 21:59:59.999,	  true,	  1999-07-28 03:59:59.999,	  false	  ]
[ -157,	  1999-07-28,	  "wednesday",	  1999-07-28 21:59:59.999,	  true,	  1999-07-29 03:59:59.999,	  false	  ]
[ -156,	  1999-07-29,	  "thursday",	  1999-07-29 21:59:59.999,	  true,	  1999-07-30 03:59:59.999,	  false	  ]
[ -155,	  1999-07-30,	  "friday",	  1999-07-30 21:59:59.999,	  true,	  1999-07-31 03:59:59.999,	  false	  ]
[ -154,	  1999-07-31,	  "saturday",	  1999-07-31 21:59:59.999,	  true,	  1999-08-01 03:59:59.999,	  false	  ]
[ -153,	  1999-08-01,	  "sunday",	  1999-08-01 21:59:59.999,	  true,	  1999-08-02 03:59:59.999,	  false	  ]
[ -152,	  1999-08-02,	  "monday",	  1999-08-02 21:59:59.999,	  true,	  1999-08-03 03:59:59.999,	  false	  ]
[ -151,	  1999-08-03,	  "tuesday",	  1999-08-03 21:59:59.999,	  true,	  1999-08-04 03:59:59.999,	  false	  ]
[ -150,	  1999-08-04,	  "wednesday",	  1999-08-04 21:59:59.999,	  true,	  1999-08-05 03:59:59.999,	  false	  ]
[ -149,	  1999-08-05,	  "thursday",	  1999-08-05 21:59:59.999,	  true,	  1999-08-06 03:59:59.999,	  false	  ]
[ -148,	  1999-08-06,	  "friday",	  1999-08-06 21:59:59.999,	  true,	  1999-08-07 03:59:59.999,	  false	  ]
[ -147,	  1999-08-07,	  "saturday",	  1999-08-07 21:59:59.999,	  true,	  1999-08-08 03:59:59.999,	  false	  ]
[ -146,	  1999-08-08,	  "sunday",	  1999-08-08 21:59:59.999,	  true,	  1999-08-09 03:59:59.999,	  false	  ]
[ -145,	  1999-08-09,	  "monday",	  1999-08-09 21:59:59.999,	  true,	  1999-08-10 03:59:59.999,	  false	  ]
[ -144,	  1999-08-10,	  "tuesday",	  1999-08-10 21:59:59.999,	  true,	  1999-08-11 03:59:59.999,	  false	  ]
[ -143,	  1999-08-11,	  "wednesday",	  1999-08-11 21:59:59.999,	  true,	  1999-08-12 03:59:59.999,	  false	  ]
[ -142,	  1999-08-12,	  "thursday",	  1999-08-12 21:59:59.999,	  true,	  1999-08-13 03:59:59.999,	  false	  ]
[ -141,	  1999-08-13,	  "friday",	  1999-08-13 21:59:59.999,	  true,	  1999-08-14 03:59:59.999,	  false	  ]
[ -140,	  1999-08-14,	  "saturday",	  1999-08-14 21:59:59.999,	  true,	  1999-08-15 03:59:59.999,	  false	  ]
[ -139,	  1999-08-15,	  "sunday",	  1999-08-15 21:59:59.999,	  true,	  1999-08-16 03:59:59.999,	  false	  ]
[ -138,	  1999-08-16,	  "monday",	  1999-08-16 21:59:59.999,	  true,	  1999-08-17 03:59:59.999,	  false	  ]
[ -137,	  1999-08-17,	  "tuesday",	  1999-08-17 21:59:59.999,	  true,	  1999-08-18 03:59:59.999,	  false	  ]
[ -136,	  1999-08-18,	  "wednesday",	  1999-08-18 21:59:59.999,	  true,	  1999-08-19 03:59:59.999,	  false	  ]
[ -135,	  1999-08-19,	  "thursday",	  1999-08-19 21:59:59.999,	  true,	  1999-08-20 03:59:59.999,	  false	  ]
[ -134,	  1999-08-20,	  "friday",	  1999-08-20 21:59:59.999,	  true,	  1999-08-21 03:59:59.999,	  false	  ]
[ -133,	  1999-08-21,	  "saturday",	  1999-08-21 21:59:59.999,	  true,	  1999-08-22 03:59:59.999,	  false	  ]
[ -132,	  1999-08-22,	  "sunday",	  1999-08-22 21:59:59.999,	  true,	  1999-08-23 03:59:59.999,	  false	  ]
[ -131,	  1999-08-23,	  "monday",	  1999-08-23 21:59:59.999,	  true,	  1999-08-24 03:59:59.999,	  false	  ]
[ -130,	  1999-08-24,	  "tuesday",	  1999-08-24 21:59:59.999,	  true,	  1999-08-25 03:59:59.999,	  false	  ]
[ -129,	  1999-08-25,	  "wednesday",	  1999-08-25 21:59:59.999,	  true,	  1999-08-26 03:59:59.999,	  false	  ]
[ -128,	  1999-08-26,	  "thursday",	  1999-08-26 21:59:59.999,	  true,	  1999-08-27 03:59:59.999,	  false	  ]
[ -127,	  1999-08-27,	  "friday",	  1999-08-27 21:59:59.999,	  true,	  1999-08-28 03:59:59.999,	  false	  ]
[ -126,	  1999-08-28,	  "saturday",	  1999-08-28 21:59:59.999,	  true,	  1999-08-29 03:59:59.999,	  false	  ]
[ -125,	  1999-08-29,	  "sunday",	  1999-08-29 21:59:59.999,	  true,	  1999-08-30 03:59:59.999,	  false	  ]
[ -124,	  1999-08-30,	  "monday",	  1999-08-30 21:59:59.999,	  true,	  1999-08-31 03:59:59.999,	  false	  ]
[ -123,	  1999-08-31,	  "tuesday",	  1999-08-31 21:59:59.999,	  true,	  1999-09-01 03:59:59.999,	  false	  ]
[ -122,	  1999-09-01,	  "wednesday",	  1999-09-01 21:59:59.999,	  true,	  1999-09-02 03:59:59.999,	  false	  ]
[ -121,	  1999-09-02,	  "thursday",	  1999-09-02 21:59:59.999,	  true,	  1999-09-03 03:59:59.999,	  false	  ]
[ -120,	  1999-09-03,	  "friday",	  1999-09-03 21:59:59.999,	  true,	  1999-09-04 03:59:59.999,	  false	  ]
[ -119,	  1999-09-04,	  "saturday",	  1999-09-04 21:59:59.999,	  true,	  1999-09-05 03:59:59.999,	  false	  ]
[ -118,	  1999-09-05,	  "sunday",	  1999-09-05 21:59:59.999,	  true,	  1999-09-06 03:59:59.999,	  false	  ]
[ -117,	  1999-09-06,	  "monday",	  1999-09-06 21:59:59.999,	  true,	  1999-09-07 03:59:59.999,	  false	  ]
[ -116,	  1999-09-07,	  "tuesday",	  1999-09-07 21:59:59.999,	  true,	  1999-09-08 03:59:59.999,	  false	  ]
[ -115,	  1999-09-08,	  "wednesday",	  1999-09-08 21:59:59.999,	  true,	  1999-09-09 03:59:59.999,	  false	  ]
[ -114,	  1999-09-09,	  "thursday",	  1999-09-09 21:59:59.999,	  true,	  1999-09-10 03:59:59.999,	  false	  ]
[ -113,	  1999-09-10,	  "friday",	  1999-09-10 21:59:59.999,	  true,	  1999-09-11 03:59:59.999,	  false	  ]
[ -112,	  1999-09-11,	  "saturday",	  1999-09-11 21:59:59.999,	  true,	  1999-09-12 03:59:59.999,	  false	  ]
[ -111,	  1999-09-12,	  "sunday",	  1999-09-12 21:59:59.999,	  true,	  1999-09-13 03:59:59.999,	  false	  ]
[ -110,	  1999-09-13,	  "monday",	  1999-09-13 21:59:59.999,	  true,	  1999-09-14 03:59:59.999,	  false	  ]
[ -109,	  1999-09-14,	  "tuesday",	  1999-09-14 21:59:59.999,	  true,	  1999-09-15 03:59:59.999,	  false	  ]
[ -108,	  1999-09-15,	  "wednesday",	  1999-09-15 21:59:59.999,	  true,	  1999-09-16 03:59:59.999,	  false	  ]
[ -107,	  1999-09-16,	  "thursday",	  1999-09-16 21:59:59.999,	  true,	  1999-09-17 03:59:59.999,	  false	  ]
[ -106,	  1999-09-17,	  "friday",	  1999-09-17 21:59:59.999,	  true,	  1999-09-18 03:59:59.999,	  false	  ]
[ -105,	  1999-09-18,	  "saturday",	  1999-09-18 21:59:59.999,	  true,	  1999-09-19 03:59:59.999,	  false	  ]
[ -104,	  1999-09-19,	  "sunday",	  1999-09-19 21:59:59.999,	  true,	  1999-09-20 03:59:59.999,	  false	  ]
[ -103,	  1999-09-20,	  "monday",	  1999-09-20 21:59:59.999,	  true,	  1999-09-21 03:59:59.999,	  false	  ]
[ -102,	  1999-09-21,	  "tuesday",	  1999-09-21 21:59:59.999,	  true,	  1999-09-22 03:59:59.999,	  false	  ]
[ -101,	  1999-09-22,	  "wednesday",	  1999-09-22 21:59:59.999,	  true,	  1999-09-23 03:59:59.999,	  false	  ]
[ -100,	  1999-09-23,	  "thursday",	  1999-09-23 21:59:59.999,	  true,	  1999-09-24 03:59:59.999,	  false	  ]
[ -99,	  1999-09-24,	  "friday",	  1999-09-24 21:59:59.999,	  true,	  1999-09-25 03:59:59.999,	  false	  ]
[ -98,	  1999-09-25,	  "saturday",	  1999-09-25 21:59:59.999,	  true,	  1999-09-26 03:59:59.999,	  false	  ]
[ -97,	  1999-09-26,	  "sunday",	  1999-09-26 21:59:59.999,	  true,	  1999-09-27 03:59:59.999,	  false	  ]
[ -96,	  1999-09-27,	  "monday",	  1999-09-27 21:59:59.999,	  true,	  1999-09-28 03:59:59.999,	  false	  ]
[ -95,	  1999-09-28,	  "tuesday",	  1999-09-28 21:59:59.999,	  true,	  1999-09-29 03:59:59.999,	  false	  ]
[ -94,	  1999-09-29,	  "wednesday",	  1999-09-29 21:59:59.999,	  true,	  1999-09-30 03:59:59.999,	  false	  ]
[ -93,	  1999-09-30,	  "thursday",	  1999-09-30 21:59:59.999,	  true,	  1999-10-01 03:59:59.999,	  false	  ]
[ -92,	  1999-10-01,	  "friday",	  1999-10-01 21:59:59.999,	  true,	  1999-10-02 03:59:59.999,	  false	  ]
[ -91,	  1999-10-02,	  "saturday",	  1999-10-02 21:59:59.999,	  true,	  1999-10-03 03:59:59.999,	  false	  ]
[ -90,	  1999-10-03,	  "sunday",	  1999-10-03 21:59:59.999,	  true,	  1999-10-04 03:59:59.999,	  false	  ]
[ -89,	  1999-10-04,	  "monday",	  1999-10-04 21:59:59.999,	  true,	  1999-10-05 03:59:59.999,	  false	  ]
[ -88,	  1999-10-05,	  "tuesday",	  1999-10-05 21:59:59.999,	  true,	  1999-10-06 03:59:59.999,	  false	  ]
[ -87,	  1999-10-06,	  "wednesday",	  1999-10-06 21:59:59.999,	  true,	  1999-10-07 03:59:59.999,	  false	  ]
[ -86,	  1999-10-07,	  "thursday",	  1999-10-07 21:59:59.999,	  true,	  1999-10-08 03:59:59.999,	  false	  ]
[ -85,	  1999-10-08,	  "friday",	  1999-10-08 21:59:59.999,	  true,	  1999-10-09 03:59:59.999,	  false	  ]
[ -84,	  1999-10-09,	  "saturday",	  1999-10-09 21:59:59.999,	  true,	  1999-10-10 03:59:59.999,	  false	  ]
[ -83,	  1999-10-10,	  "sunday",	  1999-10-10 21:59:59.999,	  true,	  1999-10-11 03:59:59.999,	  false	  ]
[ -82,	  1999-10-11,	  "monday",	  1999-10-11 21:59:59.999,	  true,	  1999-10-12 03:59:59.999,	  false	  ]
[ -81,	  1999-10-12,	  "tuesday",	  1999-10-12 21:59:59.999,	  true,	  1999-10-13 03:59:59.999,	  false	  ]
[ -80,	  1999-10-13,	  "wednesday",	  1999-10-13 21:59:59.999,	  true,	  1999-10-14 03:59:59.999,	  false	  ]
[ -79,	  1999-10-14,	  "thursday",	  1999-10-14 21:59:59.999,	  true,	  1999-10-15 03:59:59.999,	  false	  ]
[ -78,	  1999-10-15,	  "friday",	  1999-10-15 21:59:59.999,	  true,	  1999-10-16 03:59:59.999,	  false	  ]
[ -77,	  1999-10-16,	  "saturday",	  1999-10-16 21:59:59.999,	  true,	  1999-10-17 03:59:59.999,	  false	  ]
[ -76,	  1999-10-17,	  "sunday",	  1999-10-17 21:59:59.999,	  true,	  1999-10-18 03:59:59.999,	  false	  ]
[ -75,	  1999-10-18,	  "monday",	  1999-10-18 21:59:59.999,	  true,	  1999-10-19 03:59:59.999,	  false	  ]
[ -74,	  1999-10-19,	  "tuesday",	  1999-10-19 21:59:59.999,	  true,	  1999-10-20 03:59:59.999,	  false	  ]
[ -73,	  1999-10-20,	  "wednesday",	  1999-10-20 21:59:59.999,	  true,	  1999-10-21 03:59:59.999,	  false	  ]
[ -72,	  1999-10-21,	  "thursday",	  1999-10-21 21:59:59.999,	  true,	  1999-10-22 03:59:59.999,	  false	  ]
[ -71,	  1999-10-22,	  "friday",	  1999-10-22 21:59:59.999,	  true,	  1999-10-23 03:59:59.999,	  false	  ]
[ -70,	  1999-10-23,	  "saturday",	  1999-10-23 21:59:59.999,	  true,	  1999-10-24 03:59:59.999,	  false	  ]
[ -69,	  1999-10-24,	  "sunday",	  1999-10-24 21:59:59.999,	  true,	  1999-10-25 03:59:59.999,	  false	  ]
[ -68,	  1999-10-25,	  "monday",	  1999-10-25 21:59:59.999,	  true,	  1999-10-26 03:59:59.999,	  false	  ]
[ -67,	  1999-10-26,	  "tuesday",	  1999-10-26 21:59:59.999,	  true,	  1999-10-27 03:59:59.999,	  false	  ]
[ -66,	  1999-10-27,	  "wednesday",	  1999-10-27 21:59:59.999,	  true,	  1999-10-28 03:59:59.999,	  false	  ]
[ -65,	  1999-10-28,	  "thursday",	  1999-10-28 21:59:59.999,	  true,	  1999-10-29 03:59:59.999,	  false	  ]
[ -64,	  1999-10-29,	  "friday",	  1999-10-29 21:59:59.999,	  true,	  1999-10-30 03:59:59.999,	  false	  ]
[ -63,	  1999-10-30,	  "saturday",	  1999-10-30 21:59:59.999,	  true,	  1999-10-31 03:59:59.999,	  false	  ]
[ -62,	  1999-10-31,	  "sunday",	  1999-10-31 22:59:59.999,	  false,  1999-11-01 02:59:59.999,	  true	  ]
[ -61,	  1999-11-01,	  "monday",	  1999-11-01 22:59:59.999,	  false,  1999-11-02 02:59:59.999,	  true	  ]
[ -60,	  1999-11-02,	  "tuesday",	  1999-11-02 22:59:59.999,	  false,  1999-11-03 02:59:59.999,	  true	  ]
[ -59,	  1999-11-03,	  "wednesday",	  1999-11-03 22:59:59.999,	  false,  1999-11-04 02:59:59.999,	  true	  ]
[ -58,	  1999-11-04,	  "thursday",	  1999-11-04 22:59:59.999,	  false,  1999-11-05 02:59:59.999,	  true	  ]
[ -57,	  1999-11-05,	  "friday",	  1999-11-05 22:59:59.999,	  false,  1999-11-06 02:59:59.999,	  true	  ]
[ -56,	  1999-11-06,	  "saturday",	  1999-11-06 22:59:59.999,	  false,  1999-11-07 02:59:59.999,	  true	  ]
[ -55,	  1999-11-07,	  "sunday",	  1999-11-07 22:59:59.999,	  false,  1999-11-08 02:59:59.999,	  true	  ]
[ -54,	  1999-11-08,	  "monday",	  1999-11-08 22:59:59.999,	  false,  1999-11-09 02:59:59.999,	  true	  ]
[ -53,	  1999-11-09,	  "tuesday",	  1999-11-09 22:59:59.999,	  false,  1999-11-10 02:59:59.999,	  true	  ]
[ -52,	  1999-11-10,	  "wednesday",	  1999-11-10 22:59:59.999,	  false,  1999-11-11 02:59:59.999,	  true	  ]
[ -51,	  1999-11-11,	  "thursday",	  1999-11-11 22:59:59.999,	  false,  1999-11-12 02:59:59.999,	  true	  ]
[ -50,	  1999-11-12,	  "friday",	  1999-11-12 22:59:59.999,	  false,  1999-11-13 02:59:59.999,	  true	  ]
[ -49,	  1999-11-13,	  "saturday",	  1999-11-13 22:59:59.999,	  false,  1999-11-14 02:59:59.999,	  true	  ]
[ -48,	  1999-11-14,	  "sunday",	  1999-11-14 22:59:59.999,	  false,  1999-11-15 02:59:59.999,	  true	  ]
[ -47,	  1999-11-15,	  "monday",	  1999-11-15 22:59:59.999,	  false,  1999-11-16 02:59:59.999,	  true	  ]
[ -46,	  1999-11-16,	  "tuesday",	  1999-11-16 22:59:59.999,	  false,  1999-11-17 02:59:59.999,	  true	  ]
[ -45,	  1999-11-17,	  "wednesday",	  1999-11-17 22:59:59.999,	  false,  1999-11-18 02:59:59.999,	  true	  ]
[ -44,	  1999-11-18,	  "thursday",	  1999-11-18 22:59:59.999,	  false,  1999-11-19 02:59:59.999,	  true	  ]
[ -43,	  1999-11-19,	  "friday",	  1999-11-19 22:59:59.999,	  false,  1999-11-20 02:59:59.999,	  true	  ]
[ -42,	  1999-11-20,	  "saturday",	  1999-11-20 22:59:59.999,	  false,  1999-11-21 02:59:59.999,	  true	  ]
[ -41,	  1999-11-21,	  "sunday",	  1999-11-21 22:59:59.999,	  false,  1999-11-22 02:59:59.999,	  true	  ]
[ -40,	  1999-11-22,	  "monday",	  1999-11-22 22:59:59.999,	  false,  1999-11-23 02:59:59.999,	  true	  ]
[ -39,	  1999-11-23,	  "tuesday",	  1999-11-23 22:59:59.999,	  false,  1999-11-24 02:59:59.999,	  true	  ]
[ -38,	  1999-11-24,	  "wednesday",	  1999-11-24 22:59:59.999,	  false,  1999-11-25 02:59:59.999,	  true	  ]
[ -37,	  1999-11-25,	  "thursday",	  1999-11-25 22:59:59.999,	  false,  1999-11-26 02:59:59.999,	  true	  ]
[ -36,	  1999-11-26,	  "friday",	  1999-11-26 22:59:59.999,	  false,  1999-11-27 02:59:59.999,	  true	  ]
[ -35,	  1999-11-27,	  "saturday",	  1999-11-27 22:59:59.999,	  false,  1999-11-28 02:59:59.999,	  true	  ]
[ -34,	  1999-11-28,	  "sunday",	  1999-11-28 22:59:59.999,	  false,  1999-11-29 02:59:59.999,	  true	  ]
[ -33,	  1999-11-29,	  "monday",	  1999-11-29 22:59:59.999,	  false,  1999-11-30 02:59:59.999,	  true	  ]
[ -32,	  1999-11-30,	  "tuesday",	  1999-11-30 22:59:59.999,	  false,  1999-12-01 02:59:59.999,	  true	  ]
[ -31,	  1999-12-01,	  "wednesday",	  1999-12-01 22:59:59.999,	  false,  1999-12-02 02:59:59.999,	  true	  ]
[ -30,	  1999-12-02,	  "thursday",	  1999-12-02 22:59:59.999,	  false,  1999-12-03 02:59:59.999,	  true	  ]
[ -29,	  1999-12-03,	  "friday",	  1999-12-03 22:59:59.999,	  false,  1999-12-04 02:59:59.999,	  true	  ]
[ -28,	  1999-12-04,	  "saturday",	  1999-12-04 22:59:59.999,	  false,  1999-12-05 02:59:59.999,	  true	  ]
[ -27,	  1999-12-05,	  "sunday",	  1999-12-05 22:59:59.999,	  false,  1999-12-06 02:59:59.999,	  true	  ]
[ -26,	  1999-12-06,	  "monday",	  1999-12-06 22:59:59.999,	  false,  1999-12-07 02:59:59.999,	  true	  ]
[ -25,	  1999-12-07,	  "tuesday",	  1999-12-07 22:59:59.999,	  false,  1999-12-08 02:59:59.999,	  true	  ]
[ -24,	  1999-12-08,	  "wednesday",	  1999-12-08 22:59:59.999,	  false,  1999-12-09 02:59:59.999,	  true	  ]
[ -23,	  1999-12-09,	  "thursday",	  1999-12-09 22:59:59.999,	  false,  1999-12-10 02:59:59.999,	  true	  ]
[ -22,	  1999-12-10,	  "friday",	  1999-12-10 22:59:59.999,	  false,  1999-12-11 02:59:59.999,	  true	  ]
[ -21,	  1999-12-11,	  "saturday",	  1999-12-11 22:59:59.999,	  false,  1999-12-12 02:59:59.999,	  true	  ]
[ -20,	  1999-12-12,	  "sunday",	  1999-12-12 22:59:59.999,	  false,  1999-12-13 02:59:59.999,	  true	  ]
[ -19,	  1999-12-13,	  "monday",	  1999-12-13 22:59:59.999,	  false,  1999-12-14 02:59:59.999,	  true	  ]
[ -18,	  1999-12-14,	  "tuesday",	  1999-12-14 22:59:59.999,	  false,  1999-12-15 02:59:59.999,	  true	  ]
[ -17,	  1999-12-15,	  "wednesday",	  1999-12-15 22:59:59.999,	  false,  1999-12-16 02:59:59.999,	  true	  ]
[ -16,	  1999-12-16,	  "thursday",	  1999-12-16 22:59:59.999,	  false,  1999-12-17 02:59:59.999,	  true	  ]
[ -15,	  1999-12-17,	  "friday",	  1999-12-17 22:59:59.999,	  false,  1999-12-18 02:59:59.999,	  true	  ]
[ -14,	  1999-12-18,	  "saturday",	  1999-12-18 22:59:59.999,	  false,  1999-12-19 02:59:59.999,	  true	  ]
[ -13,	  1999-12-19,	  "sunday",	  1999-12-19 22:59:59.999,	  false,  1999-12-20 02:59:59.999,	  true	  ]
[ -12,	  1999-12-20,	  "monday",	  1999-12-20 22:59:59.999,	  false,  1999-12-21 02:59:59.999,	  true	  ]
[ -11,	  1999-12-21,	  "tuesday",	  1999-12-21 22:59:59.999,	  false,  1999-12-22 02:59:59.999,	  true	  ]
[ -10,	  1999-12-22,	  "wednesday",	  1999-12-22 22:59:59.999,	  false,  1999-12-23 02:59:59.999,	  true	  ]
[ -9,	  1999-12-23,	  "thursday",	  1999-12-23 22:59:59.999,	  false,  1999-12-24 02:59:59.999,	  true	  ]
[ -8,	  1999-12-24,	  "friday",	  1999-12-24 22:59:59.999,	  false,  1999-12-25 02:59:59.999,	  true	  ]
[ -7,	  1999-12-25,	  "saturday",	  1999-12-25 22:59:59.999,	  false,  1999-12-26 02:59:59.999,	  true	  ]
[ -6,	  1999-12-26,	  "sunday",	  1999-12-26 22:59:59.999,	  false,  1999-12-27 02:59:59.999,	  true	  ]
[ -5,	  1999-12-27,	  "monday",	  1999-12-27 22:59:59.999,	  false,  1999-12-28 02:59:59.999,	  true	  ]
[ -4,	  1999-12-28,	  "tuesday",	  1999-12-28 22:59:59.999,	  false,  1999-12-29 02:59:59.999,	  true	  ]
[ -3,	  1999-12-29,	  "wednesday",	  1999-12-29 22:59:59.999,	  false,  1999-12-30 02:59:59.999,	  true	  ]
[ -2,	  1999-12-30,	  "thursday",	  1999-12-30 22:59:59.999,	  false,  1999-12-31 02:59:59.999,	  true	  ]
[ -1,	  1999-12-31,	  "friday",	  1999-12-31 22:59:59.999,	  false,  2000-01-01 02:59:59.999,	  true	  ]
[ 0,	  2000-01-01,	  "saturday",	  2000-01-01 22:59:59.999,	  false,  2000-01-02 02:59:59.999,	  true	  ]
[ 1,	  2000-01-02,	  "sunday",	  2000-01-02 22:59:59.999,	  false,  2000-01-03 02:59:59.999,	  true	  ]
[ 2,	  2000-01-03,	  "monday",	  2000-01-03 22:59:59.999,	  false,  2000-01-04 02:59:59.999,	  true	  ]
[ 3,	  2000-01-04,	  "tuesday",	  2000-01-04 22:59:59.999,	  false,  2000-01-05 02:59:59.999,	  true	  ]
[ 4,	  2000-01-05,	  "wednesday",	  2000-01-05 22:59:59.999,	  false,  2000-01-06 02:59:59.999,	  true	  ]
[ 5,	  2000-01-06,	  "thursday",	  2000-01-06 22:59:59.999,	  false,  2000-01-07 02:59:59.999,	  true	  ]
[ 6,	  2000-01-07,	  "friday",	  2000-01-07 22:59:59.999,	  false,  2000-01-08 02:59:59.999,	  true	  ]
[ 7,	  2000-01-08,	  "saturday",	  2000-01-08 22:59:59.999,	  false,  2000-01-09 02:59:59.999,	  true	  ]
[ 8,	  2000-01-09,	  "sunday",	  2000-01-09 22:59:59.999,	  false,  2000-01-10 02:59:59.999,	  true	  ]
[ 9,	  2000-01-10,	  "monday",	  2000-01-10 22:59:59.999,	  false,  2000-01-11 02:59:59.999,	  true	  ]
[ 10,	  2000-01-11,	  "tuesday",	  2000-01-11 22:59:59.999,	  false,  2000-01-12 02:59:59.999,	  true	  ]
[ 11,	  2000-01-12,	  "wednesday",	  2000-01-12 22:59:59.999,	  false,  2000-01-13 02:59:59.999,	  true	  ]
[ 12,	  2000-01-13,	  "thursday",	  2000-01-13 22:59:59.999,	  false,  2000-01-14 02:59:59.999,	  true	  ]
[ 13,	  2000-01-14,	  "friday",	  2000-01-14 22:59:59.999,	  false,  2000-01-15 02:59:59.999,	  true	  ]
[ 14,	  2000-01-15,	  "saturday",	  2000-01-15 22:59:59.999,	  false,  2000-01-16 02:59:59.999,	  true	  ]
[ 15,	  2000-01-16,	  "sunday",	  2000-01-16 22:59:59.999,	  false,  2000-01-17 02:59:59.999,	  true	  ]
[ 16,	  2000-01-17,	  "monday",	  2000-01-17 22:59:59.999,	  false,  2000-01-18 02:59:59.999,	  true	  ]
[ 17,	  2000-01-18,	  "tuesday",	  2000-01-18 22:59:59.999,	  false,  2000-01-19 02:59:59.999,	  true	  ]
[ 18,	  2000-01-19,	  "wednesday",	  2000-01-19 22:59:59.999,	  false,  2000-01-20 02:59:59.999,	  true	  ]
[ 19,	  2000-01-20,	  "thursday",	  2000-01-20 22:59:59.999,	  false,  2000-01-21 02:59:59.999,	  true	  ]
[ 20,	  2000-01-21,	  "friday",	  2000-01-21 22:59:59.999,	  false,  2000-01-22 02:59:59.999,	  true	  ]
[ 21,	  2000-01-22,	  "saturday",	  2000-01-22 22:59:59.999,	  false,  2000-01-23 02:59:59.999,	  true	  ]
[ 22,	  2000-01-23,	  "sunday",	  2000-01-23 22:59:59.999,	  false,  2000-01-24 02:59:59.999,	  true	  ]
[ 23,	  2000-01-24,	  "monday",	  2000-01-24 22:59:59.999,	  false,  2000-01-25 02:59:59.999,	  true	  ]
[ 24,	  2000-01-25,	  "tuesday",	  2000-01-25 22:59:59.999,	  false,  2000-01-26 02:59:59.999,	  true	  ]
[ 25,	  2000-01-26,	  "wednesday",	  2000-01-26 22:59:59.999,	  false,  2000-01-27 02:59:59.999,	  true	  ]
[ 26,	  2000-01-27,	  "thursday",	  2000-01-27 22:59:59.999,	  false,  2000-01-28 02:59:59.999,	  true	  ]
[ 27,	  2000-01-28,	  "friday",	  2000-01-28 22:59:59.999,	  false,  2000-01-29 02:59:59.999,	  true	  ]
[ 28,	  2000-01-29,	  "saturday",	  2000-01-29 22:59:59.999,	  false,  2000-01-30 02:59:59.999,	  true	  ]
[ 29,	  2000-01-30,	  "sunday",	  2000-01-30 22:59:59.999,	  false,  2000-01-31 02:59:59.999,	  true	  ]
[ 30,	  2000-01-31,	  "monday",	  2000-01-31 22:59:59.999,	  false,  2000-02-01 02:59:59.999,	  true	  ]
[ 31,	  2000-02-01,	  "tuesday",	  2000-02-01 22:59:59.999,	  false,  2000-02-02 02:59:59.999,	  true	  ]
[ 32,	  2000-02-02,	  "wednesday",	  2000-02-02 22:59:59.999,	  false,  2000-02-03 02:59:59.999,	  true	  ]
[ 33,	  2000-02-03,	  "thursday",	  2000-02-03 22:59:59.999,	  false,  2000-02-04 02:59:59.999,	  true	  ]
[ 34,	  2000-02-04,	  "friday",	  2000-02-04 22:59:59.999,	  false,  2000-02-05 02:59:59.999,	  true	  ]
[ 35,	  2000-02-05,	  "saturday",	  2000-02-05 22:59:59.999,	  false,  2000-02-06 02:59:59.999,	  true	  ]
[ 36,	  2000-02-06,	  "sunday",	  2000-02-06 22:59:59.999,	  false,  2000-02-07 02:59:59.999,	  true	  ]
[ 37,	  2000-02-07,	  "monday",	  2000-02-07 22:59:59.999,	  false,  2000-02-08 02:59:59.999,	  true	  ]
[ 38,	  2000-02-08,	  "tuesday",	  2000-02-08 22:59:59.999,	  false,  2000-02-09 02:59:59.999,	  true	  ]
[ 39,	  2000-02-09,	  "wednesday",	  2000-02-09 22:59:59.999,	  false,  2000-02-10 02:59:59.999,	  true	  ]
[ 40,	  2000-02-10,	  "thursday",	  2000-02-10 22:59:59.999,	  false,  2000-02-11 02:59:59.999,	  true	  ]
[ 41,	  2000-02-11,	  "friday",	  2000-02-11 22:59:59.999,	  false,  2000-02-12 02:59:59.999,	  true	  ]
[ 42,	  2000-02-12,	  "saturday",	  2000-02-12 22:59:59.999,	  false,  2000-02-13 02:59:59.999,	  true	  ]
[ 43,	  2000-02-13,	  "sunday",	  2000-02-13 22:59:59.999,	  false,  2000-02-14 02:59:59.999,	  true	  ]
[ 44,	  2000-02-14,	  "monday",	  2000-02-14 22:59:59.999,	  false,  2000-02-15 02:59:59.999,	  true	  ]
[ 45,	  2000-02-15,	  "tuesday",	  2000-02-15 22:59:59.999,	  false,  2000-02-16 02:59:59.999,	  true	  ]
[ 46,	  2000-02-16,	  "wednesday",	  2000-02-16 22:59:59.999,	  false,  2000-02-17 02:59:59.999,	  true	  ]
[ 47,	  2000-02-17,	  "thursday",	  2000-02-17 22:59:59.999,	  false,  2000-02-18 02:59:59.999,	  true	  ]
[ 48,	  2000-02-18,	  "friday",	  2000-02-18 22:59:59.999,	  false,  2000-02-19 02:59:59.999,	  true	  ]
[ 49,	  2000-02-19,	  "saturday",	  2000-02-19 22:59:59.999,	  false,  2000-02-20 02:59:59.999,	  true	  ]
[ 50,	  2000-02-20,	  "sunday",	  2000-02-20 22:59:59.999,	  false,  2000-02-21 02:59:59.999,	  true	  ]
[ 51,	  2000-02-21,	  "monday",	  2000-02-21 22:59:59.999,	  false,  2000-02-22 02:59:59.999,	  true	  ]
[ 52,	  2000-02-22,	  "tuesday",	  2000-02-22 22:59:59.999,	  false,  2000-02-23 02:59:59.999,	  true	  ]
[ 53,	  2000-02-23,	  "wednesday",	  2000-02-23 22:59:59.999,	  false,  2000-02-24 02:59:59.999,	  true	  ]
[ 54,	  2000-02-24,	  "thursday",	  2000-02-24 22:59:59.999,	  false,  2000-02-25 02:59:59.999,	  true	  ]
[ 55,	  2000-02-25,	  "friday",	  2000-02-25 22:59:59.999,	  false,  2000-02-26 02:59:59.999,	  true	  ]
[ 56,	  2000-02-26,	  "saturday",	  2000-02-26 22:59:59.999,	  false,  2000-02-27 02:59:59.999,	  true	  ]
[ 57,	  2000-02-27,	  "sunday",	  2000-02-27 22:59:59.999,	  false,  2000-02-28 02:59:59.999,	  true	  ]
[ 58,	  2000-02-28,	  "monday",	  2000-02-28 22:59:59.999,	  false,  2000-02-29 02:59:59.999,	  true	  ]
[ 59,	  2000-02-29,	  "tuesday",	  2000-02-29 22:59:59.999,	  false,  2000-03-01 02:59:59.999,	  true	  ]
[ 60,	  2000-03-01,	  "wednesday",	  2000-03-01 22:59:59.999,	  false,  2000-03-02 02:59:59.999,	  true	  ]
[ 61,	  2000-03-02,	  "thursday",	  2000-03-02 22:59:59.999,	  false,  2000-03-03 02:59:59.999,	  true	  ]
[ 62,	  2000-03-03,	  "friday",	  2000-03-03 22:59:59.999,	  false,  2000-03-04 02:59:59.999,	  true	  ]
[ 63,	  2000-03-04,	  "saturday",	  2000-03-04 22:59:59.999,	  false,  2000-03-05 02:59:59.999,	  true	  ]
[ 64,	  2000-03-05,	  "sunday",	  2000-03-05 22:59:59.999,	  false,  2000-03-06 02:59:59.999,	  true	  ]
[ 65,	  2000-03-06,	  "monday",	  2000-03-06 22:59:59.999,	  false,  2000-03-07 02:59:59.999,	  true	  ]
[ 66,	  2000-03-07,	  "tuesday",	  2000-03-07 22:59:59.999,	  false,  2000-03-08 02:59:59.999,	  true	  ]
[ 67,	  2000-03-08,	  "wednesday",	  2000-03-08 22:59:59.999,	  false,  2000-03-09 02:59:59.999,	  true	  ]
[ 68,	  2000-03-09,	  "thursday",	  2000-03-09 22:59:59.999,	  false,  2000-03-10 02:59:59.999,	  true	  ]
[ 69,	  2000-03-10,	  "friday",	  2000-03-10 22:59:59.999,	  false,  2000-03-11 02:59:59.999,	  true	  ]
[ 70,	  2000-03-11,	  "saturday",	  2000-03-11 22:59:59.999,	  false,  2000-03-12 02:59:59.999,	  true	  ]
[ 71,	  2000-03-12,	  "sunday",	  2000-03-12 22:59:59.999,	  false,  2000-03-13 02:59:59.999,	  true	  ]
[ 72,	  2000-03-13,	  "monday",	  2000-03-13 22:59:59.999,	  false,  2000-03-14 02:59:59.999,	  true	  ]
[ 73,	  2000-03-14,	  "tuesday",	  2000-03-14 22:59:59.999,	  false,  2000-03-15 02:59:59.999,	  true	  ]
[ 74,	  2000-03-15,	  "wednesday",	  2000-03-15 22:59:59.999,	  false,  2000-03-16 02:59:59.999,	  true	  ]
[ 75,	  2000-03-16,	  "thursday",	  2000-03-16 22:59:59.999,	  false,  2000-03-17 02:59:59.999,	  true	  ]
[ 76,	  2000-03-17,	  "friday",	  2000-03-17 22:59:59.999,	  false,  2000-03-18 02:59:59.999,	  true	  ]
[ 77,	  2000-03-18,	  "saturday",	  2000-03-18 22:59:59.999,	  false,  2000-03-19 02:59:59.999,	  true	  ]
[ 78,	  2000-03-19,	  "sunday",	  2000-03-19 22:59:59.999,	  false,  2000-03-20 02:59:59.999,	  true	  ]
[ 79,	  2000-03-20,	  "monday",	  2000-03-20 22:59:59.999,	  false,  2000-03-21 02:59:59.999,	  true	  ]
[ 80,	  2000-03-21,	  "tuesday",	  2000-03-21 22:59:59.999,	  false,  2000-03-22 02:59:59.999,	  true	  ]
[ 81,	  2000-03-22,	  "wednesday",	  2000-03-22 22:59:59.999,	  false,  2000-03-23 02:59:59.999,	  true	  ]
[ 82,	  2000-03-23,	  "thursday",	  2000-03-23 22:59:59.999,	  false,  2000-03-24 02:59:59.999,	  true	  ]
[ 83,	  2000-03-24,	  "friday",	  2000-03-24 22:59:59.999,	  false,  2000-03-25 02:59:59.999,	  true	  ]
[ 84,	  2000-03-25,	  "saturday",	  2000-03-25 22:59:59.999,	  false,  2000-03-26 02:59:59.999,	  true	  ]
[ 85,	  2000-03-26,	  "sunday",	  2000-03-26 21:59:59.999,	  true,	  2000-03-27 03:59:59.999,	  false	  ]
[ 86,	  2000-03-27,	  "monday",	  2000-03-27 21:59:59.999,	  true,	  2000-03-28 03:59:59.999,	  false	  ]
[ 87,	  2000-03-28,	  "tuesday",	  2000-03-28 21:59:59.999,	  true,	  2000-03-29 03:59:59.999,	  false	  ]
[ 88,	  2000-03-29,	  "wednesday",	  2000-03-29 21:59:59.999,	  true,	  2000-03-30 03:59:59.999,	  false	  ]
[ 89,	  2000-03-30,	  "thursday",	  2000-03-30 21:59:59.999,	  true,	  2000-03-31 03:59:59.999,	  false	  ]
[ 90,	  2000-03-31,	  "friday",	  2000-03-31 21:59:59.999,	  true,	  2000-04-01 03:59:59.999,	  false	  ]
[ 91,	  2000-04-01,	  "saturday",	  2000-04-01 21:59:59.999,	  true,	  2000-04-02 03:59:59.999,	  false	  ]
[ 92,	  2000-04-02,	  "sunday",	  2000-04-02 21:59:59.999,	  true,	  2000-04-03 03:59:59.999,	  false	  ]
[ 93,	  2000-04-03,	  "monday",	  2000-04-03 21:59:59.999,	  true,	  2000-04-04 03:59:59.999,	  false	  ]
[ 94,	  2000-04-04,	  "tuesday",	  2000-04-04 21:59:59.999,	  true,	  2000-04-05 03:59:59.999,	  false	  ]
[ 95,	  2000-04-05,	  "wednesday",	  2000-04-05 21:59:59.999,	  true,	  2000-04-06 03:59:59.999,	  false	  ]
[ 96,	  2000-04-06,	  "thursday",	  2000-04-06 21:59:59.999,	  true,	  2000-04-07 03:59:59.999,	  false	  ]
[ 97,	  2000-04-07,	  "friday",	  2000-04-07 21:59:59.999,	  true,	  2000-04-08 03:59:59.999,	  false	  ]
[ 98,	  2000-04-08,	  "saturday",	  2000-04-08 21:59:59.999,	  true,	  2000-04-09 03:59:59.999,	  false	  ]
[ 99,	  2000-04-09,	  "sunday",	  2000-04-09 21:59:59.999,	  true,	  2000-04-10 03:59:59.999,	  false	  ]
[ 100,	  2000-04-10,	  "monday",	  2000-04-10 21:59:59.999,	  true,	  2000-04-11 03:59:59.999,	  false	  ]
[ 101,	  2000-04-11,	  "tuesday",	  2000-04-11 21:59:59.999,	  true,	  2000-04-12 03:59:59.999,	  false	  ]
[ 102,	  2000-04-12,	  "wednesday",	  2000-04-12 21:59:59.999,	  true,	  2000-04-13 03:59:59.999,	  false	  ]
[ 103,	  2000-04-13,	  "thursday",	  2000-04-13 21:59:59.999,	  true,	  2000-04-14 03:59:59.999,	  false	  ]
[ 104,	  2000-04-14,	  "friday",	  2000-04-14 21:59:59.999,	  true,	  2000-04-15 03:59:59.999,	  false	  ]
[ 105,	  2000-04-15,	  "saturday",	  2000-04-15 21:59:59.999,	  true,	  2000-04-16 03:59:59.999,	  false	  ]
[ 106,	  2000-04-16,	  "sunday",	  2000-04-16 21:59:59.999,	  true,	  2000-04-17 03:59:59.999,	  false	  ]
[ 107,	  2000-04-17,	  "monday",	  2000-04-17 21:59:59.999,	  true,	  2000-04-18 03:59:59.999,	  false	  ]
[ 108,	  2000-04-18,	  "tuesday",	  2000-04-18 21:59:59.999,	  true,	  2000-04-19 03:59:59.999,	  false	  ]
[ 109,	  2000-04-19,	  "wednesday",	  2000-04-19 21:59:59.999,	  true,	  2000-04-20 03:59:59.999,	  false	  ]
[ 110,	  2000-04-20,	  "thursday",	  2000-04-20 21:59:59.999,	  true,	  2000-04-21 03:59:59.999,	  false	  ]
[ 111,	  2000-04-21,	  "friday",	  2000-04-21 21:59:59.999,	  true,	  2000-04-22 03:59:59.999,	  false	  ]
[ 112,	  2000-04-22,	  "saturday",	  2000-04-22 21:59:59.999,	  true,	  2000-04-23 03:59:59.999,	  false	  ]
[ 113,	  2000-04-23,	  "sunday",	  2000-04-23 21:59:59.999,	  true,	  2000-04-24 03:59:59.999,	  false	  ]
[ 114,	  2000-04-24,	  "monday",	  2000-04-24 21:59:59.999,	  true,	  2000-04-25 03:59:59.999,	  false	  ]
[ 115,	  2000-04-25,	  "tuesday",	  2000-04-25 21:59:59.999,	  true,	  2000-04-26 03:59:59.999,	  false	  ]
[ 116,	  2000-04-26,	  "wednesday",	  2000-04-26 21:59:59.999,	  true,	  2000-04-27 03:59:59.999,	  false	  ]
[ 117,	  2000-04-27,	  "thursday",	  2000-04-27 21:59:59.999,	  true,	  2000-04-28 03:59:59.999,	  false	  ]
[ 118,	  2000-04-28,	  "friday",	  2000-04-28 21:59:59.999,	  true,	  2000-04-29 03:59:59.999,	  false	  ]
[ 119,	  2000-04-29,	  "saturday",	  2000-04-29 21:59:59.999,	  true,	  2000-04-30 03:59:59.999,	  false	  ]
[ 120,	  2000-04-30,	  "sunday",	  2000-04-30 21:59:59.999,	  true,	  2000-05-01 03:59:59.999,	  false	  ]
[ 121,	  2000-05-01,	  "monday",	  2000-05-01 21:59:59.999,	  true,	  2000-05-02 03:59:59.999,	  false	  ]
[ 122,	  2000-05-02,	  "tuesday",	  2000-05-02 21:59:59.999,	  true,	  2000-05-03 03:59:59.999,	  false	  ]
[ 123,	  2000-05-03,	  "wednesday",	  2000-05-03 21:59:59.999,	  true,	  2000-05-04 03:59:59.999,	  false	  ]
[ 124,	  2000-05-04,	  "thursday",	  2000-05-04 21:59:59.999,	  true,	  2000-05-05 03:59:59.999,	  false	  ]
[ 125,	  2000-05-05,	  "friday",	  2000-05-05 21:59:59.999,	  true,	  2000-05-06 03:59:59.999,	  false	  ]
[ 126,	  2000-05-06,	  "saturday",	  2000-05-06 21:59:59.999,	  true,	  2000-05-07 03:59:59.999,	  false	  ]
[ 127,	  2000-05-07,	  "sunday",	  2000-05-07 21:59:59.999,	  true,	  2000-05-08 03:59:59.999,	  false	  ]
[ 128,	  2000-05-08,	  "monday",	  2000-05-08 21:59:59.999,	  true,	  2000-05-09 03:59:59.999,	  false	  ]
[ 129,	  2000-05-09,	  "tuesday",	  2000-05-09 21:59:59.999,	  true,	  2000-05-10 03:59:59.999,	  false	  ]
[ 130,	  2000-05-10,	  "wednesday",	  2000-05-10 21:59:59.999,	  true,	  2000-05-11 03:59:59.999,	  false	  ]
[ 131,	  2000-05-11,	  "thursday",	  2000-05-11 21:59:59.999,	  true,	  2000-05-12 03:59:59.999,	  false	  ]
[ 132,	  2000-05-12,	  "friday",	  2000-05-12 21:59:59.999,	  true,	  2000-05-13 03:59:59.999,	  false	  ]
[ 133,	  2000-05-13,	  "saturday",	  2000-05-13 21:59:59.999,	  true,	  2000-05-14 03:59:59.999,	  false	  ]
[ 134,	  2000-05-14,	  "sunday",	  2000-05-14 21:59:59.999,	  true,	  2000-05-15 03:59:59.999,	  false	  ]
[ 135,	  2000-05-15,	  "monday",	  2000-05-15 21:59:59.999,	  true,	  2000-05-16 03:59:59.999,	  false	  ]
[ 136,	  2000-05-16,	  "tuesday",	  2000-05-16 21:59:59.999,	  true,	  2000-05-17 03:59:59.999,	  false	  ]
[ 137,	  2000-05-17,	  "wednesday",	  2000-05-17 21:59:59.999,	  true,	  2000-05-18 03:59:59.999,	  false	  ]
[ 138,	  2000-05-18,	  "thursday",	  2000-05-18 21:59:59.999,	  true,	  2000-05-19 03:59:59.999,	  false	  ]
[ 139,	  2000-05-19,	  "friday",	  2000-05-19 21:59:59.999,	  true,	  2000-05-20 03:59:59.999,	  false	  ]
[ 140,	  2000-05-20,	  "saturday",	  2000-05-20 21:59:59.999,	  true,	  2000-05-21 03:59:59.999,	  false	  ]
[ 141,	  2000-05-21,	  "sunday",	  2000-05-21 21:59:59.999,	  true,	  2000-05-22 03:59:59.999,	  false	  ]
[ 142,	  2000-05-22,	  "monday",	  2000-05-22 21:59:59.999,	  true,	  2000-05-23 03:59:59.999,	  false	  ]
[ 143,	  2000-05-23,	  "tuesday",	  2000-05-23 21:59:59.999,	  true,	  2000-05-24 03:59:59.999,	  false	  ]
[ 144,	  2000-05-24,	  "wednesday",	  2000-05-24 21:59:59.999,	  true,	  2000-05-25 03:59:59.999,	  false	  ]
[ 145,	  2000-05-25,	  "thursday",	  2000-05-25 21:59:59.999,	  true,	  2000-05-26 03:59:59.999,	  false	  ]
[ 146,	  2000-05-26,	  "friday",	  2000-05-26 21:59:59.999,	  true,	  2000-05-27 03:59:59.999,	  false	  ]
[ 147,	  2000-05-27,	  "saturday",	  2000-05-27 21:59:59.999,	  true,	  2000-05-28 03:59:59.999,	  false	  ]
[ 148,	  2000-05-28,	  "sunday",	  2000-05-28 21:59:59.999,	  true,	  2000-05-29 03:59:59.999,	  false	  ]
[ 149,	  2000-05-29,	  "monday",	  2000-05-29 21:59:59.999,	  true,	  2000-05-30 03:59:59.999,	  false	  ]
[ 150,	  2000-05-30,	  "tuesday",	  2000-05-30 21:59:59.999,	  true,	  2000-05-31 03:59:59.999,	  false	  ]
[ 151,	  2000-05-31,	  "wednesday",	  2000-05-31 21:59:59.999,	  true,	  2000-06-01 03:59:59.999,	  false	  ]
[ 152,	  2000-06-01,	  "thursday",	  2000-06-01 21:59:59.999,	  true,	  2000-06-02 03:59:59.999,	  false	  ]
[ 153,	  2000-06-02,	  "friday",	  2000-06-02 21:59:59.999,	  true,	  2000-06-03 03:59:59.999,	  false	  ]
[ 154,	  2000-06-03,	  "saturday",	  2000-06-03 21:59:59.999,	  true,	  2000-06-04 03:59:59.999,	  false	  ]
[ 155,	  2000-06-04,	  "sunday",	  2000-06-04 21:59:59.999,	  true,	  2000-06-05 03:59:59.999,	  false	  ]
[ 156,	  2000-06-05,	  "monday",	  2000-06-05 21:59:59.999,	  true,	  2000-06-06 03:59:59.999,	  false	  ]
[ 157,	  2000-06-06,	  "tuesday",	  2000-06-06 21:59:59.999,	  true,	  2000-06-07 03:59:59.999,	  false	  ]
[ 158,	  2000-06-07,	  "wednesday",	  2000-06-07 21:59:59.999,	  true,	  2000-06-08 03:59:59.999,	  false	  ]
[ 159,	  2000-06-08,	  "thursday",	  2000-06-08 21:59:59.999,	  true,	  2000-06-09 03:59:59.999,	  false	  ]
[ 160,	  2000-06-09,	  "friday",	  2000-06-09 21:59:59.999,	  true,	  2000-06-10 03:59:59.999,	  false	  ]
[ 161,	  2000-06-10,	  "saturday",	  2000-06-10 21:59:59.999,	  true,	  2000-06-11 03:59:59.999,	  false	  ]
[ 162,	  2000-06-11,	  "sunday",	  2000-06-11 21:59:59.999,	  true,	  2000-06-12 03:59:59.999,	  false	  ]
[ 163,	  2000-06-12,	  "monday",	  2000-06-12 21:59:59.999,	  true,	  2000-06-13 03:59:59.999,	  false	  ]
[ 164,	  2000-06-13,	  "tuesday",	  2000-06-13 21:59:59.999,	  true,	  2000-06-14 03:59:59.999,	  false	  ]
[ 165,	  2000-06-14,	  "wednesday",	  2000-06-14 21:59:59.999,	  true,	  2000-06-15 03:59:59.999,	  false	  ]
[ 166,	  2000-06-15,	  "thursday",	  2000-06-15 21:59:59.999,	  true,	  2000-06-16 03:59:59.999,	  false	  ]
[ 167,	  2000-06-16,	  "friday",	  2000-06-16 21:59:59.999,	  true,	  2000-06-17 03:59:59.999,	  false	  ]
[ 168,	  2000-06-17,	  "saturday",	  2000-06-17 21:59:59.999,	  true,	  2000-06-18 03:59:59.999,	  false	  ]
[ 169,	  2000-06-18,	  "sunday",	  2000-06-18 21:59:59.999,	  true,	  2000-06-19 03:59:59.999,	  false	  ]
[ 170,	  2000-06-19,	  "monday",	  2000-06-19 21:59:59.999,	  true,	  2000-06-20 03:59:59.999,	  false	  ]
[ 171,	  2000-06-20,	  "tuesday",	  2000-06-20 21:59:59.999,	  true,	  2000-06-21 03:59:59.999,	  false	  ]
[ 172,	  2000-06-21,	  "wednesday",	  2000-06-21 21:59:59.999,	  true,	  2000-06-22 03:59:59.999,	  false	  ]
[ 173,	  2000-06-22,	  "thursday",	  2000-06-22 21:59:59.999,	  true,	  2000-06-23 03:59:59.999,	  false	  ]
[ 174,	  2000-06-23,	  "friday",	  2000-06-23 21:59:59.999,	  true,	  2000-06-24 03:59:59.999,	  false	  ]
[ 175,	  2000-06-24,	  "saturday",	  2000-06-24 21:59:59.999,	  true,	  2000-06-25 03:59:59.999,	  false	  ]
[ 176,	  2000-06-25,	  "sunday",	  2000-06-25 21:59:59.999,	  true,	  2000-06-26 03:59:59.999,	  false	  ]
[ 177,	  2000-06-26,	  "monday",	  2000-06-26 21:59:59.999,	  true,	  2000-06-27 03:59:59.999,	  false	  ]
[ 178,	  2000-06-27,	  "tuesday",	  2000-06-27 21:59:59.999,	  true,	  2000-06-28 03:59:59.999,	  false	  ]
[ 179,	  2000-06-28,	  "wednesday",	  2000-06-28 21:59:59.999,	  true,	  2000-06-29 03:59:59.999,	  false	  ]
[ 180,	  2000-06-29,	  "thursday",	  2000-06-29 21:59:59.999,	  true,	  2000-06-30 03:59:59.999,	  false	  ]
[ 181,	  2000-06-30,	  "friday",	  2000-06-30 21:59:59.999,	  true,	  2000-07-01 03:59:59.999,	  false	  ]
[ 182,	  2000-07-01,	  "saturday",	  2000-07-01 21:59:59.999,	  true,	  2000-07-02 03:59:59.999,	  false	  ]
[ 183,	  2000-07-02,	  "sunday",	  2000-07-02 21:59:59.999,	  true,	  2000-07-03 03:59:59.999,	  false	  ]
[ 184,	  2000-07-03,	  "monday",	  2000-07-03 21:59:59.999,	  true,	  2000-07-04 03:59:59.999,	  false	  ]
[ 185,	  2000-07-04,	  "tuesday",	  2000-07-04 21:59:59.999,	  true,	  2000-07-05 03:59:59.999,	  false	  ]
[ 186,	  2000-07-05,	  "wednesday",	  2000-07-05 21:59:59.999,	  true,	  2000-07-06 03:59:59.999,	  false	  ]
[ 187,	  2000-07-06,	  "thursday",	  2000-07-06 21:59:59.999,	  true,	  2000-07-07 03:59:59.999,	  false	  ]
[ 188,	  2000-07-07,	  "friday",	  2000-07-07 21:59:59.999,	  true,	  2000-07-08 03:59:59.999,	  false	  ]
[ 189,	  2000-07-08,	  "saturday",	  2000-07-08 21:59:59.999,	  true,	  2000-07-09 03:59:59.999,	  false	  ]
[ 190,	  2000-07-09,	  "sunday",	  2000-07-09 21:59:59.999,	  true,	  2000-07-10 03:59:59.999,	  false	  ]
[ 191,	  2000-07-10,	  "monday",	  2000-07-10 21:59:59.999,	  true,	  2000-07-11 03:59:59.999,	  false	  ]
[ 192,	  2000-07-11,	  "tuesday",	  2000-07-11 21:59:59.999,	  true,	  2000-07-12 03:59:59.999,	  false	  ]
[ 193,	  2000-07-12,	  "wednesday",	  2000-07-12 21:59:59.999,	  true,	  2000-07-13 03:59:59.999,	  false	  ]
[ 194,	  2000-07-13,	  "thursday",	  2000-07-13 21:59:59.999,	  true,	  2000-07-14 03:59:59.999,	  false	  ]
[ 195,	  2000-07-14,	  "friday",	  2000-07-14 21:59:59.999,	  true,	  2000-07-15 03:59:59.999,	  false	  ]
[ 196,	  2000-07-15,	  "saturday",	  2000-07-15 21:59:59.999,	  true,	  2000-07-16 03:59:59.999,	  false	  ]
[ 197,	  2000-07-16,	  "sunday",	  2000-07-16 21:59:59.999,	  true,	  2000-07-17 03:59:59.999,	  false	  ]
[ 198,	  2000-07-17,	  "monday",	  2000-07-17 21:59:59.999,	  true,	  2000-07-18 03:59:59.999,	  false	  ]
[ 199,	  2000-07-18,	  "tuesday",	  2000-07-18 21:59:59.999,	  true,	  2000-07-19 03:59:59.999,	  false	  ]
[ 200,	  2000-07-19,	  "wednesday",	  2000-07-19 21:59:59.999,	  true,	  2000-07-20 03:59:59.999,	  false	  ]
[ 201,	  2000-07-20,	  "thursday",	  2000-07-20 21:59:59.999,	  true,	  2000-07-21 03:59:59.999,	  false	  ]
[ 202,	  2000-07-21,	  "friday",	  2000-07-21 21:59:59.999,	  true,	  2000-07-22 03:59:59.999,	  false	  ]
[ 203,	  2000-07-22,	  "saturday",	  2000-07-22 21:59:59.999,	  true,	  2000-07-23 03:59:59.999,	  false	  ]
[ 204,	  2000-07-23,	  "sunday",	  2000-07-23 21:59:59.999,	  true,	  2000-07-24 03:59:59.999,	  false	  ]
[ 205,	  2000-07-24,	  "monday",	  2000-07-24 21:59:59.999,	  true,	  2000-07-25 03:59:59.999,	  false	  ]
[ 206,	  2000-07-25,	  "tuesday",	  2000-07-25 21:59:59.999,	  true,	  2000-07-26 03:59:59.999,	  false	  ]
[ 207,	  2000-07-26,	  "wednesday",	  2000-07-26 21:59:59.999,	  true,	  2000-07-27 03:59:59.999,	  false	  ]
[ 208,	  2000-07-27,	  "thursday",	  2000-07-27 21:59:59.999,	  true,	  2000-07-28 03:59:59.999,	  false	  ]
[ 209,	  2000-07-28,	  "friday",	  2000-07-28 21:59:59.999,	  true,	  2000-07-29 03:59:59.999,	  false	  ]
[ 210,	  2000-07-29,	  "saturday",	  2000-07-29 21:59:59.999,	  true,	  2000-07-30 03:59:59.999,	  false	  ]
[ 211,	  2000-07-30,	  "sunday",	  2000-07-30 21:59:59.999,	  true,	  2000-07-31 03:59:59.999,	  false	  ]
[ 212,	  2000-07-31,	  "monday",	  2000-07-31 21:59:59.999,	  true,	  2000-08-01 03:59:59.999,	  false	  ]
[ 213,	  2000-08-01,	  "tuesday",	  2000-08-01 21:59:59.999,	  true,	  2000-08-02 03:59:59.999,	  false	  ]
[ 214,	  2000-08-02,	  "wednesday",	  2000-08-02 21:59:59.999,	  true,	  2000-08-03 03:59:59.999,	  false	  ]
[ 215,	  2000-08-03,	  "thursday",	  2000-08-03 21:59:59.999,	  true,	  2000-08-04 03:59:59.999,	  false	  ]
[ 216,	  2000-08-04,	  "friday",	  2000-08-04 21:59:59.999,	  true,	  2000-08-05 03:59:59.999,	  false	  ]
[ 217,	  2000-08-05,	  "saturday",	  2000-08-05 21:59:59.999,	  true,	  2000-08-06 03:59:59.999,	  false	  ]
[ 218,	  2000-08-06,	  "sunday",	  2000-08-06 21:59:59.999,	  true,	  2000-08-07 03:59:59.999,	  false	  ]
[ 219,	  2000-08-07,	  "monday",	  2000-08-07 21:59:59.999,	  true,	  2000-08-08 03:59:59.999,	  false	  ]
[ 220,	  2000-08-08,	  "tuesday",	  2000-08-08 21:59:59.999,	  true,	  2000-08-09 03:59:59.999,	  false	  ]
[ 221,	  2000-08-09,	  "wednesday",	  2000-08-09 21:59:59.999,	  true,	  2000-08-10 03:59:59.999,	  false	  ]
[ 222,	  2000-08-10,	  "thursday",	  2000-08-10 21:59:59.999,	  true,	  2000-08-11 03:59:59.999,	  false	  ]
[ 223,	  2000-08-11,	  "friday",	  2000-08-11 21:59:59.999,	  true,	  2000-08-12 03:59:59.999,	  false	  ]
[ 224,	  2000-08-12,	  "saturday",	  2000-08-12 21:59:59.999,	  true,	  2000-08-13 03:59:59.999,	  false	  ]
[ 225,	  2000-08-13,	  "sunday",	  2000-08-13 21:59:59.999,	  true,	  2000-08-14 03:59:59.999,	  false	  ]
[ 226,	  2000-08-14,	  "monday",	  2000-08-14 21:59:59.999,	  true,	  2000-08-15 03:59:59.999,	  false	  ]
[ 227,	  2000-08-15,	  "tuesday",	  2000-08-15 21:59:59.999,	  true,	  2000-08-16 03:59:59.999,	  false	  ]
[ 228,	  2000-08-16,	  "wednesday",	  2000-08-16 21:59:59.999,	  true,	  2000-08-17 03:59:59.999,	  false	  ]
[ 229,	  2000-08-17,	  "thursday",	  2000-08-17 21:59:59.999,	  true,	  2000-08-18 03:59:59.999,	  false	  ]
[ 230,	  2000-08-18,	  "friday",	  2000-08-18 21:59:59.999,	  true,	  2000-08-19 03:59:59.999,	  false	  ]
[ 231,	  2000-08-19,	  "saturday",	  2000-08-19 21:59:59.999,	  true,	  2000-08-20 03:59:59.999,	  false	  ]
[ 232,	  2000-08-20,	  "sunday",	  2000-08-20 21:59:59.999,	  true,	  2000-08-21 03:59:59.999,	  false	  ]
[ 233,	  2000-08-21,	  "monday",	  2000-08-21 21:59:59.999,	  true,	  2000-08-22 03:59:59.999,	  false	  ]
[ 234,	  2000-08-22,	  "tuesday",	  2000-08-22 21:59:59.999,	  true,	  2000-08-23 03:59:59.999,	  false	  ]
[ 235,	  2000-08-23,	  "wednesday",	  2000-08-23 21:59:59.999,	  true,	  2000-08-24 03:59:59.999,	  false	  ]
[ 236,	  2000-08-24,	  "thursday",	  2000-08-24 21:59:59.999,	  true,	  2000-08-25 03:59:59.999,	  false	  ]
[ 237,	  2000-08-25,	  "friday",	  2000-08-25 21:59:59.999,	  true,	  2000-08-26 03:59:59.999,	  false	  ]
[ 238,	  2000-08-26,	  "saturday",	  2000-08-26 21:59:59.999,	  true,	  2000-08-27 03:59:59.999,	  false	  ]
[ 239,	  2000-08-27,	  "sunday",	  2000-08-27 21:59:59.999,	  true,	  2000-08-28 03:59:59.999,	  false	  ]
[ 240,	  2000-08-28,	  "monday",	  2000-08-28 21:59:59.999,	  true,	  2000-08-29 03:59:59.999,	  false	  ]
[ 241,	  2000-08-29,	  "tuesday",	  2000-08-29 21:59:59.999,	  true,	  2000-08-30 03:59:59.999,	  false	  ]
[ 242,	  2000-08-30,	  "wednesday",	  2000-08-30 21:59:59.999,	  true,	  2000-08-31 03:59:59.999,	  false	  ]
[ 243,	  2000-08-31,	  "thursday",	  2000-08-31 21:59:59.999,	  true,	  2000-09-01 03:59:59.999,	  false	  ]
[ 244,	  2000-09-01,	  "friday",	  2000-09-01 21:59:59.999,	  true,	  2000-09-02 03:59:59.999,	  false	  ]
[ 245,	  2000-09-02,	  "saturday",	  2000-09-02 21:59:59.999,	  true,	  2000-09-03 03:59:59.999,	  false	  ]
[ 246,	  2000-09-03,	  "sunday",	  2000-09-03 21:59:59.999,	  true,	  2000-09-04 03:59:59.999,	  false	  ]
[ 247,	  2000-09-04,	  "monday",	  2000-09-04 21:59:59.999,	  true,	  2000-09-05 03:59:59.999,	  false	  ]
[ 248,	  2000-09-05,	  "tuesday",	  2000-09-05 21:59:59.999,	  true,	  2000-09-06 03:59:59.999,	  false	  ]
[ 249,	  2000-09-06,	  "wednesday",	  2000-09-06 21:59:59.999,	  true,	  2000-09-07 03:59:59.999,	  false	  ]
[ 250,	  2000-09-07,	  "thursday",	  2000-09-07 21:59:59.999,	  true,	  2000-09-08 03:59:59.999,	  false	  ]
[ 251,	  2000-09-08,	  "friday",	  2000-09-08 21:59:59.999,	  true,	  2000-09-09 03:59:59.999,	  false	  ]
[ 252,	  2000-09-09,	  "saturday",	  2000-09-09 21:59:59.999,	  true,	  2000-09-10 03:59:59.999,	  false	  ]
[ 253,	  2000-09-10,	  "sunday",	  2000-09-10 21:59:59.999,	  true,	  2000-09-11 03:59:59.999,	  false	  ]
[ 254,	  2000-09-11,	  "monday",	  2000-09-11 21:59:59.999,	  true,	  2000-09-12 03:59:59.999,	  false	  ]
[ 255,	  2000-09-12,	  "tuesday",	  2000-09-12 21:59:59.999,	  true,	  2000-09-13 03:59:59.999,	  false	  ]
[ 256,	  2000-09-13,	  "wednesday",	  2000-09-13 21:59:59.999,	  true,	  2000-09-14 03:59:59.999,	  false	  ]
[ 257,	  2000-09-14,	  "thursday",	  2000-09-14 21:59:59.999,	  true,	  2000-09-15 03:59:59.999,	  false	  ]
[ 258,	  2000-09-15,	  "friday",	  2000-09-15 21:59:59.999,	  true,	  2000-09-16 03:59:59.999,	  false	  ]
[ 259,	  2000-09-16,	  "saturday",	  2000-09-16 21:59:59.999,	  true,	  2000-09-17 03:59:59.999,	  false	  ]
[ 260,	  2000-09-17,	  "sunday",	  2000-09-17 21:59:59.999,	  true,	  2000-09-18 03:59:59.999,	  false	  ]
[ 261,	  2000-09-18,	  "monday",	  2000-09-18 21:59:59.999,	  true,	  2000-09-19 03:59:59.999,	  false	  ]
[ 262,	  2000-09-19,	  "tuesday",	  2000-09-19 21:59:59.999,	  true,	  2000-09-20 03:59:59.999,	  false	  ]
[ 263,	  2000-09-20,	  "wednesday",	  2000-09-20 21:59:59.999,	  true,	  2000-09-21 03:59:59.999,	  false	  ]
[ 264,	  2000-09-21,	  "thursday",	  2000-09-21 21:59:59.999,	  true,	  2000-09-22 03:59:59.999,	  false	  ]
[ 265,	  2000-09-22,	  "friday",	  2000-09-22 21:59:59.999,	  true,	  2000-09-23 03:59:59.999,	  false	  ]
[ 266,	  2000-09-23,	  "saturday",	  2000-09-23 21:59:59.999,	  true,	  2000-09-24 03:59:59.999,	  false	  ]
[ 267,	  2000-09-24,	  "sunday",	  2000-09-24 21:59:59.999,	  true,	  2000-09-25 03:59:59.999,	  false	  ]
[ 268,	  2000-09-25,	  "monday",	  2000-09-25 21:59:59.999,	  true,	  2000-09-26 03:59:59.999,	  false	  ]
[ 269,	  2000-09-26,	  "tuesday",	  2000-09-26 21:59:59.999,	  true,	  2000-09-27 03:59:59.999,	  false	  ]
[ 270,	  2000-09-27,	  "wednesday",	  2000-09-27 21:59:59.999,	  true,	  2000-09-28 03:59:59.999,	  false	  ]
[ 271,	  2000-09-28,	  "thursday",	  2000-09-28 21:59:59.999,	  true,	  2000-09-29 03:59:59.999,	  false	  ]
[ 272,	  2000-09-29,	  "friday",	  2000-09-29 21:59:59.999,	  true,	  2000-09-30 03:59:59.999,	  false	  ]
[ 273,	  2000-09-30,	  "saturday",	  2000-09-30 21:59:59.999,	  true,	  2000-10-01 03:59:59.999,	  false	  ]
[ 274,	  2000-10-01,	  "sunday",	  2000-10-01 21:59:59.999,	  true,	  2000-10-02 03:59:59.999,	  false	  ]
[ 275,	  2000-10-02,	  "monday",	  2000-10-02 21:59:59.999,	  true,	  2000-10-03 03:59:59.999,	  false	  ]
[ 276,	  2000-10-03,	  "tuesday",	  2000-10-03 21:59:59.999,	  true,	  2000-10-04 03:59:59.999,	  false	  ]
[ 277,	  2000-10-04,	  "wednesday",	  2000-10-04 21:59:59.999,	  true,	  2000-10-05 03:59:59.999,	  false	  ]
[ 278,	  2000-10-05,	  "thursday",	  2000-10-05 21:59:59.999,	  true,	  2000-10-06 03:59:59.999,	  false	  ]
[ 279,	  2000-10-06,	  "friday",	  2000-10-06 21:59:59.999,	  true,	  2000-10-07 03:59:59.999,	  false	  ]
[ 280,	  2000-10-07,	  "saturday",	  2000-10-07 21:59:59.999,	  true,	  2000-10-08 03:59:59.999,	  false	  ]
[ 281,	  2000-10-08,	  "sunday",	  2000-10-08 21:59:59.999,	  true,	  2000-10-09 03:59:59.999,	  false	  ]
[ 282,	  2000-10-09,	  "monday",	  2000-10-09 21:59:59.999,	  true,	  2000-10-10 03:59:59.999,	  false	  ]
[ 283,	  2000-10-10,	  "tuesday",	  2000-10-10 21:59:59.999,	  true,	  2000-10-11 03:59:59.999,	  false	  ]
[ 284,	  2000-10-11,	  "wednesday",	  2000-10-11 21:59:59.999,	  true,	  2000-10-12 03:59:59.999,	  false	  ]
[ 285,	  2000-10-12,	  "thursday",	  2000-10-12 21:59:59.999,	  true,	  2000-10-13 03:59:59.999,	  false	  ]
[ 286,	  2000-10-13,	  "friday",	  2000-10-13 21:59:59.999,	  true,	  2000-10-14 03:59:59.999,	  false	  ]
[ 287,	  2000-10-14,	  "saturday",	  2000-10-14 21:59:59.999,	  true,	  2000-10-15 03:59:59.999,	  false	  ]
[ 288,	  2000-10-15,	  "sunday",	  2000-10-15 21:59:59.999,	  true,	  2000-10-16 03:59:59.999,	  false	  ]
[ 289,	  2000-10-16,	  "monday",	  2000-10-16 21:59:59.999,	  true,	  2000-10-17 03:59:59.999,	  false	  ]
[ 290,	  2000-10-17,	  "tuesday",	  2000-10-17 21:59:59.999,	  true,	  2000-10-18 03:59:59.999,	  false	  ]
[ 291,	  2000-10-18,	  "wednesday",	  2000-10-18 21:59:59.999,	  true,	  2000-10-19 03:59:59.999,	  false	  ]
[ 292,	  2000-10-19,	  "thursday",	  2000-10-19 21:59:59.999,	  true,	  2000-10-20 03:59:59.999,	  false	  ]
[ 293,	  2000-10-20,	  "friday",	  2000-10-20 21:59:59.999,	  true,	  2000-10-21 03:59:59.999,	  false	  ]
[ 294,	  2000-10-21,	  "saturday",	  2000-10-21 21:59:59.999,	  true,	  2000-10-22 03:59:59.999,	  false	  ]
[ 295,	  2000-10-22,	  "sunday",	  2000-10-22 21:59:59.999,	  true,	  2000-10-23 03:59:59.999,	  false	  ]
[ 296,	  2000-10-23,	  "monday",	  2000-10-23 21:59:59.999,	  true,	  2000-10-24 03:59:59.999,	  false	  ]
[ 297,	  2000-10-24,	  "tuesday",	  2000-10-24 21:59:59.999,	  true,	  2000-10-25 03:59:59.999,	  false	  ]
[ 298,	  2000-10-25,	  "wednesday",	  2000-10-25 21:59:59.999,	  true,	  2000-10-26 03:59:59.999,	  false	  ]
[ 299,	  2000-10-26,	  "thursday",	  2000-10-26 21:59:59.999,	  true,	  2000-10-27 03:59:59.999,	  false	  ]
[ 300,	  2000-10-27,	  "friday",	  2000-10-27 21:59:59.999,	  true,	  2000-10-28 03:59:59.999,	  false	  ]
[ 301,	  2000-10-28,	  "saturday",	  2000-10-28 21:59:59.999,	  true,	  2000-10-29 03:59:59.999,	  false	  ]
[ 302,	  2000-10-29,	  "sunday",	  2000-10-29 22:59:59.999,	  false,  2000-10-30 02:59:59.999,	  true	  ]
[ 303,	  2000-10-30,	  "monday",	  2000-10-30 22:59:59.999,	  false,  2000-10-31 02:59:59.999,	  true	  ]
[ 304,	  2000-10-31,	  "tuesday",	  2000-10-31 22:59:59.999,	  false,  2000-11-01 02:59:59.999,	  true	  ]
[ 305,	  2000-11-01,	  "wednesday",	  2000-11-01 22:59:59.999,	  false,  2000-11-02 02:59:59.999,	  true	  ]
[ 306,	  2000-11-02,	  "thursday",	  2000-11-02 22:59:59.999,	  false,  2000-11-03 02:59:59.999,	  true	  ]
[ 307,	  2000-11-03,	  "friday",	  2000-11-03 22:59:59.999,	  false,  2000-11-04 02:59:59.999,	  true	  ]
[ 308,	  2000-11-04,	  "saturday",	  2000-11-04 22:59:59.999,	  false,  2000-11-05 02:59:59.999,	  true	  ]
[ 309,	  2000-11-05,	  "sunday",	  2000-11-05 22:59:59.999,	  false,  2000-11-06 02:59:59.999,	  true	  ]
[ 310,	  2000-11-06,	  "monday",	  2000-11-06 22:59:59.999,	  false,  2000-11-07 02:59:59.999,	  true	  ]
[ 311,	  2000-11-07,	  "tuesday",	  2000-11-07 22:59:59.999,	  false,  2000-11-08 02:59:59.999,	  true	  ]
[ 312,	  2000-11-08,	  "wednesday",	  2000-11-08 22:59:59.999,	  false,  2000-11-09 02:59:59.999,	  true	  ]
[ 313,	  2000-11-09,	  "thursday",	  2000-11-09 22:59:59.999,	  false,  2000-11-10 02:59:59.999,	  true	  ]
[ 314,	  2000-11-10,	  "friday",	  2000-11-10 22:59:59.999,	  false,  2000-11-11 02:59:59.999,	  true	  ]
[ 315,	  2000-11-11,	  "saturday",	  2000-11-11 22:59:59.999,	  false,  2000-11-12 02:59:59.999,	  true	  ]
[ 316,	  2000-11-12,	  "sunday",	  2000-11-12 22:59:59.999,	  false,  2000-11-13 02:59:59.999,	  true	  ]
[ 317,	  2000-11-13,	  "monday",	  2000-11-13 22:59:59.999,	  false,  2000-11-14 02:59:59.999,	  true	  ]
[ 318,	  2000-11-14,	  "tuesday",	  2000-11-14 22:59:59.999,	  false,  2000-11-15 02:59:59.999,	  true	  ]
[ 319,	  2000-11-15,	  "wednesday",	  2000-11-15 22:59:59.999,	  false,  2000-11-16 02:59:59.999,	  true	  ]
[ 320,	  2000-11-16,	  "thursday",	  2000-11-16 22:59:59.999,	  false,  2000-11-17 02:59:59.999,	  true	  ]
[ 321,	  2000-11-17,	  "friday",	  2000-11-17 22:59:59.999,	  false,  2000-11-18 02:59:59.999,	  true	  ]
[ 322,	  2000-11-18,	  "saturday",	  2000-11-18 22:59:59.999,	  false,  2000-11-19 02:59:59.999,	  true	  ]
[ 323,	  2000-11-19,	  "sunday",	  2000-11-19 22:59:59.999,	  false,  2000-11-20 02:59:59.999,	  true	  ]
[ 324,	  2000-11-20,	  "monday",	  2000-11-20 22:59:59.999,	  false,  2000-11-21 02:59:59.999,	  true	  ]
[ 325,	  2000-11-21,	  "tuesday",	  2000-11-21 22:59:59.999,	  false,  2000-11-22 02:59:59.999,	  true	  ]
[ 326,	  2000-11-22,	  "wednesday",	  2000-11-22 22:59:59.999,	  false,  2000-11-23 02:59:59.999,	  true	  ]
[ 327,	  2000-11-23,	  "thursday",	  2000-11-23 22:59:59.999,	  false,  2000-11-24 02:59:59.999,	  true	  ]
[ 328,	  2000-11-24,	  "friday",	  2000-11-24 22:59:59.999,	  false,  2000-11-25 02:59:59.999,	  true	  ]
[ 329,	  2000-11-25,	  "saturday",	  2000-11-25 22:59:59.999,	  false,  2000-11-26 02:59:59.999,	  true	  ]
[ 330,	  2000-11-26,	  "sunday",	  2000-11-26 22:59:59.999,	  false,  2000-11-27 02:59:59.999,	  true	  ]
[ 331,	  2000-11-27,	  "monday",	  2000-11-27 22:59:59.999,	  false,  2000-11-28 02:59:59.999,	  true	  ]
[ 332,	  2000-11-28,	  "tuesday",	  2000-11-28 22:59:59.999,	  false,  2000-11-29 02:59:59.999,	  true	  ]
[ 333,	  2000-11-29,	  "wednesday",	  2000-11-29 22:59:59.999,	  false,  2000-11-30 02:59:59.999,	  true	  ]
[ 334,	  2000-11-30,	  "thursday",	  2000-11-30 22:59:59.999,	  false,  2000-12-01 02:59:59.999,	  true	  ]
[ 335,	  2000-12-01,	  "friday",	  2000-12-01 22:59:59.999,	  false,  2000-12-02 02:59:59.999,	  true	  ]
[ 336,	  2000-12-02,	  "saturday",	  2000-12-02 22:59:59.999,	  false,  2000-12-03 02:59:59.999,	  true	  ]
[ 337,	  2000-12-03,	  "sunday",	  2000-12-03 22:59:59.999,	  false,  2000-12-04 02:59:59.999,	  true	  ]
[ 338,	  2000-12-04,	  "monday",	  2000-12-04 22:59:59.999,	  false,  2000-12-05 02:59:59.999,	  true	  ]
[ 339,	  2000-12-05,	  "tuesday",	  2000-12-05 22:59:59.999,	  false,  2000-12-06 02:59:59.999,	  true	  ]
[ 340,	  2000-12-06,	  "wednesday",	  2000-12-06 22:59:59.999,	  false,  2000-12-07 02:59:59.999,	  true	  ]
[ 341,	  2000-12-07,	  "thursday",	  2000-12-07 22:59:59.999,	  false,  2000-12-08 02:59:59.999,	  true	  ]
[ 342,	  2000-12-08,	  "friday",	  2000-12-08 22:59:59.999,	  false,  2000-12-09 02:59:59.999,	  true	  ]
[ 343,	  2000-12-09,	  "saturday",	  2000-12-09 22:59:59.999,	  false,  2000-12-10 02:59:59.999,	  true	  ]
[ 344,	  2000-12-10,	  "sunday",	  2000-12-10 22:59:59.999,	  false,  2000-12-11 02:59:59.999,	  true	  ]
[ 345,	  2000-12-11,	  "monday",	  2000-12-11 22:59:59.999,	  false,  2000-12-12 02:59:59.999,	  true	  ]
[ 346,	  2000-12-12,	  "tuesday",	  2000-12-12 22:59:59.999,	  false,  2000-12-13 02:59:59.999,	  true	  ]
[ 347,	  2000-12-13,	  "wednesday",	  2000-12-13 22:59:59.999,	  false,  2000-12-14 02:59:59.999,	  true	  ]
[ 348,	  2000-12-14,	  "thursday",	  2000-12-14 22:59:59.999,	  false,  2000-12-15 02:59:59.999,	  true	  ]
[ 349,	  2000-12-15,	  "friday",	  2000-12-15 22:59:59.999,	  false,  2000-12-16 02:59:59.999,	  true	  ]
[ 350,	  2000-12-16,	  "saturday",	  2000-12-16 22:59:59.999,	  false,  2000-12-17 02:59:59.999,	  true	  ]
[ 351,	  2000-12-17,	  "sunday",	  2000-12-17 22:59:59.999,	  false,  2000-12-18 02:59:59.999,	  true	  ]
[ 352,	  2000-12-18,	  "monday",	  2000-12-18 22:59:59.999,	  false,  2000-12-19 02:59:59.999,	  true	  ]
[ 353,	  2000-12-19,	  "tuesday",	  2000-12-19 22:59:59.999,	  false,  2000-12-20 02:59:59.999,	  true	  ]
[ 354,	  2000-12-20,	  "wednesday",	  2000-12-20 22:59:59.999,	  false,  2000-12-21 02:59:59.999,	  true	  ]
[ 355,	  2000-12-21,	  "thursday",	  2000-12-21 22:59:59.999,	  false,  2000-12-22 02:59:59.999,	  true	  ]
[ 356,	  2000-12-22,	  "friday",	  2000-12-22 22:59:59.999,	  false,  2000-12-23 02:59:59.999,	  true	  ]
[ 357,	  2000-12-23,	  "saturday",	  2000-12-23 22:59:59.999,	  false,  2000-12-24 02:59:59.999,	  true	  ]
[ 358,	  2000-12-24,	  "sunday",	  2000-12-24 22:59:59.999,	  false,  2000-12-25 02:59:59.999,	  true	  ]
[ 359,	  2000-12-25,	  "monday",	  2000-12-25 22:59:59.999,	  false,  2000-12-26 02:59:59.999,	  true	  ]
[ 360,	  2000-12-26,	  "tuesday",	  2000-12-26 22:59:59.999,	  false,  2000-12-27 02:59:59.999,	  true	  ]
[ 361,	  2000-12-27,	  "wednesday",	  2000-12-27 22:59:59.999,	  false,  2000-12-28 02:59:59.999,	  true	  ]
[ 362,	  2000-12-28,	  "thursday",	  2000-12-28 22:59:59.999,	  false,  2000-12-29 02:59:59.999,	  true	  ]
[ 363,	  2000-12-29,	  "friday",	  2000-12-29 22:59:59.999,	  false,  2000-12-30 02:59:59.999,	  true	  ]
[ 364,	  2000-12-30,	  "saturday",	  2000-12-30 22:59:59.999,	  false,  2000-12-31 02:59:59.999,	  true	  ]
[ 365,	  2000-12-31,	  "sunday",	  2000-12-31 22:59:59.999,	  false,  2001-01-01 02:59:59.999,	  true	  ]
[ 366,	  2001-01-01,	  "monday",	  2001-01-01 22:59:59.999,	  false,  2001-01-02 02:59:59.999,	  true	  ]
[ 367,	  2001-01-02,	  "tuesday",	  2001-01-02 22:59:59.999,	  false,  2001-01-03 02:59:59.999,	  true	  ]
[ 368,	  2001-01-03,	  "wednesday",	  2001-01-03 22:59:59.999,	  false,  2001-01-04 02:59:59.999,	  true	  ]
[ 369,	  2001-01-04,	  "thursday",	  2001-01-04 22:59:59.999,	  false,  2001-01-05 02:59:59.999,	  true	  ]
[ 370,	  2001-01-05,	  "friday",	  2001-01-05 22:59:59.999,	  false,  2001-01-06 02:59:59.999,	  true	  ]
[ 371,	  2001-01-06,	  "saturday",	  2001-01-06 22:59:59.999,	  false,  2001-01-07 02:59:59.999,	  true	  ]
[ 372,	  2001-01-07,	  "sunday",	  2001-01-07 22:59:59.999,	  false,  2001-01-08 02:59:59.999,	  true	  ]
[ 373,	  2001-01-08,	  "monday",	  2001-01-08 22:59:59.999,	  false,  2001-01-09 02:59:59.999,	  true	  ]
[ 374,	  2001-01-09,	  "tuesday",	  2001-01-09 22:59:59.999,	  false,  2001-01-10 02:59:59.999,	  true	  ]
