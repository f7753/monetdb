#The 2000 serie  is focussed on parallelism

function clkticks(n:int):void;
barrier	b:= n>0;
	#printf("#clock tick %d\n",n);
	alarm.sleep(2);
	n:= n-1;
	redo b:= n>0;
exit	b;
end clkticks;

counter:=0;
thread 	hdl:=0;	# synchronize through a counter
	io.printf("#handle %d\n",hdl);
	io.print("#start the child");
barrier go:=true;
	user.clkticks(1);
	counter:= counter+1;
	#printf("#counter %d\n",counter);
barrier t:= counter==2;
	leave go;
exit	t;
	#printf("#Redo thread\n");
	redo go;
exit go;
	#printf("#exit thread\n");
exit	hdl;

io.printf("#Main thread\n");
# loop to wait for the child to exit
barrier wl:= true;
	alarm.sleep(5);
	#printf("#Wait for child to exit %d\n",hdl);
barrier	t0:=counter == 2;
	io.printf("#Child died \n");
	leave wl;
exit	t0;
	alarm.sleep(5);
	redo wl;
exit	wl;
