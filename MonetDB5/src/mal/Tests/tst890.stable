# Monet Database Server V5.0
# Copyright (c) 1993-2004, CWI. All rights reserved.
# compiled for 32biti686-pc-linux-gnu/32bit.
# config:/ufs/mk/monet5/src/mal/Tests/tst.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB/dbfarm
# dbname:demo
# Visit http://monetdb.cwi.nl for further information.
##test reference counting of batcalc
#b:= new(:int,:int);
#setName(b,"b");
#insert(b,1,1);
#c:=multiplex.tactics("+",b,2);
#c:=multiplex.tactics("+",b,3);
#c:=multiplex.tactics("+",b,4);
#c:=multiplex.tactics("+",b,5);
#c:=multiplex.tactics("+",b,6);
#c:=multiplex.tactics("+",b,7);
#c:=multiplex.tactics("+",b,8);
#print(c);
#d:= bbp.getRefCount();
#dl:=bbp.getLRefCount();
#dn:= bbp.getNames();
#print(dn,d,dl);
#
#
function Admin.main():int;	# 0  (main:int)
    b := bbp.new(:int,:int);	# 1 CMDBATnew (b:bat[:int,:int])<-($2:int)($3:int)
    bat.setName(b,"b");	# 2 BKCsetName ($4:void)<-(b:bat[:int,:int])($5:str)
    bat.insert(b,1,1);	# 3 BKCinsert_bun ($6:void)<-(b:bat[:int,:int])($7:int)($7:int)
    c := batcalc.+(b,2);	# 4 CMDbatADDcst (c:bat[:int,:int])<-(b:bat[:int,:int])($10:int)
    c := batcalc.+(b,3);	# 5 CMDbatADDcst (c:bat[:int,:int])<-(b:bat[:int,:int])($11:int)
    c := batcalc.+(b,4);	# 6 CMDbatADDcst (c:bat[:int,:int])<-(b:bat[:int,:int])($12:int)
    c := batcalc.+(b,5);	# 7 CMDbatADDcst (c:bat[:int,:int])<-(b:bat[:int,:int])($13:int)
    c := batcalc.+(b,6);	# 8 CMDbatADDcst (c:bat[:int,:int])<-(b:bat[:int,:int])($14:int)
    c := batcalc.+(b,7);	# 9 CMDbatADDcst (c:bat[:int,:int])<-(b:bat[:int,:int])($15:int)
    c := batcalc.+(b,8);	# 10 CMDbatADDcst (c:bat[:int,:int])<-(b:bat[:int,:int])($16:int)
    io.print(c);	# 11 IOprint_val ($17:int)<-(c:bat[:int,:int])
    d := bbp.getRefCount();	# 12 CMDbbpRefCount (d:bat[:int,:int])
    dl := bbp.getLRefCount();	# 13 CMDbbpLRefCount (dl:bat[:int,:int])
    dn := bbp.getNames();	# 14 CMDbbpNames (dn:bat[:int,:str])
    io.print(dn,d,dl);	# 15 IOtable ($21:int)<-(dn:bat[:int,:str])(d:bat[:int,:int])(dl:bat[:int,:int])
end main;	# 16  
#-----------------#
# h	tmp_5	  # name
# int	int	  # type
#-----------------#
[ 1,	  9	  ]
#---------------------------------------------------------#
# bbp	name			refcnt	lrefcnt		  # name
# int	str			int	int		  # type
#---------------------------------------------------------#
[ 1,	  "monet_environment",	  1,	  0		  ]
[ 2,	  "monet_unicode_case",	  1,	  0		  ]
[ 3,	  "timezones",		  1,	  0		  ]
[ 4,	  "b",			  1,	  1		  ]
[ 5,	  "tmp_5",		  1,	  1		  ]
>