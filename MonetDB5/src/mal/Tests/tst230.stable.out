stdout of test 'tst230` in directory 'src/mal` itself:


# 08:01:02 >  
# 08:01:02 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst230.mal </dev/null
# 08:01:02 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## a test checking BAT reference counting under various situations
#	b:= new(:int,:str);
#	i:= getRefCount(b);
#	printf("refcount =%d\n",i);
#	j:= getRefCount(b);
#	printf("lrefcount =%d\n",j);
#
#	insert(b,1,"bat B");
#	print(b);
#	i:= getRefCount(b);
#	printf("second refcount =%d\n",i);
#	j:= getRefCount(b);
#	printf("lrefcount =%d\n",j);
#
#	# referenceing through mirroring
#	b5:= reverse(b);
#	i:= getRefCount(b);
#	printf("after reverse assignment refcount =%d\n",i);
#	j:= getRefCount(b);
#	printf("lrefcount =%d\n",j);
#
#
function Admin.main():int;	# 0  (main:int)
    b := bbp.new(:int,:str);	# 1 CMDBATnew (b:bat[:int,:str])<-($2:int)($3:str)
    i := bbp.getRefCount(b);	# 2 CMDgetBATrefcnt (i:int)<-(b:bat[:int,:str])
    io.printf("refcount =%d\n",i);	# 3 IOprint_formatted_int ($5:int)<-($6:str)(i:int)
    j := bbp.getLRefCount(b);	# 4 CMDgetBATlrefcnt (j:int)<-(b:bat[:int,:str])
    io.printf("lrefcount =%d\n",j);	# 5 IOprint_formatted_int ($8:int)<-($9:str)(j:int)
    bat.insert(b,1,"bat B");	# 6 BKCinsert_bun ($10:void)<-(b:bat[:int,:str])($11:int)($12:str)
    io.print(b);	# 7 IOprint_val ($13:int)<-(b:bat[:int,:str])
    i := bbp.getRefCount(b);	# 8 CMDgetBATrefcnt (i:int)<-(b:bat[:int,:str])
    io.printf("second refcount =%d\n",i);	# 9 IOprint_formatted_int ($14:int)<-($15:str)(i:int)
    j := bbp.getLRefCount(b);	# 10 CMDgetBATlrefcnt (j:int)<-(b:bat[:int,:str])
    io.printf("lrefcount =%d\n",j);	# 11 IOprint_formatted_int ($16:int)<-($9:str)(j:int)
    b5 := bat.reverse(b);	# 12 BKCreverse (b5:bat[:str,:int])<-(b:bat[:int,:str])
    i := bbp.getRefCount(b);	# 13 CMDgetBATrefcnt (i:int)<-(b:bat[:int,:str])
    io.printf("after reverse assignment refcount =%d\n",i);	# 14 IOprint_formatted_int ($18:int)<-($19:str)(i:int)
    j := bbp.getLRefCount(b);	# 15 CMDgetBATlrefcnt (j:int)<-(b:bat[:int,:str])
    io.printf("lrefcount =%d\n",j);	# 16 IOprint_formatted_int ($20:int)<-($9:str)(j:int)
end main;	# 17  
refcount =1
lrefcount =1
#-------------------------#
# h	tmp_4		  # name
# int	str		  # type
#-------------------------#
[ 1,	  "bat B"	  ]
second refcount =1
lrefcount =1
after reverse assignment refcount =1
lrefcount =2

# 08:01:02 >  
# 08:01:02 >  Done.
# 08:01:02 >  

