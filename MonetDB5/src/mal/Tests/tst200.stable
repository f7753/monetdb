# Monet Database Server V5.0
# Copyright (c) 1993-2003, CWI. All rights reserved.
# compiled for 32biti686-pc-linux-gnu/32bit.
# config:/ufs/mk/monet_5/src/mal/Tests/tst.conf
# dbfarm:/ufs/mk/monet_5/Linux/var/MonetDB
# dbname:demo
## The series tst2?? is a patched version of suite_00
## The first and foremost BAT operations
#
#o:=oid(20000000);
#setoid(o);
##test basic functionality of the BAT library.
##focussed on integers
##it includes insertions,deletions,selections, and joins.
#
#b:= new(int,int);
#printf("#~BeginVariableOutput~#\n"); 
##binfo:= info(b);
##err:= print(binfo); 
#printf("#~EndVariableOutput~#\n");
#
#err := insert(b,1,15);
#err := insert(b,2,4);
#n0  := int(nil);
#err := insert(b,3,n0);
#err := insert(b,4,16);
#err := insert(b,5,25);
#err := insert(b,6,36);
#err := insert(b,7,49);
#err := insert(b,8,64);
#err := insert(b,9,n0);
#err := insert(b,n0,n0);
#err := insert(b,n0,81);
#print(b);
#print(b,b,b);
#
function Admin.main():int; #0  (main:int)
    o := calc.oid(20000000); #1 CALClng2oid (o:oid)<-($2:lng)
    calc.setoid(o); #2 CALCsetoidInc ($3:oid)<-(o:oid)
    b := bbp.new(int,int); #3 CMDBATnew (b:bat[int,int])<-(int:int)(int:int)
    system.printf("#~BeginVariableOutput~#\n"); #4 SYSprint_str ($6:int)<-($7:str)
    system.printf("#~EndVariableOutput~#\n"); #5 SYSprint_str ($8:int)<-($9:str)
    err := bat.insert(b,1,15); #6 CMDinsert_bun (err:void)<-(b:bat[int,int])($11:int)($12:int)
    err := bat.insert(b,2,4); #7 CMDinsert_bun (err:void)<-(b:bat[int,int])($13:int)($14:int)
    n0 := calc.int(nil); #8 CALCnil2int (n0:int)<-($16:void)
    err := bat.insert(b,3,n0); #9 CMDinsert_bun (err:void)<-(b:bat[int,int])($17:int)(n0:int)
    err := bat.insert(b,4,16); #10 CMDinsert_bun (err:void)<-(b:bat[int,int])($14:int)($18:int)
    err := bat.insert(b,5,25); #11 CMDinsert_bun (err:void)<-(b:bat[int,int])($19:int)($20:int)
    err := bat.insert(b,6,36); #12 CMDinsert_bun (err:void)<-(b:bat[int,int])($21:int)($22:int)
    err := bat.insert(b,7,49); #13 CMDinsert_bun (err:void)<-(b:bat[int,int])($23:int)($24:int)
    err := bat.insert(b,8,64); #14 CMDinsert_bun (err:void)<-(b:bat[int,int])($25:int)($26:int)
    err := bat.insert(b,9,n0); #15 CMDinsert_bun (err:void)<-(b:bat[int,int])($27:int)(n0:int)
    err := bat.insert(b,n0,n0); #16 CMDinsert_bun (err:void)<-(b:bat[int,int])(n0:int)(n0:int)
    err := bat.insert(b,n0,81); #17 CMDinsert_bun (err:void)<-(b:bat[int,int])(n0:int)($28:int)
    io.print(b); #18 CMDprint_val ($29:int)<-(b:bat[int,int])
    io.print(b,b,b); #19 CMDtable ($30:int)<-(b:bat[int,int])(b:bat[int,int])(b:bat[int,int])
end main; #20  
#~BeginVariableOutput~#
#~EndVariableOutput~#
#-----------------#
# BAT:	  tmp_4	  #
# (int)	  (int)	  #
#-----------------#
[ 1,	  15	  ]
[ 2,	  4	  ]
[ 3,	  nil	  ]
[ 4,	  16	  ]
[ 5,	  25	  ]
[ 6,	  36	  ]
[ 7,	  49	  ]
[ 8,	  64	  ]
[ 9,	  nil	  ]
[ nil,	  nil	  ]
[ nil,	  81	  ]
#---------------------------------#
# BAT:	  tmp_4	| tmp_4	| tmp_4	  #
# (int)	  (int)	| (int)	| (int)	  #
#---------------------------------#
[ 1,	  15,	  15,	  15	  ]
[ 2,	  4,	  4,	  4	  ]
[ 3,	  nil,	  nil,	  nil	  ]
[ 4,	  16,	  16,	  16	  ]
[ 5,	  25,	  25,	  25	  ]
[ 6,	  36,	  36,	  36	  ]
[ 7,	  49,	  49,	  49	  ]
[ 8,	  64,	  64,	  64	  ]
[ 9,	  nil,	  nil,	  nil	  ]
>