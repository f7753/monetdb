function pow(i:int,j:int):int;
	z:= i+j;
	printf("result %d\n",z);
	return z;
end pow;
function tst(A2:bat[void,int],A3:bat[void,int]):bat[void,int]; 
	print(A2);
	resB := mal.new(void,int); 
	bat.setSequenceBase(resB,0@0);
	lim:= count(A2);
	printf("count %d\n",lim);
	m:= -1:lng;
barrier mloop:=mal.nextElement(m,0:lng,lim); 
	printf("loopindex %d\n",m);
        B2 := algebra.fetch(A2,m);       
	printf("B2 value %d\n",B2);
        B3 := algebra.fetch(A3,m);       
	printf("B3 value %d\n",B3);
        cr := pow(B2,B3);
        bat.insert(resB,nil,cr); 
        redo mloop ;    
catch   MALexception;  
exit    MALexception; 
exit    mloop;  
        return resB;    
end tst;   

	b := new(void,int);
	setSequenceBase(b,0@0);
	insert(b,nil,1);
	insert(b,nil,2);
	e:=fetch(b,1);
	print(e);
	print(b);
	c:= copy(b);
	z:= tst(b,c);
	print(z);

