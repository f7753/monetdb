# Monet Database Server V5.0
# Copyright (c) 1993-2004, CWI. All rights reserved.
# compiled for 32biti686-pc-linux-gnu/32bit.
# config:/ufs/mk/monet5/src/mal/Tests/tst.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB/dbfarm
# dbname:demo
#function test(b:bat[:any,:any$2],c:any$2):void;
#        reduce := batcalc./(b,c); 
#end test;
function Admin.test(b:bat[:any,:any$2],c:any$2):void;	# 0  (test:void)<-(b:bat[:any,:any$2])(c:any$2)
    reduce := batcalc./(b,c);	# 1 CMDbatDIVcst (reduce:bat[:any,:any])<-(b:bat[:any,:any$2])(c:any$2)
end test;	# 2  
#function test(b:bat[:any$1,:any],c:any$1):void;
#        reduce := batcalc./(b,c); 
#end test;
function Admin.test(b:bat[:any$1,:any],c:any$1):void;	# 0  (test:void)<-(b:bat[:any$1,:any])(c:any$1)
    reduce := batcalc./(b,c);	# 1 CMDbatDIVcst (reduce:bat[:any,:any])<-(b:bat[:any$1,:any])(c:any$1)
end test;	# 2  
#function test(b:bat[:any,:any]):void;
#        reduce := batcalc./(b,1); 
#end test;
function Admin.test(b:bat[:any,:any]):void;	# 0  (test:void)<-(b:bat[:any,:any])
    reduce := batcalc./(b,1);	# 1 CMDbatDIVcst (reduce:bat[:any,:int])<-(b:bat[:any,:any])($3:int)
end test;	# 2  
#
>