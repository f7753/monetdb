# Monet Database Server V5.0
# Copyright (c) 1993-2003, CWI. All rights reserved.
# compiled for 32biti686-pc-linux-gnu/32bit.
# config:/ufs/mk/monet_5/src/mal/Tests/tst.conf
# dbfarm:/ufs/mk/monet_5/Linux/var/MonetDB
# dbname:demo
##testing flt/lng/int coercions
#
#b:=new(int,int);
#insert(b,1,1);
#insert(b,2,4);
#insert(b,3,9);
#print(b);
#
#f:= flt(b);
#print(f);
#
#l:=lng(b);
#print(l);
#
#i:= int(f);
#print(i);
#
function Admin.main():int; #0  (main:int)
    b := bbp.new(int,int); #1 CMDBATnew (b:bat[int,int])<-(int:int)(int:int)
    bat.insert(b,1,1); #2 CMDinsert_bun ($3:void)<-(b:bat[int,int])($4:int)($4:int)
    bat.insert(b,2,4); #3 CMDinsert_bun ($5:void)<-(b:bat[int,int])($6:int)($7:int)
    bat.insert(b,3,9); #4 CMDinsert_bun ($8:void)<-(b:bat[int,int])($9:int)($10:int)
    io.print(b); #5 CMDprint_val ($11:int)<-(b:bat[int,int])
    f := batcalc.flt(b); #6 CMDconvertint_flt (f:bat[int,flt])<-(b:bat[int,int])
    io.print(f); #7 CMDprint_val ($13:int)<-(f:bat[int,flt])
    l := batcalc.lng(b); #8 CMDconvertint_lng (l:bat[int,lng])<-(b:bat[int,int])
    io.print(l); #9 CMDprint_val ($15:int)<-(l:bat[int,lng])
    i := batcalc.int(f); #10 CMDconvertflt_int (i:bat[int,int])<-(f:bat[int,flt])
    io.print(i); #11 CMDprint_val ($17:int)<-(i:bat[int,int])
end main; #12  
#-----------------#
# BAT:	  tmp_4	  #
# (int)	  (int)	  #
#-----------------#
[ 1,	  1	  ]
[ 2,	  4	  ]
[ 3,	  9	  ]
#-----------------#
# BAT:	  tmp_5	  #
# (int)	  (flt)	  #
#-----------------#
[ 1,	  1	  ]
[ 2,	  4	  ]
[ 3,	  9	  ]
#-----------------#
# BAT:	  tmp_6	  #
# (int)	  (lng)	  #
#-----------------#
[ 1,	  1	  ]
[ 2,	  4	  ]
[ 3,	  9	  ]
#-----------------#
# BAT:	  tmp_7	  #
# (int)	  (int)	  #
#-----------------#
[ 1,	  1	  ]
[ 2,	  4	  ]
[ 3,	  9	  ]
>