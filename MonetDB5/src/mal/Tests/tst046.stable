# Monet Database Server V5.0
# Copyright (c) 1993-2004, CWI. All rights reserved.
# compiled for 32biti686-pc-linux-gnu/32bit.
# config:/ufs/mk/monet5/src/mal/Tests/tst.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB
# dbname:demo
##testing flt/lng/int coercions
#
#b:=new(:int,:int);
#insert(b,1,1);
#insert(b,2,4);
#insert(b,3,9);
#print(b);
#
#f:= flt(b);
#print(f);
#
#l:=lng(b);
#print(l);
#
#i:= int(f);
#print(i);
#
function Admin.main():int;	# 0  (main:int)
    b := bbp.new(:int,:int);	# 1 CMDBATnew (b:bat[int,int])<-($2:int)($3:int)
    bat.insert(b,1,1);	# 2 CMDinsert_bun ($4:void)<-(b:bat[int,int])($5:int)($5:int)
    bat.insert(b,2,4);	# 3 CMDinsert_bun ($6:void)<-(b:bat[int,int])($7:int)($8:int)
    bat.insert(b,3,9);	# 4 CMDinsert_bun ($9:void)<-(b:bat[int,int])($10:int)($11:int)
    io.print(b);	# 5 CMDprint_val ($12:int)<-(b:bat[int,int])
    f := batcalc.flt(b);	# 6 CMDconvertint_flt (f:bat[int,flt])<-(b:bat[int,int])
    io.print(f);	# 7 CMDprint_val ($14:int)<-(f:bat[int,flt])
    l := batcalc.lng(b);	# 8 CMDconvertint_lng (l:bat[int,lng])<-(b:bat[int,int])
    io.print(l);	# 9 CMDprint_val ($16:int)<-(l:bat[int,lng])
    i := batcalc.int(f);	# 10 CMDconvertflt_int (i:bat[int,int])<-(f:bat[int,flt])
    io.print(i);	# 11 CMDprint_val ($18:int)<-(i:bat[int,int])
end main;	# 12  
#-----------------#
# h	tmp_4	  # name
# int	int	  # type
#-----------------#
[ 1,	  1	  ]
[ 2,	  4	  ]
[ 3,	  9	  ]
#-----------------#
# h	tmp_5	  # name
# int	flt	  # type
#-----------------#
[ 1,	  1	  ]
[ 2,	  4	  ]
[ 3,	  9	  ]
#-----------------#
# h	tmp_6	  # name
# int	lng	  # type
#-----------------#
[ 1,	  1	  ]
[ 2,	  4	  ]
[ 3,	  9	  ]
#-----------------#
# h	tmp_7	  # name
# int	int	  # type
#-----------------#
[ 1,	  1	  ]
[ 2,	  4	  ]
[ 3,	  9	  ]
>