stdout of test 'tst107` in directory 'src/mal` itself:


# 07:58:58 >  
# 07:58:58 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst107.mal </dev/null
# 07:58:58 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## analyse the basic interpreter loop
#
#	i:=0;
#barrier	v:= true;
#	leave v;
#	i:= 1;
#exit	v;
#barrier t:= i<3;
#	i:=i+1;
#	redo t:=i<3;
#exit	t;
#	i:= 0;
#
function Admin.main():int;	# 0  (main:int)
    i := 0;	# 1  (i:int)<-($2:int)
barrier v := true;	# 2  (v:bit)<-($4:bit) jump 5
    leave v;	# 3  (v:bit) jump 5
    i := 1;	# 4  (i:int)<-($5:int)
exit v;	# 5  (v:bit)
barrier t := calc.<(i,3);	# 6 CALCcompLTintint (t:bit)<-(i:int)($7:int) jump 9
    i := calc.+(i,1);	# 7 CALCbinaryADDintint (i:int)<-(i:int)($5:int)
    redo t := calc.<(i,3);	# 8 CALCcompLTintint (t:bit)<-(i:int)($7:int) jump 7
exit t;	# 9  (t:bit)
    i := 0;	# 10  (i:int)<-($2:int)
end main;	# 11  

# 07:58:58 >  
# 07:58:58 >  Done.
# 07:58:58 >  

