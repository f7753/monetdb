# Monet Database Server V5.0
# Copyright (c) 1993-2004, CWI. All rights reserved.
# compiled for 32biti686-pc-linux-gnu/32bit.
# config:/ufs/mk/monet5/src/mal/Tests/tst.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB/dbfarm
# dbname:demo
#	x := new(:oid,:chr);
#	de_a := insert(x,1@0,'a');
#	ee_a := insert(x,2@0,'a');
#	y:= new(:chr,:oid);
#	xr:= reverse(x);
#	print(xr);
#	insert(y,xr);
#print("result?");
#	print(y);
#
function Admin.main():int;	# 0  (main:int)
    x := bbp.new(oid:,chr:);	# 1 CMDBATnew (x:bat[:oid,:chr])<-($2:oid)($3:chr)
    de_a := bat.insert(x,1@0,'a');	# 2 BKCinsert_bun (de_a:void)<-(x:bat[:oid,:chr])($5:oid)($6:chr)
    ee_a := bat.insert(x,2@0,'a');	# 3 BKCinsert_bun (ee_a:void)<-(x:bat[:oid,:chr])($8:oid)($6:chr)
    y := bbp.new(chr:,oid:);	# 4 CMDBATnew (y:bat[:chr,:oid])<-($10:chr)($11:oid)
    xr := bat.reverse(x);	# 5 BKCreverse (xr:bat[:chr,:oid])<-(x:bat[:oid,:chr])
    io.print(xr);	# 6 IOprint_val ($13:int)<-(xr:bat[:chr,:oid])
    bat.insert(y,xr);	# 7 BKCinsert_bat ($14:void)<-(y:bat[:chr,:oid])(xr:bat[:chr,:oid])
    io.print("result?");	# 8 IOprint_val ($15:int)<-($16:str)
    io.print(y);	# 9 IOprint_val ($17:int)<-(y:bat[:chr,:oid])
end main;	# 10  
#-----------------#
# t	tmp_4	  # name
# chr	oid	  # type
#-----------------#
[ a,	  1@0	  ]
[ a,	  2@0	  ]
[ "result?" ]
#-----------------#
# h	tmp_5	  # name
# chr	oid	  # type
#-----------------#
[ a,	  1@0	  ]
[ a,	  2@0	  ]
>