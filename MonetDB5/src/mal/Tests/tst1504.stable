# Monet Database Server V5.0
# Copyright (c) 1993-2003, CWI. All rights reserved.
# compiled for 32biti686-pc-linux-gnu/32bit.
# config:/ufs/mk/monet_5/src/mal/Tests/tst.conf
# dbfarm:/ufs/mk/monet_5/Linux/var/MonetDB
# dbname:demo
#	x := new(oid,chr);
#	de_a := insert(x,1@0,'a');
#	ee_a := insert(x,2@0,'a');
#	y:= new(chr,oid);
#	xr:= reverse(x);
#	print(xr);
#	insert(y,xr);
#print("result?");
#	print(y);
#
function Admin.main():int; #0  (main:int)
    x := bbp.new(oid,chr); #1 CMDBATnew (x:bat[oid,chr])<-(oid:oid)(chr:chr)
    de_a := bat.insert(x,1@0,'a'); #2 CMDinsert_bun (de_a:void)<-(x:bat[oid,chr])($5:oid)($6:chr)
    ee_a := bat.insert(x,2@0,'a'); #3 CMDinsert_bun (ee_a:void)<-(x:bat[oid,chr])($8:oid)($6:chr)
    y := bbp.new(chr,oid); #4 CMDBATnew (y:bat[chr,oid])<-(chr:chr)(oid:oid)
    xr := bat.reverse(x); #5 CMDreverse (xr:bat[chr,oid])<-(x:bat[oid,chr])
    io.print(xr); #6 CMDprint_val ($11:int)<-(xr:bat[chr,oid])
    bat.insert(y,xr); #7 CMDinsert_bat ($12:void)<-(y:bat[chr,oid])(xr:bat[chr,oid])
    io.print("result?"); #8 CMDprint_val ($13:int)<-($14:str)
    io.print(y); #9 CMDprint_val ($15:int)<-(y:bat[chr,oid])
end main; #10  
#-----------------#
# BAT:	  tmp_4	  #
# (chr)	  (oid)	  #
#-----------------#
[ 'a',	  1@0	  ]
[ 'a',	  2@0	  ]
[ "result?" ]
#-----------------#
# BAT:	  tmp_5	  #
# (chr)	  (oid)	  #
#-----------------#
[ 'a',	  1@0	  ]
[ 'a',	  2@0	  ]
>