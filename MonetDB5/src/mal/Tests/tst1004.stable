# Monet Database Server V5.0
# Copyright (c) 1993-2004, CWI. All rights reserved.
# compiled for 32biti686-pc-linux-gnu/32bit.
# config:/ufs/mk/monet_5/src/mal/Tests/tst.conf
# dbfarm:/ufs/mk/monet_5/Linux/var/MonetDB
# dbname:demo
## the first of a series of BBP test cases
#
#print("Start test");
#bbp.open();
#b:= new(:int,:int);
#insert(b,1,2);
#bbp.deposit("myfirstbat",b);
#c:= bbp.take("myfirstbat");
#catch MALexception;
#	print(MALexception);
#exit MALexception;
#print("FIRST ROUND");
#print(c);
#bbp.close();
## at the end of the session, the BBP should have discarded
## the temporary bats of the user
#bbp.open();
#print("SECOND ROUND");
#y:=bbp.getObjects();
#print(y);
#v:= bbp.take("myfirstbat");
#catch MALexception;
#	print(MALexception);
#exit MALexception;
#print("got myfirstbat?");
#print(v);
#x:= bbp.getNames();
#print(x);
#bbp.close();
#
function Admin.main():int;	# 0  (main:int)
    io.print("Start test");	# 1 CMDprint_val ($1:int)<-($2:str)
    bbp.open();	# 2 CMDbbpopen ($3:void)
    b := bbp.new(:int,:int);	# 3 CMDBATnew (b:bat[int,int])<-($5:int)($6:int)
    bat.insert(b,1,2);	# 4 CMDinsert_bun ($7:void)<-(b:bat[int,int])($8:int)($9:int)
    bbp.deposit("myfirstbat",b);	# 5 CMDbbpdeposit ($10:void)<-($11:str)(b:bat[int,int])
    c := bbp.take("myfirstbat");	# 6 CMDbbptake (c:bat[any,any])<-($11:str)
catch MALexception;	# 7  (MALexception:str) jump 9
    io.print(MALexception);	# 8 CMDprint_val ($14:int)<-(MALexception:str)
exit MALexception;	# 9  (MALexception:str)
    io.print("FIRST ROUND");	# 10 CMDprint_val ($15:int)<-($16:str)
    io.print(c);	# 11 CMDprint_val ($17:int)<-(c:bat[any,any])
    bbp.close();	# 12 CMDbbpclose ($18:void)
    bbp.open();	# 13 CMDbbpopen ($19:void)
    io.print("SECOND ROUND");	# 14 CMDprint_val ($20:int)<-($21:str)
    y := bbp.getObjects();	# 15 CMDbbpGetObjects (y:bat[int,str])
    io.print(y);	# 16 CMDprint_val ($23:int)<-(y:bat[int,str])
    v := bbp.take("myfirstbat");	# 17 CMDbbptake (v:bat[any,any])<-($11:str)
catch MALexception;	# 18  (MALexception:str) jump 20
    io.print(MALexception);	# 19 CMDprint_val ($25:int)<-(MALexception:str)
exit MALexception;	# 20  (MALexception:str)
    io.print("got myfirstbat?");	# 21 CMDprint_val ($26:int)<-($27:str)
    io.print(v);	# 22 CMDprint_val ($28:int)<-(v:bat[any,any])
    x := bbp.getNames();	# 23 CMDbbpNames (x:bat[int,str])
    io.print(x);	# 24 CMDprint_val ($30:int)<-(x:bat[int,str])
    bbp.close();	# 25 CMDbbpclose ($31:void)
end main;	# 26  
[ "Start test" ]
bbp.take not yet fully implemented
[ "FIRST ROUND" ]
#-----------------#
# h	tmp_4	  # name
# int	int	  # type
#-----------------#
[ 1,	  2	  ]
[ "SECOND ROUND" ]
#-------------------------#
# bbp	objects		  # name
# int	str		  # type
#-------------------------#
[ 4,	  "myfirstbat"	  ]
bbp.take not yet fully implemented
[ "got myfirstbat?" ]
#-----------------#
# h	tmp_4	  # name
# int	int	  # type
#-----------------#
[ 1,	  2	  ]
#---------------------------------#
# bbp	name			  # name
# int	str			  # type
#---------------------------------#
[ 1,	  "monet_environment"	  ]
[ 2,	  "monet_unicode_case"	  ]
[ 3,	  "timezones"		  ]
[ 4,	  "tmp_4"		  ]
[ 5,	  "objects"		  ]
>