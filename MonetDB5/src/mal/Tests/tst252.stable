# Monet Database Server V5.0
# Copyright (c) 1993-2003, CWI. All rights reserved.
# compiled for 32biti686-pc-linux-gnu/32bit.
# config:/ufs/mk/monet_5/src/mal/Tests/tst.conf
# dbfarm:/ufs/mk/monet_5/Linux/var/MonetDB
# dbname:demo
##Testing a loop over string bats
#
#b:= new(str,str);
#insert(b,"one","red");
#insert(b,"two","green");
#print(b);
#barrier v:= bunStream(b,h:str,t:str);
#	printf("[ %s,",h);
#	printf("%s]\n",t);
#	redo v;
#exit v;
#
#
#
function Admin.main():int; #0  (main:int)
    b := bbp.new(str,str); #1 CMDBATnew (b:bat[str,str])<-(str:str)(str:str)
    bat.insert(b,"one","red"); #2 CMDinsert_bun ($3:bat[str,str])<-(b:bat[str,str])($4:str)($5:str)
    bat.insert(b,"two","green"); #3 CMDinsert_bun ($6:bat[str,str])<-(b:bat[str,str])($7:str)($8:str)
    io.print(b); #4 CMDprint_val ($9:int)<-(b:bat[str,str])
barrier v := bbp.bunStream(b,h,t); #5 CMDbunStream (v:lng)<-(b:bat[str,str])(h:str)(t:str) jump 9
    system.printf("[ %s,",h); #6 SYSprint_formatted_str ($13:int)<-($14:str)(h:str)
    system.printf("%s]\n",t); #7 SYSprint_formatted_str ($15:int)<-($16:str)(t:str)
    redo v; #8  (v:lng) jump 5
exit v; #9  (v:lng)
end main; #10  
#-------------------------#
# BAT:	  tmp_4		  #
# (str)	  (str)		  #
#-------------------------#
[ "one",  "red"		  ]
[ "two",  "green"	  ]
[ one,red]
[ two,green]
>