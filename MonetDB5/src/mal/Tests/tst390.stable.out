# Monet Database Server V5.0
# Copyright (c) 1993-2002, CWI. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit.
# gdk_dbfarm:/ufs/mk/monet_5-0/Linux/../dbfarm
# gdk_dbname:demo
# gdk_dbdir:/ufs/mk/monet_5-0/Linux/../dbfarm/demo
# gdk_distr:/ufs/mk/monet_5-0/Linux
# monetrc:/ufs/mk/.monet.conf
#function tst(x:bat,y:bat):bat;
#	zr:= join(x,y); print(zr);
#end function;
function Admin.tst(x:bat[any,any],y:bat[any,any]):bat[any,any];	#0:(tst:bat[any,any])<-(x:bat[any,any])(y:bat[any,any])
	zr := algebra.join(x,y);	#1:(zr:bat[any,any])<-(x:bat[any,any])(y:bat[any,any])
	io.print(zr);	#2:($4:int)<-(zr:bat[any,any])
end function;	#3:
#
#b:=new(int,str);
#c:=new(str,int);
#insert(b,1,"hello");
#insert(c,"world",1);
#insert(c,"hello",1);
#
#z:= join(b,c); print(z);
#
#br:= reverse(b); print(br);
#cr:= reverse(c); print(cr);
#zr:= join(br,cr); print(zr);
#tst(br,cr);
#
function Admin.main():int;	#0:(main:int)
	b := mal.new(int,str);	#1:(b:bat[int,str])<-(int:int)(str:str)
	c := mal.new(str,int);	#2:(c:bat[str,int])<-(str:str)(int:int)
	bat.insert(b,1,"hello");	#3:($5:bat[int,str])<-(b:bat[int,str])($6:int)($7:str)
	bat.insert(c,"world",1);	#4:($8:bat[str,int])<-(c:bat[str,int])($9:str)($6:int)
	bat.insert(c,"hello",1);	#5:($10:bat[str,int])<-(c:bat[str,int])($7:str)($6:int)
	z := algebra.join(b,c);	#6:(z:bat[int,int])<-(b:bat[int,str])(c:bat[str,int])
	io.print(z);	#7:($12:int)<-(z:bat[int,int])
	br := bat.reverse(b);	#8:(br:bat[str,int])<-(b:bat[int,str])
	io.print(br);	#9:($14:int)<-(br:bat[str,int])
	cr := bat.reverse(c);	#10:(cr:bat[int,str])<-(c:bat[str,int])
	io.print(cr);	#11:($16:int)<-(cr:bat[int,str])
	zr := algebra.join(br,cr);	#12:(zr:bat[str,str])<-(br:bat[str,int])(cr:bat[int,str])
	io.print(zr);	#13:($18:int)<-(zr:bat[str,str])
	Admin.tst(br,cr);	#14:($19:bat[any,any])<-(br:bat[str,int])(cr:bat[int,str])
end function;	#15:
#-----------------#
# BAT:	  tmp_6	  #
# (int)	  (int)	  #
#-----------------#
[ 1,	  1	  ]
#-------------------------#
# BAT:		  tmp_4	  #
# (str)		  (int)	  #
#-------------------------#
[ "hello",	  1	  ]
#-------------------------#
# BAT:	  tmp_5		  #
# (int)	  (str)		  #
#-------------------------#
[ 1,	  "world"	  ]
[ 1,	  "hello"	  ]
#---------------------------------#
# BAT:		  tmp_7		  #
# (str)		  (str)		  #
#---------------------------------#
[ "hello",	  "world"	  ]
[ "hello",	  "hello"	  ]
#---------------------------------#
# BAT:		  tmp_8		  #
# (str)		  (str)		  #
#---------------------------------#
[ "hello",	  "world"	  ]
[ "hello",	  "hello"	  ]
>