# Monet Database Server V5.0
# Copyright (c) 1993-2004, CWI. All rights reserved.
# compiled for 32biti686-pc-linux-gnu/32bit.
# config:/ufs/mk/monet5/src/mal/Tests/tst.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB/dbfarm
# dbname:demo
# Visit http://monetdb.cwi.nl for further information.
## parsing operations with multi-assignments
#function swap(x:bat[:any$1,:int],y:bat[:int,:int]) 
#        a:="done"; 
#        return (a,x);
#end swap;
function Admin.swap(x:bat[:any$1,:int],y:bat[:int,:int]) (:str,b:bat[:any$1,:int]);	# 0  (:str)(b:bat[:any$1,:int])<-(x:bat[:any$1,:int])(y:bat[:int,:int])
    a := "done";	# 1  (a:str)<-($6:str)
    return (a,x);	# 2  (:str)(b:bat[:any$1,:int])<-(a:str)(x:bat[:any$1,:int])
end swap;	# 3  
#
#X:= new(:int,:int);
#insert(X,1,1);
#Y:= new(:int,:int);
#insert(Y,2,2);
#(x,y):= swap(X,Y);
#print(x);
#print(y);
#
#
function Admin.main():int;	# 0  (main:int)
    X := bbp.new(:int,:int);	# 1 CMDBATnew (X:bat[:int,:int])<-($2:int)($3:int)
    bat.insert(X,1,1);	# 2 BKCinsert_bun ($4:void)<-(X:bat[:int,:int])($5:int)($5:int)
    Y := bbp.new(:int,:int);	# 3 CMDBATnew (Y:bat[:int,:int])<-($7:int)($8:int)
    bat.insert(Y,2,2);	# 4 BKCinsert_bun ($9:void)<-(Y:bat[:int,:int])($10:int)($10:int)
    (x,y):=Admin.swap(X,Y);	# 5  (x:str)(y:bat[:int,:int])<-(X:bat[:int,:int])(Y:bat[:int,:int])
    io.print(x);	# 6 IOprint_val ($13:int)<-(x:str)
    io.print(y);	# 7 IOprint_val ($14:int)<-(y:bat[:int,:int])
end main;	# 8  
[ "done" ]
#-----------------#
# h	tmp_4	  # name
# int	int	  # type
#-----------------#
[ 1,	  1	  ]
>