# Monet Database Server V5.0
# Copyright (c) 1993-2004, CWI. All rights reserved.
# compiled for 32biti686-pc-linux-gnu/32bit.
# config:/ufs/mk/monet5/src/mal/Tests/tst.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB/dbfarm
# dbname:demo
# Visit http://monetdb.cwi.nl for further information.
## Stream functions seem to provide a better control structure
## The first stream doesn;t do much, because its state can not be inspected.
#
#stream random(seed:int):bit;
#	i:= seed;
#barrier L:= true;
#	i:= 125 *i;
#	i:= i % 32767;
#	return true;
#	redo L;
#exit L;
#	return false;
#end;
stream Admin.random(seed:int):bit;	# 0  (random:bit)<-(seed:int)
    i := seed;	# 1  (i:int)<-(seed:int)
barrier L := true;	# 2  (L:bit)<-($4:bit) jump 7
    i := calc.*(125,i);	# 3 CALCbinaryMULintint (i:int)<-($5:int)(i:int)
    i := calc.%(i,32767);	# 4 CALCbinaryMODintint (i:int)<-(i:int)($6:int)
    return true;	# 5  (random:bit)<-($4:bit)
    redo L;	# 6  (L:bit) jump 2
exit L;	# 7  (L:bit)
    return false;	# 8  (random:bit)<-($7:bit)
end random;	# 9  
#
>