# Monet Database Server V5.0
# Copyright (c) 1993-2003, CWI. All rights reserved.
# compiled for 32biti686-pc-linux-gnu/32bit.
# config:/ufs/mk/monet_5/src/mal/Tests/tst.conf
# dbfarm:/ufs/mk/monet_5/Linux/var/MonetDB
# dbname:demo
##The MAL interpreter should initiate garbage collection correctly
## early version was too early
#z:= "hello world"; print(z);
#z:=z; print(z);
#print("done");
#
#b:=new(int,int);
#i:= getBATrefcnt(b); print(i);
#b:=b;
#i:= getBATrefcnt(b); print(i);
#b:=b;
#i:= getBATrefcnt(b); print(i);
#
function Admin.main():int; #0  (main:int)
    z := "hello world"; #1  (z:str)<-($2:str)
    io.print(z); #2 CMDprint_val ($3:int)<-(z:str)
    z := z; #3  (z:str)<-(z:str)
    io.print(z); #4 CMDprint_val ($4:int)<-(z:str)
    io.print("done"); #5 CMDprint_val ($5:int)<-($6:str)
    b := mal.new(int,int); #6 CMDBATnew (b:bat[int,int])<-(int:int)(int:int)
    i := bat.getBATrefcnt(b); #7 getBATrefcnt (i:int)<-(b:bat[int,int])
    io.print(i); #8 CMDprint_val ($10:int)<-(i:int)
    b := b; #9  (b:bat[int,int])<-(b:bat[int,int])
    i := bat.getBATrefcnt(b); #10 getBATrefcnt (i:int)<-(b:bat[int,int])
    io.print(i); #11 CMDprint_val ($11:int)<-(i:int)
    b := b; #12  (b:bat[int,int])<-(b:bat[int,int])
    i := bat.getBATrefcnt(b); #13 getBATrefcnt (i:int)<-(b:bat[int,int])
    io.print(i); #14 CMDprint_val ($12:int)<-(i:int)
end main; #15  
[ "hello world" ]
[ "hello world" ]
[ "done" ]
[ 1 ]
[ 1 ]
[ 1 ]
>