# Monet Database Server V5.0
# Copyright (c) 1993-2004, CWI. All rights reserved.
# compiled for 32biti686-pc-linux-gnu/32bit.
# config:/ufs/mk/monet5/src/mal/Tests/tst.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB/dbfarm
# dbname:demo
# Visit http://monetdb.cwi.nl for further information.
##The MAL interpreter should initiate garbage collection correctly
## early version was too early
#z:= "hello world"; print(z);
#z:=z; print(z);
#print("done");
#
#b:=new(:int,:int);
#i:= getRefCount(b); print(i);
#b:=b;
#i:= getRefCount(b); print(i);
#b:=b;
#i:= getRefCount(b); print(i);
#
function Admin.main():int;	# 0  (main:int)
    z := "hello world";	# 1  (z:str)<-($2:str)
    io.print(z);	# 2 IOprint_val ($3:int)<-(z:str)
    z := z;	# 3  (z:str)<-(z:str)
    io.print(z);	# 4 IOprint_val ($4:int)<-(z:str)
    io.print("done");	# 5 IOprint_val ($5:int)<-($6:str)
    b := bbp.new(:int,:int);	# 6 CMDBATnew (b:bat[:int,:int])<-($8:int)($9:int)
    i := bbp.getRefCount(b);	# 7 CMDgetBATrefcnt (i:int)<-(b:bat[:int,:int])
    io.print(i);	# 8 IOprint_val ($11:int)<-(i:int)
    b := b;	# 9  (b:bat[:int,:int])<-(b:bat[:int,:int])
    i := bbp.getRefCount(b);	# 10 CMDgetBATrefcnt (i:int)<-(b:bat[:int,:int])
    io.print(i);	# 11 IOprint_val ($12:int)<-(i:int)
    b := b;	# 12  (b:bat[:int,:int])<-(b:bat[:int,:int])
    i := bbp.getRefCount(b);	# 13 CMDgetBATrefcnt (i:int)<-(b:bat[:int,:int])
    io.print(i);	# 14 IOprint_val ($13:int)<-(i:int)
end main;	# 15  
[ "hello world" ]
[ "hello world" ]
[ "done" ]
[ 1 ]
[ 1 ]
[ 1 ]
>