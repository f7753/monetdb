# Monet Database Server V5.0
# Copyright (c) 1993-2002, CWI. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit.
# gdk_dbfarm:/ufs/mk/monet_5-0/Linux/../dbfarm
# gdk_dbname:demo
# gdk_dbdir:/ufs/mk/monet_5-0/Linux/../dbfarm/demo
# gdk_distr:/ufs/mk/monet_5-0/Linux
# monetrc:/ufs/mk/.monet.conf
## Testing global consts defined for all users
## It should travers the nested spaces looking for the correct variable
## take a local copy
#	v:str := const.take("version");
#	u:str := const.take("user");
#	db:str:= const.take("database");
#	df:str:= const.take("dbfarm");
#	dd:str:= const.take("distribution");
##	bb:bat[void,str] := const.take("environment");
#
## how to obtain a copy of all objects in a space?
##barrier (b,nme):= const.iterator();
#barrier b:= const.iterator(nme:str);
#	printf("%s=",nme);
#	val:str := const.toString(nme);
#	printf("%s\n",val);
#	redo b;
#exit b;
#
function Admin.main():int; #0:(main:int)
    v := const.take("version"); #1:(v:str)<-($2:str)
    u := const.take("user"); #2:(u:str)<-($4:str)
    db := const.take("database"); #3:(db:str)<-($6:str)
    df := const.take("dbfarm"); #4:(df:str)<-($8:str)
    dd := const.take("distribution"); #5:(dd:str)<-($10:str)
barrier b := const.iterator(nme); #6:(b:lng)<-(nme:str) jump 12
    system.printf("%s=",nme); #7:($13:int)<-($14:str)(nme:str)
    val := const.toString(nme); #8:(val:str)<-(nme:str)
    system.printf("%s\n",val); #9:($16:int)<-($17:str)(val:str)
    redo b ; #10:(b:lng) jump 6
exit b; #11:(b:lng)
end main; #12:
user=Admin
database=demo
dbfarm=/ufs/mk/monet_5-0/Linux/../dbfarm/demo
distribution=/ufs/mk/monet_5-0/Linux
monetrc=/ufs/mk/.monet.conf
architecture=i686-pc-linux-gnu
version=5.0
environment=unknown yet
STORE_MEM=0
STORE_MMAP=1
STORE_COMPR=2
BUF_NORMAL=0
BUF_RANDOM=1
BUF_SEQUENTIAL=2
BUF_WILLNEED=3
BUF_DONTNEED=4
EBUSY=16
M_E=2.7182818284590452354LL
M_LOG2E=1.4426950408889634074LL
M_LOG10E=0.43429448190325182765LL
M_LN2=0.69314718055994530942LL
M_LN10=2.30258509299404568402LL
M_PI=3.14159265358979323846LL
M_PI_2=1.57079632679489661923LL
M_PI_4=0.78539816339744830962LL
M_1_PI=0.31830988618379067154LL
M_2_PI=0.63661977236758134308LL
M_2_SQRTPI=1.12837916709551257390LL
M_SQRT2=1.41421356237309504880LL
M_SQRT1_2=0.70710678118654752440LL
pi=3.147
>