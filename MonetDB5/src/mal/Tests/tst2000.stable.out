stdout of test 'tst2000` in directory 'src/mal` itself:
# Monet Database Server V5.0
# Copyright (c) 1993-2004, CWI. All rights reserved.
# compiled for 32biti686-pc-linux-gnu/32bit.
# config:/ufs/mk/monet5/src/mal/Tests/tst.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB/dbfarm
# dbname:demo
# Visit http://monetdb.cwi.nl for further information.
##The 2000 serie  is focussed on parallelism
##we start with a non-parallel version
#
#function clkticks(n:int):void;
#barrier	b:= n>0;
#	printf("clock tick\n");
#	alarm.sleep(2);
#	n:= n-1;
#redo	b:= n>0;
#exit	b;
#end clkticks;
function Admin.clkticks(n:int):void;	# 0  (clkticks:void)<-(n:int)
barrier b := calc.>(n,0);	# 1 CALCcompGTintint (b:bit)<-(n:int)($3:int) jump 6
    io.printf("clock tick\n");	# 2 IOprint_str ($4:int)<-($5:str)
    alarm.sleep(2);	# 3 ALARMsleep ($6:void)<-($7:int)
    n := calc.-(n,1);	# 4 CALCbinarySUBintint (n:int)<-(n:int)($8:int)
    redo b := calc.>(n,0);	# 5 CALCcompGTintint (b:bit)<-(n:int)($3:int) jump 2
exit b;	# 6  (b:bit)
end clkticks;	# 7  
#
#mdb('T');
#clkticks(2);
#
function Admin.main():int;	# 0  (main:int)
    inspect.mdb('T');	# 1 mdbSetCmd ($1:void)<-($2:chr)
    Admin.clkticks(2);	# 2  ($3:void)<-($4:int)
end main;	# 3  
#Monet Debugger on
#mdb     Admin.clkticks(2)
#mdb barrier b := calc.>(2,0)
#mdb     io.printf("clock tick\\n")
clock tick
#mdb     alarm.sleep(2)
#mdb     n := calc.-(2,1)
#mdb     redo b := calc.>(1,0)
#mdb     io.printf("clock tick\\n")
clock tick
#mdb     alarm.sleep(2)
#mdb     n := calc.-(1,1)
#mdb     redo b := calc.>(0,0)
#mdb exit b;
#mdb end clkticks;
#mdb end main;
>