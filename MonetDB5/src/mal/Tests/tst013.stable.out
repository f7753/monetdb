# Monet Database Server V5.0
# Copyright (c) 1993-2004, CWI. All rights reserved.
# compiled for 32biti686-pc-linux-gnu/32bit.
# config:/ufs/mk/monet5/src/mal/Tests/tst.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB/dbfarm
# dbname:demo
# Visit http://monetdb.cwi.nl for further information.
## incomplete barrier blocks. Resolve them when unambigous
#
#barrier z:= true;
#	leave;
#exit;
#
#barrier i:= 1;
#	i:= i+1;
#	print(i);
#	barrier >(i,3);	# new envelop
#		print("leave loop");
#		leave i; # leave outer envelop
#	exit;
#	redo;
#exit;
#
function Admin.main():int;	# 0  (main:int)
barrier z := true;	# 1  (z:bit)<-($2:bit) jump 3
    leave z;	# 2  (z:bit) jump 3
exit z;	# 3  (z:bit)
barrier i := 1;	# 4  (i:int)<-($6:int) jump 12
    i := calc.+(i,1);	# 5 CALCbinaryADDintint (i:int)<-(i:int)($6:int)
    io.print(i);	# 6 IOprint_val ($7:int)<-(i:int)
barrier calc.>(i,3);	# 7 CALCcompGTintint ($9:bit)<-(i:int)($8:int) jump 10
    io.print("leave loop");	# 8 IOprint_val ($10:int)<-($11:str)
    leave i;	# 9  (i:int) jump 12
exit $9;	# 10  ($9:bit)
    redo i;	# 11  (i:int) jump 5
exit i;	# 12  (i:int)
end main;	# 13  
[ 2 ]
[ 3 ]
[ 4 ]
[ "leave loop" ]
>