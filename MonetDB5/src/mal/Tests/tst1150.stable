# Monet Database Server V5.0
# Copyright (c) 1993-2002, CWI. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit.
# gdk_dbfarm:/ufs/mk/monet_5-0/Linux/../dbfarm
# gdk_dbname:demo
# gdk_dbdir:/ufs/mk/monet_5-0/Linux/../dbfarm/demo
# gdk_distr:/ufs/mk/monet_5-0/Linux
# monetrc:/ufs/mk/.monet.conf
## Mil compiler Version 1.0)
## Copyright (c) 1993-2001, CWI. All rights reserved.
#
## Predefined code segment
##
###line 127 "/ufs/mk/monet_5-0/src/modules/kernel/io.mx"
#	EOF := -1;
##        const EOF      := -1;
#	SEEK_SET := 0;
##        const SEEK_SET := 0;
#	SEEK_CUR := 1;
##        const SEEK_CUR := 1;
#	SEEK_END := 2;
##        const SEEK_END := 2;
#	aa_a := oid(20000000);
#	ba_a := setoid(aa_a);
##setoid(oid(20000000));
##
#	fp := fopen("/tmp/test","w+");
##fp := fopen ( "/tmp/test", "w+" );
#	ca_a := fwrite(fp,"Dit is een test\n",17);
##fwrite( fp, "Dit is een test\n", 17 );
#	fp := freopen("/tmp/test","r+",fp);
##fp := freopen ( "/tmp/test", "r+", fp );
#	da_a := fread(fp,17);
#	ea_a := tostring(da_a);
#	fa_a := print(ea_a);
##fread( fp, 17 ).tostr.print;
##
#	ga_a := fseek(fp,0,0);
##fseek( fp, 0, 0);
#	fprintf(fp,"%s","test");
#	fprintf(fp," %d",10);
#	fprintf(fp," %c",'c');
#	fprintf(fp," %d",10);
#	fprintf(fp," %f\n",7.0);
##fprintf( fp, "%s %d %c %d %f\n", "test", 10, 'c', 10, 7.0 );
##
#	s := "testing again and again\n";
##s := "testing again and again\n";
##
#	ia_a := fseek(fp,0,0);
##fseek( fp, 0, 0);
#	ja_a := fputs(s,fp);
##fputs( s, fp );
#	ka_a := fseek(fp,0,0);
##fseek( fp, 0, 0);
#	s := fgets(fp);
##s := fgets( fp );
##
#	la_a := fflush(fp);
##fflush( fp );
#	ma_a := fclose(fp);
##fclose( fp );
#	fprintf(fp,"%s","test");
#	fprintf(fp," %d",10);
#	fprintf(fp," %c",'c');
#	fprintf(fp," %d",10);
#	fprintf(fp," %f\n",7.0);
##	na_a := printf("%s %d %c %d %f\n","test",10,'c',10,7.0);
##printf( "%s %d %c %d %f\n", "test", 10, 'c', 10, 7.0 );
#	oa_a := printf("%s\n",s);
##printf( "%s\n", s );
##
#	quit:= bbp.bind("quit");
##quit;
##
##
###line 156 "/ufs/mk/monet_5-0/src/modules/kernel/io.mx"
##
#
!WARNING: newConstant:int coerced to lng
function Admin.main():int; #0:(main:int)
    EOF := -1; #1:(EOF:int)<-($2:int)
    SEEK_SET := 0; #2:(SEEK_SET:int)<-($4:int)
    SEEK_CUR := 1; #3:(SEEK_CUR:int)<-($6:int)
    SEEK_END := 2; #4:(SEEK_END:int)<-($8:int)
    aa_a := calc.oid(20000000); #5:(aa_a:oid)<-($10:int)
    ba_a := calc.setoid(aa_a); #6:(ba_a:oid)<-(aa_a:oid)
    fp := io.fopen("/tmp/test","w+"); #7:(fp:fstream)<-($13:str)($14:str)
    ca_a := io.fwrite(fp,"Dit is een test\n",17); #8:(ca_a:void)<-(fp:fstream)($16:str)($17:int)
    fp := io.freopen("/tmp/test","r+",fp); #9:(fp:fstream)<-($13:str)($18:str)(fp:fstream)
    da_a := io.fread(fp,17); #10:(da_a:blob)<-(fp:fstream)($17:int)
    ea_a := blob.tostring(da_a); #11:(ea_a:str)<-(da_a:blob)
    fa_a := io.print(ea_a); #12:(fa_a:int)<-(ea_a:str)
    ga_a := io.fseek(fp,0,0); #13:(ga_a:int)<-(fp:fstream)($4:int)($4:int)
    io.fprintf(fp,"%s","test"); #14:($23:void)<-(fp:fstream)($24:str)($25:str)
    io.fprintf(fp," %d",10); #15:($26:void)<-(fp:fstream)($27:str)($28:int)
    io.fprintf(fp," %c",'c'); #16:($29:void)<-(fp:fstream)($30:str)($31:chr)
    io.fprintf(fp," %d",10); #17:($32:void)<-(fp:fstream)($27:str)($28:int)
    io.fprintf(fp," %f\n",7.0); #18:($33:void)<-(fp:fstream)($34:str)($35:flt)
    s := "testing again and again\n"; #19:(s:str)<-($37:str)
    ia_a := io.fseek(fp,0,0); #20:(ia_a:int)<-(fp:fstream)($39:int)($39:int)
    ja_a := io.fputs(s,fp); #21:(ja_a:void)<-(s:str)(fp:fstream)
    ka_a := io.fseek(fp,0,0); #22:(ka_a:int)<-(fp:fstream)($39:int)($39:int)
    s := io.fgets(fp); #23:(s:str)<-(fp:fstream)
    la_a := io.fflush(fp); #24:(la_a:void)<-(fp:fstream)
    ma_a := io.fclose(fp); #25:(ma_a:void)<-(fp:fstream)
    io.fprintf(fp,"%s","test"); #26:($44:void)<-(fp:fstream)($24:str)($25:str)
    io.fprintf(fp," %d",10); #27:($45:void)<-(fp:fstream)($27:str)($28:int)
    io.fprintf(fp," %c",'c'); #28:($46:void)<-(fp:fstream)($30:str)($31:chr)
    io.fprintf(fp," %d",10); #29:($47:void)<-(fp:fstream)($27:str)($28:int)
    io.fprintf(fp," %f\n",7.0); #30:($48:void)<-(fp:fstream)($34:str)($35:flt)
    oa_a := system.printf("%s\n",s); #31:(oa_a:int)<-($50:str)(s:str)
    quit := bbp.bind("quit"); #32:(quit:bat[any,any])<-($52:str)
end main; #33:
[ "Dit is een test\\n" ]
!ERROR: MALexception:io.fprintf: not yet defined in version-5
>