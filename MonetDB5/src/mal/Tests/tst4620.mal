#some join operations
function algebra.joinPath( a:bat[:any$1,:any$2],
                b:bat[:any$2,:any$3],
                c:bat[:any$3,:any$4]):bat[:any$1,:any$4];
    z:= join(a,b);
    zz:= join(z,c);
    return zz;
end joinPath;

b:= new(:int,:int);
barrier (k,v):= newRange(0:int);
        insert(b,v,v);
        redo (k,v):= nextElement(1:int,100:int);
exit (k,v);

i:= count(b);
print(i);

c:= select(b,0:int,9:int);
i:= count(c);
print(i);
d:= select(b,0:int,49:int);
i:= count(d);
print(i);

optimizer.macroContraction("algebra","joinPath");
#to be detected by join inversion
z:= join(b,c);
zz:= join(z,d);
i:= count(zz);
print(i);
showFunction();

