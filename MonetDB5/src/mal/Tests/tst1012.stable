# Monet Database Server V5.0
# Copyright (c) 1993-2002, CWI. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit.
# gdk_dbfarm:/ufs/mk/monet_5-0/Linux/../dbfarm
# gdk_dbname:demo
# gdk_dbdir:/ufs/mk/monet_5-0/Linux/../dbfarm/demo
# gdk_distr:/ufs/mk/monet_5-0/Linux
# monetrc:/ufs/mk/.monet.conf
## the first of a series of BBP test cases
#
#bbp.open();
#b:= new(int,int);
#insert(b,1,2);
#bbp.deposit("mysecondbat",b);
#c:= bbp.take("mysecondbat");
#print(c);
#bbp.setPersistent(b);
#x:= bbp.isPersistent(b);
#print(x);
#bbp.close();
## at the end of the session, the BBP should have discarded
## the temporary bats of the user
#bbp.open();
#v:= bbp.take("mysecondbat");
#print(v);
#bbp.close();
#
function Admin.main():int; #0:(main:int)
    bbp.open(); #1:($1:void)
    b := mal.new(int,int); #2:(b:bat[int,int])<-(int:int)(int:int)
    bat.insert(b,1,2); #3:($4:bat[int,int])<-(b:bat[int,int])($5:int)($6:int)
    bbp.deposit("mysecondbat",b); #4:($7:void)<-($8:str)(b:bat[int,int])
    c := bbp.take("mysecondbat"); #5:(c:bat[any,any])<-($8:str)
    io.print(c); #6:($10:int)<-(c:bat[any,any])
    bbp.setPersistent(b); #7:($11:bit)<-(b:bat[int,int])
    x := bbp.isPersistent(b); #8:(x:bit)<-(b:bat[int,int])
    io.print(x); #9:($13:int)<-(x:bit)
    bbp.close(); #10:($14:void)
    bbp.open(); #11:($15:void)
    v := bbp.take("mysecondbat"); #12:(v:bat[any,any])<-($8:str)
    io.print(v); #13:($17:int)<-(v:bat[any,any])
    bbp.close(); #14:($18:void)
end main; #15:
#-----------------#
# BAT:	  tmp_3	  #
# (int)	  (int)	  #
#-----------------#
[ 1,	  2	  ]
[ false ]
#-----------------#
# BAT:	  tmp_3	  #
# (int)	  (int)	  #
#-----------------#
[ 1,	  2	  ]
>