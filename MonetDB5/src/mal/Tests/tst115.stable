# Monet Database Server V5.0
# Copyright (c) 1993-2002, CWI. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit.
# gdk_dbfarm:/ufs/mk/monet_5-0/Linux/../dbfarm
# gdk_dbname:demo
# gdk_dbdir:/ufs/mk/monet_5-0/Linux/../dbfarm/demo
# gdk_distr:/ufs/mk/monet_5-0/Linux
# monetrc:/ufs/mk/.monet.conf
## the next step is to trace the call of a mal function call
#
#command + (L:any::1,R:any::1):any::1 = addIntInt; 
!ERROR: address of 'addIntInt' not found
command Admin.+(L:any::1,R:any::1):any::1 = addIntInt; #0 polymorphic:(+:any::1)<-(L:any::1)(R:any::1)
#
#function doitOnce():int;
#	z:= 12;
#	return z;
#end doitOnce;
function Admin.doitOnce():int; #0:(doitOnce:int)
    z := 12; #1:(z:int)<-($2:int)
    return z; #2:(z:int)
end doitOnce; #3:
#
#function doitTwice(i:int):int;
#	j:= 2;
#	k:= 11111;
#	i:= j+k;
#	return i;
#end doitTwice;
function Admin.doitTwice(i:int):int; #0:(doitTwice:int)<-(i:int)
    j := 2; #1:(j:int)<-($3:int)
    k := 11111; #2:(k:int)<-($5:int)
    i := Admin.+(j,k); #3:(i:int)<-(j:int)(k:int)
    return i; #4:(i:int)
end doitTwice; #5:
#
#
#a:=1;
#b:= doitOnce();
#c:= 2;
#d:= doitTwice(3);
#c:= 3;
#d:= doitTwice("wrong");
#
!ERROR: 'doitTwice' undefined in Admin.main[6]
function Admin.main():int; #0:(main:int)
    a := 1; #1:(a:int)<-($2:int)
    b := Admin.doitOnce(); #2:(b:int)
    c := 2; #3:(c:int)<-($5:int)
    d := Admin.doitTwice(3); #4:(d:int)<-($7:int)
    c := 3; #5:(c:int)<-($7:int)
    d := doitTwice("wrong"); #6 unknown:(d:int)<-($8:str)
end main; #7:
!ERROR: SyntaxError:Admin.main[0]:'Admin.main' contains errors
>