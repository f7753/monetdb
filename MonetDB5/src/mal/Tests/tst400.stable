# Monet Database Server V5.0
# Copyright (c) 1993-2004, CWI. All rights reserved.
# compiled for 32biti686-pc-linux-gnu/32bit.
# config:/ufs/mk/monet5/src/mal/Tests/tst.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB/dbfarm
# dbname:demo
# Visit http://monetdb.cwi.nl for further information.
#	i:= -1;
#barrier v1:= nextElement(i,0,2);
#	print("do something");
#	redo v1;
#exit	v1;
#	printf("left first loop with %s\n",v1);
#	print("next iteration");
#	i:= -1;
#barrier v2:= nextElement(i,0,5,2);
#	print("do something else");
#	redo v2;
#exit	v2;
#
function Admin.main():int;	# 0  (main:int)
    i := -1;	# 1  (i:int)<-($2:int)
barrier v1 := mal.nextElement(i,0,2);	# 2 intForloop (v1:bit)<-(i:int)($4:int)($5:int) jump 5
    io.print("do something");	# 3 IOprint_val ($6:int)<-($7:str)
    redo v1;	# 4  (v1:bit) jump 2
exit v1;	# 5  (v1:bit)
    io.printf("left first loop with %s\n",v1);	# 6 IOprint_formatted_bit ($8:int)<-($9:str)(v1:bit)
    io.print("next iteration");	# 7 IOprint_val ($10:int)<-($11:str)
    i := -1;	# 8  (i:int)<-($2:int)
barrier v2 := mal.nextElement(i,0,5,2);	# 9 intForloopStep (v2:bit)<-(i:int)($4:int)($13:int)($5:int) jump 12
    io.print("do something else");	# 10 IOprint_val ($14:int)<-($15:str)
    redo v2;	# 11  (v2:bit) jump 9
exit v2;	# 12  (v2:bit)
end main;	# 13  
[ "do something" ]
[ "do something" ]
left first loop with false
[ "next iteration" ]
[ "do something else" ]
[ "do something else" ]
[ "do something else" ]
>