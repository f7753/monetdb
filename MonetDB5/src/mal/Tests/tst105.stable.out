stdout of test 'tst105` in directory 'src/mal` itself:


# 07:58:56 >  
# 07:58:56 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst105.mal </dev/null
# 07:58:56 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## check propagation of type variables over bats
## can be checked after bat module has been added
#
#module bat2;
#command new(h:any$1,t:any$2) :bat[:any$1, :any$2] 
!ERROR: address of 'GDKbatnew' not found
command bat2.new(h:any$1,t:any$2):bat[:any$1,:any$2] address GDKbatnew;	# 0  dynamic (new:bat[:any$1,:any$2])<-(h:any$1)(t:any$2)
#
#a:= bat2.new(:str,:int);
#b:= bat2.new(:str,:int);
#c:= new(:str,:int);
#
!ERROR: 'bat2.new' undefined in bat2.main[1]
!ERROR: 'bat2.new' undefined in bat2.main[2]
!ERROR: 'bat2.new' undefined in bat2.main[3]
function Admin.main():int;	# 0  (main:int)
    a := bat2.new(:str,:int);	# 1  unknown (a:bat[:str,:int])<-($2:str)($3:int)
    b := bat2.new(:str,:int);	# 2  unknown (b:bat[:str,:int])<-($5:str)($6:int)
    c := bat2.new(:str,:int);	# 3  unknown (c:bat[:str,:int])<-($8:str)($9:int)
end main;	# 4  

# 07:58:56 >  
# 07:58:56 >  Done.
# 07:58:56 >  

