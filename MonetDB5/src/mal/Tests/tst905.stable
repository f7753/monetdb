# Monet Database Server V5.0
# Copyright (c) 1993-2004, CWI. All rights reserved.
# compiled for 32biti686-pc-linux-gnu/32bit.
# config:/ufs/mk/monet5/src/mal/Tests/tst.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB/dbfarm
# dbname:demo
# Visit http://monetdb.cwi.nl for further information.
## the multiplex code blocks.
#
#b:= new(:lng,:lng);
#i:= -1:lng;
#barrier v:= nextElement(i,0:lng,10:lng,1:lng);
#	insert(b,i,i);
#	redo v:= nextElement(i,0:lng,10:lng,1:lng);
#exit v;
#c:= copy(b);
#x:= multiplex.script("+",b,c);
#print(x);
#
function Admin.main():int;	# 0  (main:int)
    b := bbp.new(:lng,:lng);	# 1 CMDBATnew (b:bat[:lng,:lng])<-($2:lng)($3:lng)
    i := -1;	# 2  (i:lng)<-($5:lng)
barrier v := mal.nextElement(i,0,10,1);	# 3 lngForloopStep (v:bit)<-(i:lng)($7:lng)($8:lng)($9:lng) jump 6
    bat.insert(b,i,i);	# 4 BKCinsert_bun ($10:void)<-(b:bat[:lng,:lng])(i:lng)(i:lng)
    redo v := mal.nextElement(i,0,10,1);	# 5 lngForloopStep (v:bit)<-(i:lng)($7:lng)($8:lng)($9:lng) jump 4
exit v;	# 6  (v:bit)
    c := algebra.copy(b);	# 7 ALGcopy (c:bat[:lng,:lng])<-(b:bat[:lng,:lng])
    x := multiplex.script("+",b,c);	# 8  (x:bat[:lng,:lng])<-($13:str)(b:bat[:lng,:lng])(c:bat[:lng,:lng])
    io.print(x);	# 9 IOprint_val ($14:int)<-(x:bat[:lng,:lng])
end main;	# 10  
#-----------------#
# h	tmp_5	  # name
# lng	lng	  # type
#-----------------#
[ 0,	  0	  ]
[ 1,	  2	  ]
[ 2,	  4	  ]
[ 3,	  6	  ]
[ 4,	  8	  ]
[ 5,	  10	  ]
[ 6,	  12	  ]
[ 7,	  14	  ]
[ 8,	  16	  ]
[ 9,	  18	  ]
>