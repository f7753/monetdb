# Monet Database Server V5.0
# Copyright (c) 1993-2002, CWI. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit.
# gdk_dbfarm:/ufs/mk/monet_5-0/Linux/../dbfarm
# gdk_dbname:demo
# gdk_dbdir:/ufs/mk/monet_5-0/Linux/../dbfarm/demo
# gdk_distr:/ufs/mk/monet_5-0/Linux
# monetrc:/ufs/mk/.monet.conf
## The series tst2?? is a patched version of suite_00
## The first and foremost BAT operations
#
#b:= new(int,int);
#err := insert(b,1,15);
#err := insert(b,2,4);
#n0  := int(nil);
#err := insert(b,3,n0);
#err := insert(b,4,16);
#err := insert(b,5,25);
#err := insert(b,6,36);
#err := insert(b,7,49);
#err := insert(b,8,64);
#err := insert(b,9,n0);
#err := insert(b,n0,n0);
#err := insert(b,n0,81);
#print(b);
#barrier v:= bunStream(b,h:int,t:int);
#	printf("%d,",h);
#	printf("%d\n",t);
#redo v;
#exit v;
#
function Admin.main():int; #0:(main:int)
    b := mal.new(int,int); #1:(b:bat[int,int])<-(int:int)(int:int)
    err := bat.insert(b,1,15); #2:(err:bat[int,int])<-(b:bat[int,int])($4:int)($5:int)
    err := bat.insert(b,2,4); #3:(err:bat[int,int])<-(b:bat[int,int])($6:int)($7:int)
    n0 := calc.int(nil); #4:(n0:int)<-($9:void)
    err := bat.insert(b,3,n0); #5:(err:bat[int,int])<-(b:bat[int,int])($10:int)(n0:int)
    err := bat.insert(b,4,16); #6:(err:bat[int,int])<-(b:bat[int,int])($7:int)($11:int)
    err := bat.insert(b,5,25); #7:(err:bat[int,int])<-(b:bat[int,int])($12:int)($13:int)
    err := bat.insert(b,6,36); #8:(err:bat[int,int])<-(b:bat[int,int])($14:int)($15:int)
    err := bat.insert(b,7,49); #9:(err:bat[int,int])<-(b:bat[int,int])($16:int)($17:int)
    err := bat.insert(b,8,64); #10:(err:bat[int,int])<-(b:bat[int,int])($18:int)($19:int)
    err := bat.insert(b,9,n0); #11:(err:bat[int,int])<-(b:bat[int,int])($20:int)(n0:int)
    err := bat.insert(b,n0,n0); #12:(err:bat[int,int])<-(b:bat[int,int])(n0:int)(n0:int)
    err := bat.insert(b,n0,81); #13:(err:bat[int,int])<-(b:bat[int,int])(n0:int)($21:int)
    io.print(b); #14:($22:int)<-(b:bat[int,int])
barrier v := mal.bunStream(b,h,t); #15:(v:lng)<-(b:bat[int,int])(h:int)(t:int) jump 20
    system.printf("%d,",h); #16:($26:int)<-($27:str)(h:int)
    system.printf("%d\n",t); #17:($28:int)<-($29:str)(t:int)
    redo v ; #18:(v:lng) jump 15
exit v; #19:(v:lng)
end main; #20:
#-----------------#
# BAT:	  tmp_4	  #
# (int)	  (int)	  #
#-----------------#
[ 1,	  15	  ]
[ 2,	  4	  ]
[ 3,	  nil	  ]
[ 4,	  16	  ]
[ 5,	  25	  ]
[ 6,	  36	  ]
[ 7,	  49	  ]
[ 8,	  64	  ]
[ 9,	  nil	  ]
[ nil,	  nil	  ]
[ nil,	  81	  ]
1,15
2,4
3,nil
4,16
5,25
6,36
7,49
8,64
9,nil
nil,nil
nil,81
>