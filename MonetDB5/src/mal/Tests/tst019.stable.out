stdout of test 'tst019` in directory 'src/mal` itself:


# 10:58:00 >  
# 10:58:00 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=40090 --set sql_port=55826 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst019.mal </dev/null
# 10:58:00 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl for further information.
#function welcome(lim:int):void;
#    i:= 2;
#    w:="hello";
#    return w;   # should produce a type error
#end welcome;
function Admin.welcome(lim:int):void;	# 0  (welcome:void)<-(lim:int)
    i := 2;	# 1  (i:int)<-($3:int)
    w := "hello";	# 2  (w:str)<-($5:str)
    return w;	# 3  (w:str)
end welcome;	# 4  
!ERROR: RETURN type mismatch at type 11
#
#function welcome0(lim:int):str;
#    i:= 2;
#    w:="hello";
#    return (w,i);   # should produce a type error
#   # should produce a type error
#end welcome0;
function Admin.welcome0(lim:int):str;	# 0  (welcome0:str)<-(lim:int)
    i := 2;	# 1  (i:int)<-($3:int)
    w := "hello";	# 2  (w:str)<-($5:str)
    return (w,i);	# 3  (w:str)(i:int)
end welcome0;	# 4  
!ERROR: invalid return target
!
#
#function welcome1(lim:int):str;
#    i:= 2;
#    return w:="hello"; 
#end welcome1;
function Admin.welcome1(lim:int):str;	# 0  (welcome1:str)<-(lim:int)
    i := 2;	# 1  (i:int)<-($3:int)
    return w := "hello";	# 2  (w:str)<-($5:str)
end welcome1;	# 3  
#
#function welcome2(lim:int):str;
#    i:= 2;
#    w:="hello"; 
#    return w;
#end welcome2;
function Admin.welcome2(lim:int):str;	# 0  (welcome2:str)<-(lim:int)
    i := 2;	# 1  (i:int)<-($3:int)
    w := "hello";	# 2  (w:str)<-($5:str)
    return w;	# 3  (w:str)
end welcome2;	# 4  
#
#function welcome3(lim:int)(w:str,i:int);
#    i:= 2;
#    return w:="hello"; #illegal return statement
#end welcome3;
function Admin.welcome3(lim:int) (w:str,i:int);	# 0  (w:str)(i:int)<-(lim:int)
    i := 2;	# 1  (i:int)<-($4:int)
    return w := "hello";	# 2  (w:str)<-($5:str)
end welcome3;	# 3  
!ERROR: invalid return target
!
#
#function welcome4(lim:int)(w:str,i:int);
#    i:= 2;
#    return (w,i):="hello"; #illegal return statement
#end welcome4;
function Admin.welcome4(lim:int) (w:str,i:int);	# 0  (w:str)(i:int)<-(lim:int)
    i := 2;	# 1  (i:int)<-($4:int)
    return (w,i):= "hello";	# 2  (w:str)(i:int)<-($5:str)
end welcome4;	# 3  
!ERROR: Multiple assignment mismatch
!WARNING: garbage collection not guaranteed
#
#function welcome5(lim:int)(:str,:int);
#    i:= 2;
#    return (w,i):=("hello",2); 
#end welcome5;
function Admin.welcome5(lim:int) ($2:str,$3:int);	# 0  ($2:str)($3:int)<-(lim:int)
    i := 2;	# 1  (i:int)<-($5:int)
    return (w,i):= ("hello",2);	# 2  (w:str)(i:int)<-($7:str)($5:int)
end welcome5;	# 3  
!WARNING: garbage collection not guaranteed
#
#y:=welcome1(1);
#print(y);
#y:=welcome2(1);
#print(y);
#
#(x,y):=welcome2(1);
#
!ERROR: 'welcome2' undefined in Admin.main[5]
function Admin.main():int;	# 0  (main:int)
    y := Admin.welcome1(1);	# 1  (y:str)<-($2:int)
    io.print(y);	# 2 IOprint_val ($3:int)<-(y:str)
    y := Admin.welcome2(1);	# 3  (y:str)<-($2:int)
    io.print(y);	# 4 IOprint_val ($4:int)<-(y:str)
    (x,y):= welcome2(1);	# 5  unknown (x:any)(y:str)<-($2:int)
end main;	# 6  

# 22:43:47 >  
# 22:43:47 >  Done.
# 22:43:47 >  

