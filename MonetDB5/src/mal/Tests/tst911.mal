# analyse the overhead of chopping a table
# the multiplex code blocks.

function choptest(b:bat[:void,:lng], size:lng, base:lng);
    t0:= alarm.usec();
    barrier (chk,c):= newChunkIterator(b,size);
        t:= select(c, 256000:lng,266000:lng);
        redo (chk,c):= hasMoreChunks(b,size);
    exit (chk,c);
    t1:= alarm.usec();
    d0:= t1-t0;
    printf("#chopped at %d",size);
    printf(" %d",d0);
    d0:= d0-base;
    printf(" %d ",d0);
    i:= 1000000:lng/size;
    if:= flt(i);
    df:= flt(d0);
    f:= df/if;
    printf(" at %f usec\n",f);
end choptest;

b:= new(:void,:lng);
barrier (go,i):= newRange(0:lng);
	k:= rand();
	l:= lng(k);
	insert(b,nil,l);
	redo (go,i):= nextElement(1:lng,1000000:lng);
exit (go,i);
t0:= alarm.usec();
barrier doit:= true;
    t:= select(b, 256000:lng,266000:lng);
exit doit;
t1:= alarm.usec();
base:= t1-t0;
printf("#select direct %d usec\n",base);

choptest(b,100000:lng,base);
choptest(b,10000:lng,base);
choptest(b,1000:lng,base);
choptest(b,100:lng,base);
