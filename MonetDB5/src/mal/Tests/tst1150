# Mil compiler Version 1.0)
# Copyright (c) 1993-2001, CWI. All rights reserved.

# Predefined code segment
#
##line 127 "/ufs/mk/monet_5-0/src/modules/kernel/io.mx"
	EOF := -1;
#        const EOF      := -1;
	SEEK_SET := 0;
#        const SEEK_SET := 0;
	SEEK_CUR := 1;
#        const SEEK_CUR := 1;
	SEEK_END := 2;
#        const SEEK_END := 2;
	aa_a := oid(20000000);
	ba_a := setoid(aa_a);
#setoid(oid(20000000));
#
	fp := fopen("/tmp/test","w+");
#fp := fopen ( "/tmp/test", "w+" );
	ca_a := fwrite(fp,"Dit is een test\n",17);
#fwrite( fp, "Dit is een test\n", 17 );
	fp := freopen("/tmp/test","r+",fp);
#fp := freopen ( "/tmp/test", "r+", fp );
	da_a := fread(fp,17);
	ea_a := tostring(da_a);
	fa_a := print(ea_a);
#fread( fp, 17 ).tostr.print;
#
	ga_a := fseek(fp,0,0);
#fseek( fp, 0, 0);
	fprintf(fp,"%s","test");
	fprintf(fp," %d",10);
	fprintf(fp," %c",'c');
	fprintf(fp," %d",10);
	fprintf(fp," %f\n",7.0);
#fprintf( fp, "%s %d %c %d %f\n", "test", 10, 'c', 10, 7.0 );
#
	s := "testing again and again\n";
#s := "testing again and again\n";
#
	ia_a := fseek(fp,0,0);
#fseek( fp, 0, 0);
	ja_a := fputs(s,fp);
#fputs( s, fp );
	ka_a := fseek(fp,0,0);
#fseek( fp, 0, 0);
	s := fgets(fp);
#s := fgets( fp );
#
	la_a := fflush(fp);
#fflush( fp );
	ma_a := fclose(fp);
#fclose( fp );
	fprintf(fp,"%s","test");
	fprintf(fp," %d",10);
	fprintf(fp," %c",'c');
	fprintf(fp," %d",10);
	fprintf(fp," %f\n",7.0);
#	na_a := printf("%s %d %c %d %f\n","test",10,'c',10,7.0);
#printf( "%s %d %c %d %f\n", "test", 10, 'c', 10, 7.0 );
	oa_a := printf("%s\n",s);
#printf( "%s\n", s );
#
	quit:= bbp.bind("quit");
#quit;
#
#
##line 156 "/ufs/mk/monet_5-0/src/modules/kernel/io.mx"
#
