# Monet Database Server V5.0
# Copyright (c) 1993-2004, CWI. All rights reserved.
# compiled for 32biti686-pc-linux-gnu/32bit.
# config:/ufs/mk/monet5/src/mal/Tests/tst.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB
# dbname:demo
## syntax analysis test for guarded blocks, redo's and leave's
#barrier	L:= 1;
#	#do it
#	leave Z;	# not known in block
#	redo L;
#exit 	L;
#	redo L;		# outside block
#	leave X;	# outside block
#	redo A;		# outside block
#barrier X:=1;
#	leave L;	# outside block
#	leave X;
#	redo L;		# outside block
#exit	X;
#barrier A:=1;
#	barrier B:= 1;
#		redo A;
#	exit	B;
#	barrier C:=1;
#		leave A;
#	exit 	C;
#
#	exit	B;	# out of order
#	exit	F;	# unknown
#
#	barrier D:=1;
#		leave D;
#		redo  D;  # dead code
#	exit	D;
#	barrier D:=2;		# duplicate block
#	exit	D;
#exit	A;
#barrier  unfinished:= 1;
#	f:=1;
#
!ERROR: label 'Z' not in guarded block in main[2]
!ERROR: label 'L' not in guarded block in main[5]
!ERROR: label 'X' not in guarded block in main[6]
!ERROR: label 'A' not in guarded block in main[7]
!ERROR: label 'L' not in guarded block in main[9]
!ERROR: label 'L' not in guarded block in main[11]
!ERROR: exit-label 'B' doesnot match 'A' in main[20]
!ERROR: exit-label 'F' without begin-label in main[21]
!ERROR: exit-label 'A' without begin-label in main[28]
!ERROR: begin 'unfinished' without exit in main[31]
function Admin.main():int;	# 0  (main:int)
barrier L := 1;	# 1  (L:int)<-($2:int) jump 4
    leave Z;	# 2  (Z:any)
    redo L;	# 3  (L:int) jump 1
exit L;	# 4  (L:int)
    redo L;	# 5  (L:int)
    leave X;	# 6  (X:int)
    redo A;	# 7  (A:int)
barrier X := 1;	# 8  (X:int)<-($2:int) jump 12
    leave L;	# 9  (L:int)
    leave X;	# 10  (X:int) jump 12
    redo L;	# 11  (L:int)
exit X;	# 12  (X:int)
barrier A := 1;	# 13  (A:int)<-($2:int) jump 20
barrier B := 1;	# 14  (B:int)<-($2:int) jump 16
    redo A;	# 15  (A:int)
exit B;	# 16  (B:int)
barrier C := 1;	# 17  (C:int)<-($2:int) jump 19
    leave A;	# 18  (A:int)
exit C;	# 19  (C:int)
exit B;	# 20  (B:int)
exit F;	# 21  (F:any)
barrier D := 1;	# 22  (D:int)<-($2:int) jump 25
    leave D;	# 23  (D:int) jump 25
    redo D;	# 24  (D:int) jump 22
exit D;	# 25  (D:int)
barrier D := 2;	# 26  (D:int)<-($10:int) jump 27
exit D;	# 27  (D:int)
exit A;	# 28  (A:int)
barrier unfinished := 1;	# 29  (unfinished:int)<-($2:int)
    f := 1;	# 30  (f:int)<-($2:int)
>