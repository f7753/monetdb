# the multiplex code blocks.

b:= new(:void,:lng);
i:= -1L;
barrier v:= nextElement(i,0L,1000000L);
	k:= rand();
	l:= lng(i);
	bat.insert(b,nil,i);
	redo v;
exit v;
#setReadMode(b);
mx:= max(b); 
#printf("max %d",mx);
mi:= min(b); 
#printf(" min %d\n",mi);
t0:= alarm.usec();
c:= copy(b);
t1:= alarm.usec();
d0:= t1-t0;
printf("copy %d",d0);
cnt:= count(c);
printf(" count %d\n",cnt);
t0:= alarm.usec();
z:= select(b,25:lng,25:lng);
t1:= alarm.usec();
d0:= t1-t0;
printf("select none %d",d0);
cnt:= count(z);
printf(" count %d\n",cnt);
t0:= alarm.usec();
z2:= select(b,mi,mx);
t1:= alarm.usec();
d0:= t1-t0;
printf("select all %d",d0);
cnt:= count(z2);
printf(" count %d\n",cnt);
rng:= mx-mi;
r2:= rng/20;
r3:= mi+r2;
t0:= alarm.usec();
z3:= select(b,mi,r3);
t1:= alarm.usec();
d0:= t1-t0;
printf("select 0.05 %d",d0);
cnt:= count(z3);
printf(" count %d\n",cnt);
r2:= rng/10;
r3:= mi+r2;
t0:= alarm.usec();
z4:= select(b,mi,r3);
t1:= alarm.usec();
d0:= t1-t0;
printf("select 0.1 %d",d0);
cnt:= count(z4);
printf(" count %d\n",cnt);
r2:= rng/5;
r3:= mi+r2;
t0:= alarm.usec();
z5:= select(b,mi,r3);
t1:= alarm.usec();
d0:= t1-t0;
printf("select 0.2 %d",d0);
cnt:= count(z5);
printf(" count %d\n",cnt);
r3:= r3+r2;
t0:= alarm.usec();
z6:= select(b,mi,r3);
t1:= alarm.usec();
d0:= t1-t0;
printf("select 0.4 %d",d0);
cnt:= count(z6);
printf(" count %d\n",cnt);
r3:= r3+r2;
t0:= alarm.usec();
z7:= select(b,mi,r3);
t1:= alarm.usec();
d0:= t1-t0;
printf("select 0.6 %d",d0);
cnt:= count(z7);
printf(" count %d\n",cnt);
r3:= r3+r2;
t0:= alarm.usec();
z8:= select(b,mi,r3);
t1:= alarm.usec();
d0:= t1-t0;
printf("select 0.8 %d",d0);
cnt:= count(z8);
printf(" count %d\n",cnt);
r3:= r3+r2;
t0:= alarm.usec();
z9:= select(b,mi,r3);
t1:= alarm.usec();
d0:= t1-t0;
printf("select 1.0 %d",d0);
cnt:= count(z9);
printf(" count %d\n",cnt);
t0:= alarm.usec();
sr:= reverse(b);
s:= sort(sr);
t1:= alarm.usec();
d0:= t1-t0;
printf("tail sort %d",d0);
cnt:= count(s);
printf(" count %d\n",cnt);
cnt:= count(z9);
t0:= alarm.usec();
#x:= multiplex.script("+",b,c);
#t1:= alarm.usec();
#d0:= t1-t0;
#printf("multiplex.script(+) %d\n",d0);
#t0:= alarm.usec();
#x:= multiplex.tactics("+",b,c);
#t1:= alarm.usec();
#d0:= t1-t0;
#printf("multiplex.tactics(+) %d\n",d0);
