# Monet Database Server V5.0
# Copyright (c) 1993-2004, CWI. All rights reserved.
# compiled for 32biti686-pc-linux-gnu/32bit.
# config:/ufs/mk/monet5/src/mal/Tests/tst.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB/dbfarm
# dbname:demo
## Polymorphic function tests
## Catching a dynamic error
#function test(b:bat[:any,:any$2],c:any$2):int;
#	k:= 1+c;
#	print(k);
#end test;
function Admin.test(b:bat[:any,:any$2],c:any$2):int;	# 0  (test:int)<-(b:bat[:any,:any$2])(c:any$2)
    k := +(1,c);	# 1  unknown (k:any)<-($4:int)(c:any$2)
    io.print(k);	# 2 CMDprint_val ($5:int)<-(k:any)
end test;	# 3  
#
#c:=new(:int,:str);
#test(c,"hello");
#
!ERROR: '+' undefined in Admin.test[1]
!ERROR: Error in cloned function
!ERROR: function Admin.test(b:bat[:int,:str],c:str):str;	# 0  (c:str)<-(b:bat[:int,:str])(c:str)
!ERROR:     k := +(1,c);	# 1  unknown (k:any)<-($4:int)(c:str)
!ERROR:     io.print(k);	# 2 CMDprint_val ($5:int)<-(k:any)
!ERROR: end test;	# 3  
!ERROR: 'Admin.test' undefined in Admin.main[2]
function Admin.main():int;	# 0  (main:int)
    c := bbp.new(int:,str:);	# 1 CMDBATnew (c:bat[:int,:str])<-($2:int)($3:str)
    Admin.test(c,"hello");	# 2  ($4:int)<-(c:bat[:int,:str])($5:str)
end main;	# 3  
>