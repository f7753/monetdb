stdout of test 'tst500` in directory 'src/mal` itself:
# Monet Database Server V5.0
# Copyright (c) 1993-2004, CWI. All rights reserved.
# compiled for 32biti686-pc-linux-gnu/32bit.
# config:/ufs/mk/monet5/src/mal/Tests/tst.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB/dbfarm
# dbname:demo
# Visit http://monetdb.cwi.nl for further information.
## recursive MAL calls 
#
#function simple(i:int, lim:int, s:str):flt;
#printf("i=%d ",i);
#printf("lim=%d ",lim);
#printf("str=%s\n",s);
#	i:= i+1;
#barrier	v:= i<lim;
#	z:= simple(i,lim,s);
#exit	v;
#	r:= 3.14:flt;
#	return r;
#end simple;
function Admin.simple(i:int,lim:int,s:str):flt;	# 0  (simple:flt)<-(i:int)(lim:int)(s:str)
    io.printf("i=%d ",i);	# 1 IOprint_formatted_int ($4:int)<-($5:str)(i:int)
    io.printf("lim=%d ",lim);	# 2 IOprint_formatted_int ($6:int)<-($7:str)(lim:int)
    io.printf("str=%s\n",s);	# 3 IOprint_formatted_str ($8:int)<-($9:str)(s:str)
    i := calc.+(i,1);	# 4 CALCbinaryADDintint (i:int)<-(i:int)($10:int)
barrier v := calc.<(i,lim);	# 5 CALCcompLTintint (v:bit)<-(i:int)(lim:int) jump 7
    z := Admin.simple(i,lim,s);	# 6  (z:flt)<-(i:int)(lim:int)(s:str)
exit v;	# 7  (v:bit)
    r := 3.14:flt;	# 8  (r:flt)<-($14:flt)
    return r;	# 9  (r:flt)
end simple;	# 10  
#
#r:= simple(0,2,"hello");
#
function Admin.main():int;	# 0  (main:int)
    r := Admin.simple(0,2,"hello");	# 1  (r:flt)<-($2:int)($3:int)($4:str)
end main;	# 2  
i=0 lim=2 str=hello
i=1 lim=2 str=hello
>