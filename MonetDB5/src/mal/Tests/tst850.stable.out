stdout of test 'tst850` in directory 'src/mal` itself:


# 14:43:54 >  
# 14:43:54 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=44824 --set sql_port=57958 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst850.mal </dev/null
# 14:43:54 >  

# Monet Database Server V4.5.0
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## The likeselect operation
#
#	t:= new(:int,:str);
#	insert(t,1,"hello world");
#	insert(t,2,"sleep well");
#
#	b:= multiplex.script("startsWith",t,"");
#	print(b);
#
function user.main():int;	# 0  (main:int)
    t := bbp.new(:void,:str);	# 1 CMDBATnew (t:bat[:void,:str])<-($2:void)($3:str)
    bat.setSequenceBase(t,0@0);	# 2 BKCsetSequenceBase ($4:bat[:void,:str])<-(t:bat[:void,:str])($5:oid)
    bat.insert(t,nil,"hello world");	# 3 BKCinsert_bun ($6:bat[:void,:str])<-(t:bat[:void,:str])($7:void)($8:str)
    bat.insert(t,nil,"sleep well");	# 4 BKCinsert_bun ($9:bat[:void,:str])<-(t:bat[:void,:str])($7:void)($10:str)
    io.print(t);	# 5 IOprint_val ($11:int)<-(t:bat[:void,:str])
    $17 := bbp.new(:void,:bit);	# 6 CMDBATnew ($17:bat[:void,:bit])<-($18:void)($19:bit)
barrier ($21,$22,$23):= chopper.newIterator(t);	# 7 CHPbunIterator ($21:lng)($22:void)($23:str)<-(t:bat[:void,:str]) jump 13
    $25 := str.startsWith($23,"");	# 8 STRPrefix ($25:bit)<-($23:str)($14:str)
    bat.insert($17,$22,$25);	# 9 BKCinsert_bun ($26:bat[:void,:bit])<-($17:bat[:void,:bit])($22:void)($25:bit)
catch MALexception;	# 10  (MALexception:str) jump 11
exit MALexception;	# 11  (MALexception:str)
    redo ($21,$22,$23):= chopper.hasMoreElements(t);	# 12 CHPbunHasMoreElements ($21:lng)($22:void)($23:str)<-(t:bat[:void,:str]) jump 8
exit ($21,$22,$23);	# 13  ($21:lng)($22:void)($23:str)
    b := $17;	# 14  (b:bat[:void,:bit])<-($17:bat[:void,:bit])
    bat.setSequenceBase(b,0@0);	# 15 BKCsetSequenceBase ($15:bat[:void,:bit])<-(b:bat[:void,:bit])($5:oid)
    io.print(b);	# 16 IOprint_val ($16:int)<-(b:bat[:void,:bit])
end main;	# 17  
#-------------------------#
# h	tmp_13		  # name
# void	str		  # type
#-------------------------#
[ 0@0,	  "hello world"	  ]
[ 1@0,	  "sleep well"	  ]
#-----------------#
# h	tmp_5	  # name
# int	bit	  # type
#-----------------#
[ 0@0,	  true	  ]
[ 1@0,	  true	  ]

# 14:43:54 >  
# 14:43:54 >  Done.
# 14:43:54 >  

