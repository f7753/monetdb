stdout of test 'tst5001` in directory 'src/mal` itself:
# Monet Database Server V5.0
# Copyright (c) 1993-2004, CWI. All rights reserved.
# compiled for 32biti686-pc-linux-gnu/32bit.
# config:/ufs/mk/monet5/src/mal/Tests/tst.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB/dbfarm
# dbname:demo
# Visit http://monetdb.cwi.nl for further information.
## Testing the cracker implementation
#b:= new(:int,:int);
#insert(b,10,100);
#insert(b,1,2);
#insert(b,6,36);
#insert(b,5,25);
#insert(b,2,4);
#insert(b,3,9);
#insert(b,7,49);
#insert(b,8,64);
#insert(b,4,16);
#insert(b,9,81);
#print(b);
#
#crackers.new(b);
#y:= crackers.crack(b,9,25);
#print(y);
#crackers.info(b);
#print(b);
#
#crackers.new(b);
#y:= crackers.crack(b,80,195);
#print(y);
#crackers.info(b);
#print(b);
#
#crackers.new(b);
#y:= crackers.crack(b,2,2);
#print(y);
#crackers.info(b);
#print(b);
#
#crackers.new(b);
#y:= crackers.crack(b,40,2);
#print(y);
#crackers.info(b);
#print(b);
#catch MALexception;
#print(MALexception);
#exit MALexception;
#
function Admin.main():int;	# 0  (main:int)
    b := bbp.new(:int,:int);	# 1 CMDBATnew (b:bat[:int,:int])<-($2:int)($3:int)
    bat.insert(b,10,100);	# 2 BKCinsert_bun ($4:void)<-(b:bat[:int,:int])($5:int)($6:int)
    bat.insert(b,1,2);	# 3 BKCinsert_bun ($7:void)<-(b:bat[:int,:int])($8:int)($9:int)
    bat.insert(b,6,36);	# 4 BKCinsert_bun ($10:void)<-(b:bat[:int,:int])($11:int)($12:int)
    bat.insert(b,5,25);	# 5 BKCinsert_bun ($13:void)<-(b:bat[:int,:int])($14:int)($15:int)
    bat.insert(b,2,4);	# 6 BKCinsert_bun ($16:void)<-(b:bat[:int,:int])($9:int)($17:int)
    bat.insert(b,3,9);	# 7 BKCinsert_bun ($18:void)<-(b:bat[:int,:int])($19:int)($20:int)
    bat.insert(b,7,49);	# 8 BKCinsert_bun ($21:void)<-(b:bat[:int,:int])($22:int)($23:int)
    bat.insert(b,8,64);	# 9 BKCinsert_bun ($24:void)<-(b:bat[:int,:int])($25:int)($26:int)
    bat.insert(b,4,16);	# 10 BKCinsert_bun ($27:void)<-(b:bat[:int,:int])($17:int)($28:int)
    bat.insert(b,9,81);	# 11 BKCinsert_bun ($29:void)<-(b:bat[:int,:int])($20:int)($30:int)
    io.print(b);	# 12 IOprint_val ($31:int)<-(b:bat[:int,:int])
    crackers.new(b);	# 13 CRKnew ($32:void)<-(b:bat[:int,:int])
    y := crackers.crack(b,9,25);	# 14 CRKcrackNaive (y:int)<-(b:bat[:int,:int])($20:int)($15:int)
    io.print(y);	# 15 IOprint_val ($34:int)<-(y:int)
    crackers.info(b);	# 16 CRKinfo ($35:void)<-(b:bat[:int,:int])
    io.print(b);	# 17 IOprint_val ($36:int)<-(b:bat[:int,:int])
    crackers.new(b);	# 18 CRKnew ($37:void)<-(b:bat[:int,:int])
    y := crackers.crack(b,80,195);	# 19 CRKcrackNaive (y:int)<-(b:bat[:int,:int])($38:int)($39:int)
    io.print(y);	# 20 IOprint_val ($40:int)<-(y:int)
    crackers.info(b);	# 21 CRKinfo ($41:void)<-(b:bat[:int,:int])
    io.print(b);	# 22 IOprint_val ($42:int)<-(b:bat[:int,:int])
    crackers.new(b);	# 23 CRKnew ($43:void)<-(b:bat[:int,:int])
    y := crackers.crack(b,2,2);	# 24 CRKcrackNaive (y:int)<-(b:bat[:int,:int])($44:int)($44:int)
    io.print(y);	# 25 IOprint_val ($45:int)<-(y:int)
    crackers.info(b);	# 26 CRKinfo ($46:void)<-(b:bat[:int,:int])
    io.print(b);	# 27 IOprint_val ($47:int)<-(b:bat[:int,:int])
    crackers.new(b);	# 28 CRKnew ($48:void)<-(b:bat[:int,:int])
    y := crackers.crack(b,40,2);	# 29 CRKcrackNaive (y:int)<-(b:bat[:int,:int])($49:int)($44:int)
    io.print(y);	# 30 IOprint_val ($50:int)<-(y:int)
    crackers.info(b);	# 31 CRKinfo ($51:void)<-(b:bat[:int,:int])
    io.print(b);	# 32 IOprint_val ($52:int)<-(b:bat[:int,:int])
catch MALexception;	# 33  (MALexception:any) jump 35
    io.print(MALexception);	# 34 IOprint_val ($54:int)<-(MALexception:any)
exit MALexception;	# 35  (MALexception:any)
end main;	# 36  
#-----------------#
# h	tmp_4	  # name
# int	int	  # type
#-----------------#
[ 10,	  100	  ]
[ 1,	  2	  ]
[ 6,	  36	  ]
[ 5,	  25	  ]
[ 2,	  4	  ]
[ 3,	  9	  ]
[ 7,	  49	  ]
[ 8,	  64	  ]
[ 4,	  16	  ]
[ 9,	  81	  ]
[ 2 ]
# idx bid kind parent rng_max rng_min idx_first idx_last # name
[   0   4, P, -1 2, 100, 1, 10, ]
[   1   4, L, 0 2, 8, 1, 2, ]
[   2   4, L, 0 9, 25, 3, 5, ]
[   3   4, L, 0 26, 100, 6, 10, ]
#-----------------#
# h	tmp_4	  # name
# int	int	  # type
#-----------------#
[ 1,	  2	  ]
[ 2,	  4	  ]
[ 3,	  9	  ]
[ 5,	  25	  ]
[ 4,	  16	  ]
[ 6,	  36	  ]
[ 7,	  49	  ]
[ 8,	  64	  ]
[ 9,	  81	  ]
[ 10,	  100	  ]
[ 2 ]
# idx bid kind parent rng_max rng_min idx_first idx_last # name
[   0   4, P, -1 2, 100, 1, 10, ]
[   1   4, L, 0 2, 79, 1, 8, ]
[   2   4, L, 0 80, 100, 9, 10, ]
#-----------------#
# h	tmp_4	  # name
# int	int	  # type
#-----------------#
[ 1,	  2	  ]
[ 2,	  4	  ]
[ 3,	  9	  ]
[ 5,	  25	  ]
[ 4,	  16	  ]
[ 6,	  36	  ]
[ 7,	  49	  ]
[ 8,	  64	  ]
[ 9,	  81	  ]
[ 10,	  100	  ]
[ 1 ]
# idx bid kind parent rng_max rng_min idx_first idx_last # name
[   0   4, P, -1 2, 100, 1, 10, ]
[   1   4, L, 0 2, 2, 1, 1, ]
[   2   4, L, 0 3, 100, 2, 10, ]
#-----------------#
# h	tmp_4	  # name
# int	int	  # type
#-----------------#
[ 1,	  2	  ]
[ 2,	  4	  ]
[ 3,	  9	  ]
[ 5,	  25	  ]
[ 4,	  16	  ]
[ 6,	  36	  ]
[ 7,	  49	  ]
[ 8,	  64	  ]
[ 9,	  81	  ]
[ 10,	  100	  ]
[ "MALexception:Admin.main[29]:crackers.crack:illegal range\n" ]
>