stdout of test 'tst012` in directory 'src/mal` itself:


# 07:58:36 >  
# 07:58:36 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst012.mal </dev/null
# 07:58:36 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## simple loop with controlled redo
#
#	i:=0;
#barrier j:=i<3;
#	print(i);
#	i:=i+1;
#	redo j:= i<3;
#exit	j;
#	print("first loop done");
#	i:=0;
#barrier j:=i<3;
#	print(i);
#	i:=i+1;
#	redo j:= i<3;
#exit	j;
#	print("second loop done");
#
function user.main():int;	# 0  (main:int)
    i := 0;	# 1  (i:int)<-($2:int)
barrier j := calc.<(i,3);	# 2 CALCcompLTintint (j:bit)<-(i:int)($4:int) jump 6
    io.print(i);	# 3 IOprint_val ($5:int)<-(i:int)
    i := calc.+(i,1);	# 4 CALCbinaryADDintint (i:int)<-(i:int)($6:int)
    redo j := calc.<(i,3);	# 5 CALCcompLTintint (j:bit)<-(i:int)($4:int) jump 3
exit j;	# 6  (j:bit)
    io.print("first loop done");	# 7 IOprint_val ($7:int)<-($8:str)
    i := 0;	# 8  (i:int)<-($2:int)
barrier j := calc.<(i,3);	# 9 CALCcompLTintint (j:bit)<-(i:int)($4:int) jump 13
    io.print(i);	# 10 IOprint_val ($9:int)<-(i:int)
    i := calc.+(i,1);	# 11 CALCbinaryADDintint (i:int)<-(i:int)($6:int)
    redo j := calc.<(i,3);	# 12 CALCcompLTintint (j:bit)<-(i:int)($4:int) jump 10
exit j;	# 13  (j:bit)
    io.print("second loop done");	# 14 IOprint_val ($10:int)<-($11:str)
end main;	# 15  
[ 0 ]
[ 1 ]
[ 2 ]
[ "first loop done" ]
[ 0 ]
[ 1 ]
[ 2 ]
[ "second loop done" ]

# 07:58:36 >  
# 07:58:36 >  Done.
# 07:58:36 >  

