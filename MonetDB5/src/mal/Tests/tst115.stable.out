stdout of test 'tst115` in directory 'src/mal` itself:


# 07:58:59 >  
# 07:58:59 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst115.mal </dev/null
# 07:58:59 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## the next step is to trace the call of a mal function call
#
#command + (L:any$1,R:any$1):any$1 
!ERROR: address of 'addIntInt' not found
command user.+(L:any$1,R:any$1):any$1 address addIntInt;	# 0  dynamic (+:any$1)<-(L:any$1)(R:any$1)
#
#function doitOnce():int;
#	z:= 12;
#	return z;
#end doitOnce;
function user.doitOnce():int;	# 0  (doitOnce:int)
    z := 12;	# 1  (z:int)<-($2:int)
    return z;	# 2  (z:int)
end doitOnce;	# 3  
#
#function doitTwice(i:int):int;
#	j:= 2;
#	k:= 11111;
#	i:= j+k;
#	return i;
#end doitTwice;
function user.doitTwice(i:int):int;	# 0  (doitTwice:int)<-(i:int)
    j := 2;	# 1  (j:int)<-($3:int)
    k := 11111;	# 2  (k:int)<-($5:int)
    i := user.+(j,k);	# 3  unknown (i:int)<-(j:int)(k:int)
    return i;	# 4  (i:int)
end doitTwice;	# 5  
!ERROR: 'user.+' undefined in user.doitTwice[3]
#
#
#a:=1;
#b:= doitOnce();
#c:= 2;
#d:= doitTwice(3);
#c:= 3;
#d:= doitTwice("wrong");
#
!ERROR: 'user.doitTwice' undefined in user.main[6]
function user.main():int;	# 0  (main:int)
    a := 1;	# 1  (a:int)<-($2:int)
    b := user.doitOnce();	# 2  (b:int)
    c := 2;	# 3  (c:int)<-($5:int)
    d := user.doitTwice(3);	# 4  (d:int)<-($7:int)
    c := 3;	# 5  (c:int)<-($7:int)
    d := user.doitTwice("wrong");	# 6  unknown (d:int)<-($8:str)
end main;	# 7  

# 07:59:00 >  
# 07:59:00 >  Done.
# 07:59:00 >  

