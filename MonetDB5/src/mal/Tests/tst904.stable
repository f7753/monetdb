# Monet Database Server V5.0
# Copyright (c) 1993-2003, CWI. All rights reserved.
# compiled for 32biti686-pc-linux-gnu/32bit.
# config:/ufs/mk/monet_5/src/mal/Tests/tst.conf
# dbfarm:/ufs/mk/monet_5/Linux/var/MonetDB
# dbname:demo
## the multiplex code blocks using CONSTANTS.
#
#b:= new(lng,lng);
#i:= -1:lng;
#barrier v:= nextElement(i,0:lng,10:lng);
#	insert(b,i,i);
#	redo v;
#exit v;
#print(b);
#c:= 1;
#xz:= multiplex.script("+",b,c);
#print(xz);
#
function Admin.main():int; #0  (main:int)
    b := mal.new(lng,lng); #1 CMDBATnew (b:bat[lng,lng])<-(lng:lng)(lng:lng)
    i := -1; #2  (i:lng)<-($4:lng)
barrier v := mal.nextElement(i,0,10); #3 lngForloop (v:bit)<-(i:lng)($6:lng)($7:lng) jump 6
    bat.insert(b,i,i); #4 CMDinsert_bun ($8:bat[lng,lng])<-(b:bat[lng,lng])(i:lng)(i:lng)
    redo v; #5  (v:bit) jump 3
exit v; #6  (v:bit)
    io.print(b); #7 CMDprint_val ($9:int)<-(b:bat[lng,lng])
    c := 1; #8  (c:int)<-($11:int)
    xz := multiplex.script("+",b,c); #9 CMDmultiplexScript (xz:bat[lng,lng])<-($13:str)(b:bat[lng,lng])(c:int)
    io.print(xz); #10 CMDprint_val ($14:int)<-(xz:bat[lng,lng])
end main; #11  
#-----------------#
# BAT:	  tmp_4	  #
# (lng)	  (lng)	  #
#-----------------#
[ 0,	  0	  ]
[ 1,	  1	  ]
[ 2,	  2	  ]
[ 3,	  3	  ]
[ 4,	  4	  ]
[ 5,	  5	  ]
[ 6,	  6	  ]
[ 7,	  7	  ]
[ 8,	  8	  ]
[ 9,	  9	  ]
#-----------------#
# BAT:	  tmp_5	  #
# (lng)	  (lng)	  #
#-----------------#
[ 0,	  1	  ]
[ 1,	  2	  ]
[ 2,	  3	  ]
[ 3,	  4	  ]
[ 4,	  5	  ]
[ 5,	  6	  ]
[ 6,	  7	  ]
[ 7,	  8	  ]
[ 8,	  9	  ]
[ 9,	  10	  ]
>