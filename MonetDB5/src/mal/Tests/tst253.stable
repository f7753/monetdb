# Monet Database Server V5.0
# Copyright (c) 1993-2004, CWI. All rights reserved.
# compiled for 32biti686-pc-linux-gnu/32bit.
# config:/ufs/mk/monet5/src/mal/Tests/tst.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB/dbfarm
# dbname:demo
# Visit http://monetdb.cwi.nl for further information.
## testing void bats
#
#b:= new(:void,:str);
#insert(b,"hello");
#insert(b,nil,"world");
#print(b);
#
##materialize header
#c:= reverse(b);
#print(c);
#d:= mark(c);
#print(d);
#
function Admin.main():int;	# 0  (main:int)
    b := bbp.new(:void,:str);	# 1 CMDBATnew (b:bat[:void,:str])<-($2:void)($3:str)
    bat.insert(b,"hello");	# 2 BKCinsert_void_bun ($4:void)<-(b:bat[:void,:str])($5:str)
    bat.insert(b,nil,"world");	# 3 BKCinsert_bun ($6:void)<-(b:bat[:void,:str])($7:void)($8:str)
    io.print(b);	# 4 IOprint_val ($9:int)<-(b:bat[:void,:str])
    c := bat.reverse(b);	# 5 BKCreverse (c:bat[:str,:void])<-(b:bat[:void,:str])
    io.print(c);	# 6 IOprint_val ($11:int)<-(c:bat[:str,:void])
    d := algebra.mark(c);	# 7 ALGmark_default (d:bat[:str,:oid])<-(c:bat[:str,:void])
    io.print(d);	# 8 IOprint_val ($13:int)<-(d:bat[:str,:oid])
end main;	# 9  
#-------------------------#
# h	tmp_4		  # name
# void	str		  # type
#-------------------------#
[ nil,	  "hello"	  ]
[ nil,	  "world"	  ]
#-------------------------#
# t		tmp_4	  # name
# str		void	  # type
#-------------------------#
[ "hello",	  nil	  ]
[ "world",	  nil	  ]
#---------------------------------#
# h		tmp_5		  # name
# str		void		  # type
#---------------------------------#
[ "hello",	  1000070@0	  ]
[ "world",	  1000071@0	  ]
>