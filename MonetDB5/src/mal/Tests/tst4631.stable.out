stdout of test 'tst4631` in directory 'src/mal` itself:


# 11:15:20 >  
# 11:15:20 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=49613 --set sql_port=59264 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst4631.mal </dev/null
# 11:15:20 >  

# Monet Database Server V4.5.0
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## TPCH Q1 non-optimized
#include sql;
#function qry1();
#    V3 := sql.bind("sys","lineitem","l_shipdate",0);
#    V8 := sql.bind_dbat("sys","lineitem",0);
#    V9 := bat.reverse(V8);
#    V10 := algebra.kdiff(V3,V9);
#    V14 := algebra.uselect(V10,nil,nil);
#    V17 := algebra.mark(V14,0@0);
#    V18 := bat.reverse(V17);
#    V19 := sql.bind("sys","lineitem","l_returnflag",0);
#    V21 := sql.bind_dbat("sys","lineitem",0);
#    V22 := bat.reverse(V21);
#    V23 := algebra.kdiff(V19,V22);
#    V24 := algebra.join(V18,V23);
#    V25 := group.group(V24);
#    V26 := sql.bind("sys","lineitem","l_linestatus",0);
#    V28 := sql.bind_dbat("sys","lineitem",0);
#    V29 := bat.reverse(V28);
#    V30 := algebra.kdiff(V26,V29);
#    V31 := algebra.join(V18,V30);
#    V32 := group.group(V25,V31);
#    V33 := algebra.tunique(V32);
#    V34 := bat.mirror(V33);
#    V35 := sql.bind_dbat("sys","lineitem",0);
#    V36 := bat.reverse(V35);
#    V37 := algebra.kdiff(V19,V36);
#    V38 := algebra.join(V18,V37);
#    V39 := algebra.join(V34,V38);
#    V40 := algebra.sort_reverse(V39);
#    V41 := sql.bind_dbat("sys","lineitem",0);
#    V45 := bat.reverse(V41);
#    V46 := algebra.kdiff(V26,V45);
#    V47 := algebra.join(V18,V46);
#    V48 := algebra.join(V34,V47);
#    V49 := group.refine(V40,V48);
#    V50 := sql.bind("sys","lineitem","l_quantity",0);
#    V52 := sql.bind_dbat("sys","lineitem",0);
#    V53 := bat.reverse(V52);
#    V54 := algebra.kdiff(V50,V53);
#    V55 := algebra.join(V18,V54);
#    V56 := aggrX3.sum(V55,V32,V34);
#    V57 := sql.bind("sys","lineitem","l_extendedprice",0);
#    V59 := sql.bind_dbat("sys","lineitem",0);
#    V60 := bat.reverse(V59);
#    V61 := algebra.kdiff(V57,V60);
#    V62 := algebra.join(V18,V61);
#    V63 := aggrX3.sum(V62,V32,V34);
#    V64 := sql.bind_dbat("sys","lineitem",0);
#    V65 := bat.reverse(V64);
#    V66 := algebra.kdiff(V57,V65);
#    V67 := algebra.join(V18,V66);
#    V69 := calc.lng(1);
#    V71 := calc.*(V69,100);
#    V72 := sql.bind("sys","lineitem","l_discount",0);
#    V74 := sql.bind_dbat("sys","lineitem",0);
#    V78 := bat.reverse(V74);
#    V79 := algebra.kdiff(V72,V78);
#    V80 := algebra.join(V18,V79);
#    V81 := multiplex.script("-",V71,V80);
#    V83 := batcalc.*(V67,V81);
#    V85 := aggrX3.sum(V83,V32,V34);
#    V86 := sql.bind_dbat("sys","lineitem",0);
#    V87 := bat.reverse(V86);
#    V88 := algebra.kdiff(V57,V87);
#    V89 := algebra.join(V18,V88);
#    V90 := calc.lng(1);
#    V91 := calc.*(V90,100);
#    V92 := sql.bind_dbat("sys","lineitem",0);
#    V93 := bat.reverse(V92);
#    V94 := algebra.kdiff(V72,V93);
#    V95 := algebra.join(V18,V94);
#    V96 := multiplex.script("-",V91,V95);
#    V97 := batcalc.*(V89,V96);
#    V98 := calc.lng(1);
#    V99 := calc.*(V98,100);
#    V100 := sql.bind("sys","lineitem","l_tax",0);
#    V102 := sql.bind_dbat("sys","lineitem",0);
#    V103 := bat.reverse(V102);
#    V104 := algebra.kdiff(V100,V103);
#    V105 := algebra.join(V18,V104);
#    V106 := multiplex.script("+",V99,V105);
#    V108 := batcalc.*(V97,V106);
#    V109 := aggrX3.sum(V108,V32,V34);
#    V110 := sql.bind_dbat("sys","lineitem",0);
#    V114 := bat.reverse(V110);
#    V115 := algebra.kdiff(V50,V114);
#    V116 := algebra.join(V18,V115);
#    V117 := aggrX3.avg(V116,V32,V34);
#    V118 := sql.bind_dbat("sys","lineitem",0);
#    V119 := bat.reverse(V118);
#    V120 := algebra.kdiff(V57,V119);
#    V121 := algebra.join(V18,V120);
#    V122 := aggrX3.avg(V121,V32,V34);
#    V124 := multiplex.script("round",V122,100);
#    V126 := sql.bind_dbat("sys","lineitem",0);
#    V127 := bat.reverse(V126);
#    V128 := algebra.kdiff(V72,V127);
#    V129 := algebra.join(V18,V128);
#    V130 := aggrX3.avg(V129,V32,V34);
#    V131 := multiplex.script("round",V130,100);
#    V132 := aggrX3.count(V32,V32,V34);
#    sql.column(V39,"l_returnflag","varchar",1,0);
#    sql.column(V48,"l_linestatus","varchar",1,0);
#    sql.column(V56,"sum_qty","bigint",0,0);
#    sql.column(V63,"sum_base_price","decimal",19,2);
#    sql.column(V85,"sum_disc_price","decimal",19,4);
#    sql.column(V109,"sum_charge","decimal",19,6);
#    sql.column(V117,"avg_qty","double",53,0);
#    sql.column(V124,"avg_price","double",53,0);
#    sql.column(V131,"avg_disc","double",53,0);
#    sql.column(V132,"count_order","int",0,0);
#    sql.output(V49,V39,V48,V56,V63,V85,V109,V117,V124,V131,V132);
#end qry1;
function Admin.qry1():void;	# 0  (qry1:void)
    V3 := sql.bind("sys","lineitem","l_shipdate",0);	# 1 mvc_bind_wrap (V3:bat[:any,:any])<-($2:str)($3:str)($4:str)($5:int)
    V8 := sql.bind_dbat("sys","lineitem",0);	# 2 mvc_bind_dbat_wrap (V8:bat[:any,:any])<-($2:str)($3:str)($5:int)
    V9 := bat.reverse(V8);	# 3 BKCreverse (V9:bat[:any,:any])<-(V8:bat[:any,:any])
    V10 := algebra.kdiff(V3,V9);	# 4 ALGkdiff (V10:bat[:any,:any])<-(V3:bat[:any,:any])(V9:bat[:any,:any])
    V14 := algebra.uselect(V10,nil,nil);	# 5 ALGuselect (V14:bat[:any,:void])<-(V10:bat[:any,:any])($10:void)($10:void)
    V17 := algebra.tmark(V14,0@0);	# 6 ALGtmark (V17:bat[:any,:oid])<-(V14:bat[:any,:void])($12:oid)
    V18 := bat.reverse(V17);	# 7 BKCreverse (V18:bat[:oid,:any])<-(V17:bat[:any,:oid])
    V19 := sql.bind("sys","lineitem","l_returnflag",0);	# 8 mvc_bind_wrap (V19:bat[:any,:any])<-($2:str)($3:str)($15:str)($5:int)
    V21 := sql.bind_dbat("sys","lineitem",0);	# 9 mvc_bind_dbat_wrap (V21:bat[:any,:any])<-($2:str)($3:str)($5:int)
    V22 := bat.reverse(V21);	# 10 BKCreverse (V22:bat[:any,:any])<-(V21:bat[:any,:any])
    V23 := algebra.kdiff(V19,V22);	# 11 ALGkdiff (V23:bat[:any,:any])<-(V19:bat[:any,:any])(V22:bat[:any,:any])
    V24 := algebra.join(V18,V23);	# 12 ALGjoin (V24:bat[:oid,:any])<-(V18:bat[:oid,:any])(V23:bat[:any,:any])
    V25 := group.group(V24);	# 13 GRPgroup2 (V25:bat[:oid,:oid])<-(V24:bat[:oid,:any])
    V26 := sql.bind("sys","lineitem","l_linestatus",0);	# 14 mvc_bind_wrap (V26:bat[:any,:any])<-($2:str)($3:str)($22:str)($5:int)
    V28 := sql.bind_dbat("sys","lineitem",0);	# 15 mvc_bind_dbat_wrap (V28:bat[:any,:any])<-($2:str)($3:str)($5:int)
    V29 := bat.reverse(V28);	# 16 BKCreverse (V29:bat[:any,:any])<-(V28:bat[:any,:any])
    V30 := algebra.kdiff(V26,V29);	# 17 ALGkdiff (V30:bat[:any,:any])<-(V26:bat[:any,:any])(V29:bat[:any,:any])
    V31 := algebra.join(V18,V30);	# 18 ALGjoin (V31:bat[:oid,:any])<-(V18:bat[:oid,:any])(V30:bat[:any,:any])
    V32 := group.group(V25,V31);	# 19 GRPderive2 (V32:bat[:oid,:oid])<-(V25:bat[:oid,:oid])(V31:bat[:oid,:any])
    V33 := algebra.tunique(V32);	# 20 ALGtunique (V33:bat[:oid,:oid])<-(V32:bat[:oid,:oid])
    V34 := bat.mirror(V33);	# 21 BKCmirror (V34:bat[:oid,:oid])<-(V33:bat[:oid,:oid])
    V35 := sql.bind_dbat("sys","lineitem",0);	# 22 mvc_bind_dbat_wrap (V35:bat[:any,:any])<-($2:str)($3:str)($5:int)
    V36 := bat.reverse(V35);	# 23 BKCreverse (V36:bat[:any,:any])<-(V35:bat[:any,:any])
    V37 := algebra.kdiff(V19,V36);	# 24 ALGkdiff (V37:bat[:any,:any])<-(V19:bat[:any,:any])(V36:bat[:any,:any])
    V38 := algebra.join(V18,V37);	# 25 ALGjoin (V38:bat[:oid,:any])<-(V18:bat[:oid,:any])(V37:bat[:any,:any])
    V39 := algebra.join(V34,V38);	# 26 ALGjoin (V39:bat[:oid,:any])<-(V34:bat[:oid,:oid])(V38:bat[:oid,:any])
    V40 := algebra.tsort(V39);	# 27 ALGtsort (V40:bat[:oid,:any])<-(V39:bat[:oid,:any])
    V41 := sql.bind_dbat("sys","lineitem",0);	# 28 mvc_bind_dbat_wrap (V41:bat[:any,:any])<-($37:str)($38:str)($39:int)
    V45 := bat.reverse(V41);	# 29 BKCreverse (V45:bat[:any,:any])<-(V41:bat[:any,:any])
    V46 := algebra.kdiff(V26,V45);	# 30 ALGkdiff (V46:bat[:any,:any])<-(V26:bat[:any,:any])(V45:bat[:any,:any])
    V47 := algebra.join(V18,V46);	# 31 ALGjoin (V47:bat[:oid,:any])<-(V18:bat[:oid,:any])(V46:bat[:any,:any])
    V48 := algebra.join(V34,V47);	# 32 ALGjoin (V48:bat[:oid,:any])<-(V34:bat[:oid,:oid])(V47:bat[:oid,:any])
    V49 := group.refine(V40,V48);	# 33 GRPrefine (V49:bat[:oid,:oid])<-(V40:bat[:oid,:any])(V48:bat[:oid,:any])
    V50 := sql.bind("sys","lineitem","l_quantity",0);	# 34 mvc_bind_wrap (V50:bat[:any,:any])<-($37:str)($38:str)($46:str)($39:int)
    V52 := sql.bind_dbat("sys","lineitem",0);	# 35 mvc_bind_dbat_wrap (V52:bat[:any,:any])<-($37:str)($38:str)($39:int)
    V53 := bat.reverse(V52);	# 36 BKCreverse (V53:bat[:any,:any])<-(V52:bat[:any,:any])
    V54 := algebra.kdiff(V50,V53);	# 37 ALGkdiff (V54:bat[:any,:any])<-(V50:bat[:any,:any])(V53:bat[:any,:any])
    V55 := algebra.join(V18,V54);	# 38 ALGjoin (V55:bat[:oid,:any])<-(V18:bat[:oid,:any])(V54:bat[:any,:any])
    V56 := aggrX3.sum(V55,V32,V34);	# 39 AX3aggrX3_sum3_flt_flt (V56:bat[:oid,:flt])<-(V55:bat[:oid,:any])(V32:bat[:oid,:oid])(V34:bat[:oid,:oid])
    V57 := sql.bind("sys","lineitem","l_extendedprice",0);	# 40 mvc_bind_wrap (V57:bat[:any,:any])<-($37:str)($38:str)($53:str)($39:int)
    V59 := sql.bind_dbat("sys","lineitem",0);	# 41 mvc_bind_dbat_wrap (V59:bat[:any,:any])<-($37:str)($38:str)($39:int)
    V60 := bat.reverse(V59);	# 42 BKCreverse (V60:bat[:any,:any])<-(V59:bat[:any,:any])
    V61 := algebra.kdiff(V57,V60);	# 43 ALGkdiff (V61:bat[:any,:any])<-(V57:bat[:any,:any])(V60:bat[:any,:any])
    V62 := algebra.join(V18,V61);	# 44 ALGjoin (V62:bat[:oid,:any])<-(V18:bat[:oid,:any])(V61:bat[:any,:any])
    V63 := aggrX3.sum(V62,V32,V34);	# 45 AX3aggrX3_sum3_flt_flt (V63:bat[:oid,:flt])<-(V62:bat[:oid,:any])(V32:bat[:oid,:oid])(V34:bat[:oid,:oid])
    V64 := sql.bind_dbat("sys","lineitem",0);	# 46 mvc_bind_dbat_wrap (V64:bat[:any,:any])<-($37:str)($38:str)($39:int)
    V65 := bat.reverse(V64);	# 47 BKCreverse (V65:bat[:any,:any])<-(V64:bat[:any,:any])
    V66 := algebra.kdiff(V57,V65);	# 48 ALGkdiff (V66:bat[:any,:any])<-(V57:bat[:any,:any])(V65:bat[:any,:any])
    V67 := algebra.join(V18,V66);	# 49 ALGjoin (V67:bat[:oid,:any])<-(V18:bat[:oid,:any])(V66:bat[:any,:any])
    V69 := calc.lng(1);	# 50 CALCint2lng (V69:lng)<-($64:int)
    V71 := calc.*(V69,100);	# 51 CALCbinaryMULlngint (V71:lng)<-(V69:lng)($66:int)
    V72 := sql.bind("sys","lineitem","l_discount",0);	# 52 mvc_bind_wrap (V72:bat[:any,:any])<-($37:str)($38:str)($68:str)($39:int)
    V74 := sql.bind_dbat("sys","lineitem",0);	# 53 mvc_bind_dbat_wrap (V74:bat[:any,:any])<-($70:str)($71:str)($72:int)
    V78 := bat.reverse(V74);	# 54 BKCreverse (V78:bat[:any,:any])<-(V74:bat[:any,:any])
    V79 := algebra.kdiff(V72,V78);	# 55 ALGkdiff (V79:bat[:any,:any])<-(V72:bat[:any,:any])(V78:bat[:any,:any])
    V80 := algebra.join(V18,V79);	# 56 ALGjoin (V80:bat[:oid,:any])<-(V18:bat[:oid,:any])(V79:bat[:any,:any])
    V81 := multiplex.script("-",V71,V80);	# 57  (V81:bat[:oid,:lng])<-($77:str)(V71:lng)(V80:bat[:oid,:any])
    V83 := batcalc.*(V67,V81);	# 58 CMDbatMUL (V83:bat[:oid,:lng])<-(V67:bat[:oid,:any])(V81:bat[:oid,:lng])
    V85 := aggrX3.sum(V83,V32,V34);	# 59 AX3aggrX3_sum3_lng_lng (V85:bat[:oid,:lng])<-(V83:bat[:oid,:lng])(V32:bat[:oid,:oid])(V34:bat[:oid,:oid])
    V86 := sql.bind_dbat("sys","lineitem",0);	# 60 mvc_bind_dbat_wrap (V86:bat[:any,:any])<-($70:str)($71:str)($72:int)
    V87 := bat.reverse(V86);	# 61 BKCreverse (V87:bat[:any,:any])<-(V86:bat[:any,:any])
    V88 := algebra.kdiff(V57,V87);	# 62 ALGkdiff (V88:bat[:any,:any])<-(V57:bat[:any,:any])(V87:bat[:any,:any])
    V89 := algebra.join(V18,V88);	# 63 ALGjoin (V89:bat[:oid,:any])<-(V18:bat[:oid,:any])(V88:bat[:any,:any])
    V90 := calc.lng(1);	# 64 CALCint2lng (V90:lng)<-($64:int)
    V91 := calc.*(V90,100);	# 65 CALCbinaryMULlngint (V91:lng)<-(V90:lng)($66:int)
    V92 := sql.bind_dbat("sys","lineitem",0);	# 66 mvc_bind_dbat_wrap (V92:bat[:any,:any])<-($70:str)($71:str)($72:int)
    V93 := bat.reverse(V92);	# 67 BKCreverse (V93:bat[:any,:any])<-(V92:bat[:any,:any])
    V94 := algebra.kdiff(V72,V93);	# 68 ALGkdiff (V94:bat[:any,:any])<-(V72:bat[:any,:any])(V93:bat[:any,:any])
    V95 := algebra.join(V18,V94);	# 69 ALGjoin (V95:bat[:oid,:any])<-(V18:bat[:oid,:any])(V94:bat[:any,:any])
    V96 := multiplex.script("-",V91,V95);	# 70  (V96:bat[:oid,:lng])<-($77:str)(V91:lng)(V95:bat[:oid,:any])
    V97 := batcalc.*(V89,V96);	# 71 CMDbatMUL (V97:bat[:oid,:lng])<-(V89:bat[:oid,:any])(V96:bat[:oid,:lng])
    V98 := calc.lng(1);	# 72 CALCint2lng (V98:lng)<-($64:int)
    V99 := calc.*(V98,100);	# 73 CALCbinaryMULlngint (V99:lng)<-(V98:lng)($66:int)
    V100 := sql.bind("sys","lineitem","l_tax",0);	# 74 mvc_bind_wrap (V100:bat[:any,:any])<-($70:str)($71:str)($95:str)($72:int)
    V102 := sql.bind_dbat("sys","lineitem",0);	# 75 mvc_bind_dbat_wrap (V102:bat[:any,:any])<-($70:str)($71:str)($72:int)
    V103 := bat.reverse(V102);	# 76 BKCreverse (V103:bat[:any,:any])<-(V102:bat[:any,:any])
    V104 := algebra.kdiff(V100,V103);	# 77 ALGkdiff (V104:bat[:any,:any])<-(V100:bat[:any,:any])(V103:bat[:any,:any])
    V105 := algebra.join(V18,V104);	# 78 ALGjoin (V105:bat[:oid,:any])<-(V18:bat[:oid,:any])(V104:bat[:any,:any])
    V106 := multiplex.script("+",V99,V105);	# 79  (V106:bat[:oid,:lng])<-($101:str)(V99:lng)(V105:bat[:oid,:any])
    V108 := batcalc.*(V97,V106);	# 80 CMDbatMUL (V108:bat[:oid,:lng])<-(V97:bat[:oid,:lng])(V106:bat[:oid,:lng])
    V109 := aggrX3.sum(V108,V32,V34);	# 81 AX3aggrX3_sum3_lng_lng (V109:bat[:oid,:lng])<-(V108:bat[:oid,:lng])(V32:bat[:oid,:oid])(V34:bat[:oid,:oid])
    V110 := sql.bind_dbat("sys","lineitem",0);	# 82 mvc_bind_dbat_wrap (V110:bat[:any,:any])<-($105:str)($106:str)($107:int)
    V114 := bat.reverse(V110);	# 83 BKCreverse (V114:bat[:any,:any])<-(V110:bat[:any,:any])
    V115 := algebra.kdiff(V50,V114);	# 84 ALGkdiff (V115:bat[:any,:any])<-(V50:bat[:any,:any])(V114:bat[:any,:any])
    V116 := algebra.join(V18,V115);	# 85 ALGjoin (V116:bat[:oid,:any])<-(V18:bat[:oid,:any])(V115:bat[:any,:any])
    V117 := aggrX3.avg(V116,V32,V34);	# 86 AX3aggrX3_avg3_flt (V117:bat[:oid,:flt])<-(V116:bat[:oid,:any])(V32:bat[:oid,:oid])(V34:bat[:oid,:oid])
    V118 := sql.bind_dbat("sys","lineitem",0);	# 87 mvc_bind_dbat_wrap (V118:bat[:any,:any])<-($105:str)($106:str)($107:int)
    V119 := bat.reverse(V118);	# 88 BKCreverse (V119:bat[:any,:any])<-(V118:bat[:any,:any])
    V120 := algebra.kdiff(V57,V119);	# 89 ALGkdiff (V120:bat[:any,:any])<-(V57:bat[:any,:any])(V119:bat[:any,:any])
    V121 := algebra.join(V18,V120);	# 90 ALGjoin (V121:bat[:oid,:any])<-(V18:bat[:oid,:any])(V120:bat[:any,:any])
    V122 := aggrX3.avg(V121,V32,V34);	# 91 AX3aggrX3_avg3_flt (V122:bat[:oid,:flt])<-(V121:bat[:oid,:any])(V32:bat[:oid,:oid])(V34:bat[:oid,:oid])
    V124 := multiplex.script("round",V122,100);	# 92  (V124:bat[:oid,:flt])<-($118:str)(V122:bat[:oid,:flt])($119:int)
    V126 := sql.bind_dbat("sys","lineitem",0);	# 93 mvc_bind_dbat_wrap (V126:bat[:any,:any])<-($105:str)($106:str)($107:int)
    V127 := bat.reverse(V126);	# 94 BKCreverse (V127:bat[:any,:any])<-(V126:bat[:any,:any])
    V128 := algebra.kdiff(V72,V127);	# 95 ALGkdiff (V128:bat[:any,:any])<-(V72:bat[:any,:any])(V127:bat[:any,:any])
    V129 := algebra.join(V18,V128);	# 96 ALGjoin (V129:bat[:oid,:any])<-(V18:bat[:oid,:any])(V128:bat[:any,:any])
    V130 := aggrX3.avg(V129,V32,V34);	# 97 AX3aggrX3_avg3_flt (V130:bat[:oid,:flt])<-(V129:bat[:oid,:any])(V32:bat[:oid,:oid])(V34:bat[:oid,:oid])
    V131 := multiplex.script("round",V130,100);	# 98  (V131:bat[:oid,:flt])<-($118:str)(V130:bat[:oid,:flt])($119:int)
    V132 := aggrX3.count(V32,V32,V34);	# 99 AX3aggrX3_count3Nils (V132:bat[:oid,:int])<-(V32:bat[:oid,:oid])(V32:bat[:oid,:oid])(V34:bat[:oid,:oid])
    sql.column(V39,"l_returnflag","varchar",1,0);	# 100 SQLcolumn ($127:void)<-(V39:bat[:oid,:any])($128:str)($129:str)($130:int)($107:int)
    sql.column(V48,"l_linestatus","varchar",1,0);	# 101 SQLcolumn ($131:void)<-(V48:bat[:oid,:any])($132:str)($129:str)($130:int)($107:int)
    sql.column(V56,"sum_qty","bigint",0,0);	# 102 SQLcolumn ($133:void)<-(V56:bat[:oid,:flt])($134:str)($135:str)($107:int)($107:int)
    sql.column(V63,"sum_base_price","decimal",19,2);	# 103 SQLcolumn ($136:void)<-(V63:bat[:oid,:flt])($137:str)($138:str)($139:int)($140:int)
    sql.column(V85,"sum_disc_price","decimal",19,4);	# 104 SQLcolumn ($141:void)<-(V85:bat[:oid,:lng])($142:str)($138:str)($139:int)($143:int)
    sql.column(V109,"sum_charge","decimal",19,6);	# 105 SQLcolumn ($144:void)<-(V109:bat[:oid,:lng])($145:str)($138:str)($139:int)($146:int)
    sql.column(V117,"avg_qty","double",53,0);	# 106 SQLcolumn ($147:void)<-(V117:bat[:oid,:flt])($148:str)($149:str)($150:int)($151:int)
    sql.column(V124,"avg_price","double",53,0);	# 107 SQLcolumn ($152:void)<-(V124:bat[:oid,:flt])($153:str)($149:str)($150:int)($151:int)
    sql.column(V131,"avg_disc","double",53,0);	# 108 SQLcolumn ($154:void)<-(V131:bat[:oid,:flt])($155:str)($149:str)($150:int)($151:int)
    sql.column(V132,"count_order","int",0,0);	# 109 SQLcolumn ($156:void)<-(V132:bat[:oid,:int])($157:str)($158:str)($151:int)($151:int)
    sql.output(V49,V39,V48,V56,V63,V85,V109,V117,V124,V131,V132);	# 110  unknown ($159:any)<-(V49:bat[:oid,:oid])(V39:bat[:oid,:any])(V48:bat[:oid,:any])(V56:bat[:oid,:flt])(V63:bat[:oid,:flt])(V85:bat[:oid,:lng])(V109:bat[:oid,:lng])(V117:bat[:oid,:flt])(V124:bat[:oid,:flt])(V131:bat[:oid,:flt])(V132:bat[:oid,:int])
end qry1;	# 111  
!ERROR: 'sql.output' undefined in Admin.qry1[110]
#
#optimizer.setDebug();
#optimizer.ARoptimizer(Admin,qry1);
#optimizer.CXoptimizer(Admin,qry1);
#showFunction(Admin,qry1);
#
#ARoptimizer Admin.qry1
function Admin.qry1():void;	# 0  (qry1:void)
    V3 := sql.bind("sys","lineitem","l_shipdate",0);	# 1 mvc_bind_wrap (V3:bat[:any,:any])<-($2:str)($3:str)($4:str)($5:int)
    V8 := sql.bind_dbat("sys","lineitem",0);	# 2 mvc_bind_dbat_wrap (V8:bat[:any,:any])<-($2:str)($3:str)($5:int)
    V9 := bat.reverse(V8);	# 3 BKCreverse (V9:bat[:any,:any])<-(V8:bat[:any,:any])
    V10 := algebra.kdiff(V3,V9);	# 4 ALGkdiff (V10:bat[:any,:any])<-(V3:bat[:any,:any])(V9:bat[:any,:any])
    V14 := algebra.uselect(V10,nil,nil);	# 5 ALGuselect (V14:bat[:any,:void])<-(V10:bat[:any,:any])($10:void)($10:void)
    V17 := algebra.tmark(V14,0@0);	# 6 ALGtmark (V17:bat[:any,:oid])<-(V14:bat[:any,:void])($12:oid)
    V18 := bat.reverse(V17);	# 7 BKCreverse (V18:bat[:oid,:any])<-(V17:bat[:any,:oid])
    V19 := sql.bind("sys","lineitem","l_returnflag",0);	# 8 mvc_bind_wrap (V19:bat[:any,:any])<-($2:str)($3:str)($15:str)($5:int)
    V21 := sql.bind_dbat("sys","lineitem",0);	# 9 mvc_bind_dbat_wrap (V21:bat[:any,:any])<-($2:str)($3:str)($5:int)
    V22 := bat.reverse(V21);	# 10 BKCreverse (V22:bat[:any,:any])<-(V21:bat[:any,:any])
    V23 := algebra.kdiff(V19,V22);	# 11 ALGkdiff (V23:bat[:any,:any])<-(V19:bat[:any,:any])(V22:bat[:any,:any])
    V24 := algebra.join(V18,V23);	# 12 ALGjoin (V24:bat[:oid,:any])<-(V18:bat[:oid,:any])(V23:bat[:any,:any])
    V25 := group.group(V24);	# 13 GRPgroup2 (V25:bat[:oid,:oid])<-(V24:bat[:oid,:any])
    V26 := sql.bind("sys","lineitem","l_linestatus",0);	# 14 mvc_bind_wrap (V26:bat[:any,:any])<-($2:str)($3:str)($22:str)($5:int)
    V28 := sql.bind_dbat("sys","lineitem",0);	# 15 mvc_bind_dbat_wrap (V28:bat[:any,:any])<-($2:str)($3:str)($5:int)
    V29 := bat.reverse(V28);	# 16 BKCreverse (V29:bat[:any,:any])<-(V28:bat[:any,:any])
    V30 := algebra.kdiff(V26,V29);	# 17 ALGkdiff (V30:bat[:any,:any])<-(V26:bat[:any,:any])(V29:bat[:any,:any])
    V31 := algebra.join(V18,V30);	# 18 ALGjoin (V31:bat[:oid,:any])<-(V18:bat[:oid,:any])(V30:bat[:any,:any])
    V32 := group.group(V25,V31);	# 19 GRPderive2 (V32:bat[:oid,:oid])<-(V25:bat[:oid,:oid])(V31:bat[:oid,:any])
    V33 := algebra.tunique(V32);	# 20 ALGtunique (V33:bat[:oid,:oid])<-(V32:bat[:oid,:oid])
    V34 := bat.mirror(V33);	# 21 BKCmirror (V34:bat[:oid,:oid])<-(V33:bat[:oid,:oid])
    V35 := sql.bind_dbat("sys","lineitem",0);	# 22 mvc_bind_dbat_wrap (V35:bat[:any,:any])<-($2:str)($3:str)($5:int)
    V36 := bat.reverse(V35);	# 23 BKCreverse (V36:bat[:any,:any])<-(V35:bat[:any,:any])
    V37 := algebra.kdiff(V19,V36);	# 24 ALGkdiff (V37:bat[:any,:any])<-(V19:bat[:any,:any])(V36:bat[:any,:any])
    V38 := algebra.join(V18,V37);	# 25 ALGjoin (V38:bat[:oid,:any])<-(V18:bat[:oid,:any])(V37:bat[:any,:any])
    V39 := algebra.join(V34,V38);	# 26 ALGjoin (V39:bat[:oid,:any])<-(V34:bat[:oid,:oid])(V38:bat[:oid,:any])
    V40 := algebra.tsort(V39);	# 27 ALGtsort (V40:bat[:oid,:any])<-(V39:bat[:oid,:any])
    V41 := sql.bind_dbat("sys","lineitem",0);	# 28 mvc_bind_dbat_wrap (V41:bat[:any,:any])<-($37:str)($38:str)($39:int)
    V45 := bat.reverse(V41);	# 29 BKCreverse (V45:bat[:any,:any])<-(V41:bat[:any,:any])
    V46 := algebra.kdiff(V26,V45);	# 30 ALGkdiff (V46:bat[:any,:any])<-(V26:bat[:any,:any])(V45:bat[:any,:any])
    V47 := algebra.join(V18,V46);	# 31 ALGjoin (V47:bat[:oid,:any])<-(V18:bat[:oid,:any])(V46:bat[:any,:any])
    V48 := algebra.join(V34,V47);	# 32 ALGjoin (V48:bat[:oid,:any])<-(V34:bat[:oid,:oid])(V47:bat[:oid,:any])
    V49 := group.refine(V40,V48);	# 33 GRPrefine (V49:bat[:oid,:oid])<-(V40:bat[:oid,:any])(V48:bat[:oid,:any])
    V50 := sql.bind("sys","lineitem","l_quantity",0);	# 34 mvc_bind_wrap (V50:bat[:any,:any])<-($37:str)($38:str)($46:str)($39:int)
    V52 := sql.bind_dbat("sys","lineitem",0);	# 35 mvc_bind_dbat_wrap (V52:bat[:any,:any])<-($37:str)($38:str)($39:int)
    V53 := bat.reverse(V52);	# 36 BKCreverse (V53:bat[:any,:any])<-(V52:bat[:any,:any])
    V54 := algebra.kdiff(V50,V53);	# 37 ALGkdiff (V54:bat[:any,:any])<-(V50:bat[:any,:any])(V53:bat[:any,:any])
    V55 := algebra.join(V18,V54);	# 38 ALGjoin (V55:bat[:oid,:any])<-(V18:bat[:oid,:any])(V54:bat[:any,:any])
    V56 := aggrX3.sum(V55,V32,V34);	# 39 AX3aggrX3_sum3_flt_flt (V56:bat[:oid,:flt])<-(V55:bat[:oid,:any])(V32:bat[:oid,:oid])(V34:bat[:oid,:oid])
    V57 := sql.bind("sys","lineitem","l_extendedprice",0);	# 40 mvc_bind_wrap (V57:bat[:any,:any])<-($37:str)($38:str)($53:str)($39:int)
    V59 := sql.bind_dbat("sys","lineitem",0);	# 41 mvc_bind_dbat_wrap (V59:bat[:any,:any])<-($37:str)($38:str)($39:int)
    V60 := bat.reverse(V59);	# 42 BKCreverse (V60:bat[:any,:any])<-(V59:bat[:any,:any])
    V61 := algebra.kdiff(V57,V60);	# 43 ALGkdiff (V61:bat[:any,:any])<-(V57:bat[:any,:any])(V60:bat[:any,:any])
    V62 := algebra.join(V18,V61);	# 44 ALGjoin (V62:bat[:oid,:any])<-(V18:bat[:oid,:any])(V61:bat[:any,:any])
    V63 := aggrX3.sum(V62,V32,V34);	# 45 AX3aggrX3_sum3_flt_flt (V63:bat[:oid,:flt])<-(V62:bat[:oid,:any])(V32:bat[:oid,:oid])(V34:bat[:oid,:oid])
    V64 := sql.bind_dbat("sys","lineitem",0);	# 46 mvc_bind_dbat_wrap (V64:bat[:any,:any])<-($37:str)($38:str)($39:int)
    V65 := bat.reverse(V64);	# 47 BKCreverse (V65:bat[:any,:any])<-(V64:bat[:any,:any])
    V66 := algebra.kdiff(V57,V65);	# 48 ALGkdiff (V66:bat[:any,:any])<-(V57:bat[:any,:any])(V65:bat[:any,:any])
    V67 := algebra.join(V18,V66);	# 49 ALGjoin (V67:bat[:oid,:any])<-(V18:bat[:oid,:any])(V66:bat[:any,:any])
    V69 := calc.lng(1);	# 50 CALCint2lng (V69:lng)<-($64:int)
    V71 := calc.*(V69,100);	# 51 CALCbinaryMULlngint (V71:lng)<-(V69:lng)($66:int)
    V72 := sql.bind("sys","lineitem","l_discount",0);	# 52 mvc_bind_wrap (V72:bat[:any,:any])<-($37:str)($38:str)($68:str)($39:int)
    V74 := sql.bind_dbat("sys","lineitem",0);	# 53 mvc_bind_dbat_wrap (V74:bat[:any,:any])<-($70:str)($71:str)($72:int)
    V78 := bat.reverse(V74);	# 54 BKCreverse (V78:bat[:any,:any])<-(V74:bat[:any,:any])
    V79 := algebra.kdiff(V72,V78);	# 55 ALGkdiff (V79:bat[:any,:any])<-(V72:bat[:any,:any])(V78:bat[:any,:any])
    V80 := algebra.join(V18,V79);	# 56 ALGjoin (V80:bat[:oid,:any])<-(V18:bat[:oid,:any])(V79:bat[:any,:any])
    V81 := multiplex.script("-",V71,V80);	# 57  (V81:bat[:oid,:lng])<-($77:str)(V71:lng)(V80:bat[:oid,:any])
    V83 := batcalc.*(V67,V81);	# 58 CMDbatMUL (V83:bat[:oid,:lng])<-(V67:bat[:oid,:any])(V81:bat[:oid,:lng])
    V85 := aggrX3.sum(V83,V32,V34);	# 59 AX3aggrX3_sum3_lng_lng (V85:bat[:oid,:lng])<-(V83:bat[:oid,:lng])(V32:bat[:oid,:oid])(V34:bat[:oid,:oid])
    V86 := sql.bind_dbat("sys","lineitem",0);	# 60 mvc_bind_dbat_wrap (V86:bat[:any,:any])<-($70:str)($71:str)($72:int)
    V87 := bat.reverse(V86);	# 61 BKCreverse (V87:bat[:any,:any])<-(V86:bat[:any,:any])
    V88 := algebra.kdiff(V57,V87);	# 62 ALGkdiff (V88:bat[:any,:any])<-(V57:bat[:any,:any])(V87:bat[:any,:any])
    V89 := algebra.join(V18,V88);	# 63 ALGjoin (V89:bat[:oid,:any])<-(V18:bat[:oid,:any])(V88:bat[:any,:any])
    V90 := calc.lng(1);	# 64 CALCint2lng (V90:lng)<-($64:int)
    V91 := calc.*(V90,100);	# 65 CALCbinaryMULlngint (V91:lng)<-(V90:lng)($66:int)
    V92 := sql.bind_dbat("sys","lineitem",0);	# 66 mvc_bind_dbat_wrap (V92:bat[:any,:any])<-($70:str)($71:str)($72:int)
    V93 := bat.reverse(V92);	# 67 BKCreverse (V93:bat[:any,:any])<-(V92:bat[:any,:any])
    V94 := algebra.kdiff(V72,V93);	# 68 ALGkdiff (V94:bat[:any,:any])<-(V72:bat[:any,:any])(V93:bat[:any,:any])
    V95 := algebra.join(V18,V94);	# 69 ALGjoin (V95:bat[:oid,:any])<-(V18:bat[:oid,:any])(V94:bat[:any,:any])
    V96 := multiplex.script("-",V91,V95);	# 70  (V96:bat[:oid,:lng])<-($77:str)(V91:lng)(V95:bat[:oid,:any])
    V97 := batcalc.*(V89,V96);	# 71 CMDbatMUL (V97:bat[:oid,:lng])<-(V89:bat[:oid,:any])(V96:bat[:oid,:lng])
    V98 := calc.lng(1);	# 72 CALCint2lng (V98:lng)<-($64:int)
    V99 := calc.*(V98,100);	# 73 CALCbinaryMULlngint (V99:lng)<-(V98:lng)($66:int)
    V100 := sql.bind("sys","lineitem","l_tax",0);	# 74 mvc_bind_wrap (V100:bat[:any,:any])<-($70:str)($71:str)($95:str)($72:int)
    V102 := sql.bind_dbat("sys","lineitem",0);	# 75 mvc_bind_dbat_wrap (V102:bat[:any,:any])<-($70:str)($71:str)($72:int)
    V103 := bat.reverse(V102);	# 76 BKCreverse (V103:bat[:any,:any])<-(V102:bat[:any,:any])
    V104 := algebra.kdiff(V100,V103);	# 77 ALGkdiff (V104:bat[:any,:any])<-(V100:bat[:any,:any])(V103:bat[:any,:any])
    V105 := algebra.join(V18,V104);	# 78 ALGjoin (V105:bat[:oid,:any])<-(V18:bat[:oid,:any])(V104:bat[:any,:any])
    V106 := multiplex.script("+",V99,V105);	# 79  (V106:bat[:oid,:lng])<-($101:str)(V99:lng)(V105:bat[:oid,:any])
    V108 := batcalc.*(V97,V106);	# 80 CMDbatMUL (V108:bat[:oid,:lng])<-(V97:bat[:oid,:lng])(V106:bat[:oid,:lng])
    V109 := aggrX3.sum(V108,V32,V34);	# 81 AX3aggrX3_sum3_lng_lng (V109:bat[:oid,:lng])<-(V108:bat[:oid,:lng])(V32:bat[:oid,:oid])(V34:bat[:oid,:oid])
    V110 := sql.bind_dbat("sys","lineitem",0);	# 82 mvc_bind_dbat_wrap (V110:bat[:any,:any])<-($105:str)($106:str)($107:int)
    V114 := bat.reverse(V110);	# 83 BKCreverse (V114:bat[:any,:any])<-(V110:bat[:any,:any])
    V115 := algebra.kdiff(V50,V114);	# 84 ALGkdiff (V115:bat[:any,:any])<-(V50:bat[:any,:any])(V114:bat[:any,:any])
    V116 := algebra.join(V18,V115);	# 85 ALGjoin (V116:bat[:oid,:any])<-(V18:bat[:oid,:any])(V115:bat[:any,:any])
    V117 := aggrX3.avg(V116,V32,V34);	# 86 AX3aggrX3_avg3_flt (V117:bat[:oid,:flt])<-(V116:bat[:oid,:any])(V32:bat[:oid,:oid])(V34:bat[:oid,:oid])
    V118 := sql.bind_dbat("sys","lineitem",0);	# 87 mvc_bind_dbat_wrap (V118:bat[:any,:any])<-($105:str)($106:str)($107:int)
    V119 := bat.reverse(V118);	# 88 BKCreverse (V119:bat[:any,:any])<-(V118:bat[:any,:any])
    V120 := algebra.kdiff(V57,V119);	# 89 ALGkdiff (V120:bat[:any,:any])<-(V57:bat[:any,:any])(V119:bat[:any,:any])
    V121 := algebra.join(V18,V120);	# 90 ALGjoin (V121:bat[:oid,:any])<-(V18:bat[:oid,:any])(V120:bat[:any,:any])
    V122 := aggrX3.avg(V121,V32,V34);	# 91 AX3aggrX3_avg3_flt (V122:bat[:oid,:flt])<-(V121:bat[:oid,:any])(V32:bat[:oid,:oid])(V34:bat[:oid,:oid])
    V124 := multiplex.script("round",V122,100);	# 92  (V124:bat[:oid,:flt])<-($118:str)(V122:bat[:oid,:flt])($119:int)
    V126 := sql.bind_dbat("sys","lineitem",0);	# 93 mvc_bind_dbat_wrap (V126:bat[:any,:any])<-($105:str)($106:str)($107:int)
    V127 := bat.reverse(V126);	# 94 BKCreverse (V127:bat[:any,:any])<-(V126:bat[:any,:any])
    V128 := algebra.kdiff(V72,V127);	# 95 ALGkdiff (V128:bat[:any,:any])<-(V72:bat[:any,:any])(V127:bat[:any,:any])
    V129 := algebra.join(V18,V128);	# 96 ALGjoin (V129:bat[:oid,:any])<-(V18:bat[:oid,:any])(V128:bat[:any,:any])
    V130 := aggrX3.avg(V129,V32,V34);	# 97 AX3aggrX3_avg3_flt (V130:bat[:oid,:flt])<-(V129:bat[:oid,:any])(V32:bat[:oid,:oid])(V34:bat[:oid,:oid])
    V131 := multiplex.script("round",V130,100);	# 98  (V131:bat[:oid,:flt])<-($118:str)(V130:bat[:oid,:flt])($119:int)
    V132 := aggrX3.count(V32,V32,V34);	# 99 AX3aggrX3_count3Nils (V132:bat[:oid,:int])<-(V32:bat[:oid,:oid])(V32:bat[:oid,:oid])(V34:bat[:oid,:oid])
    sql.column(V39,"l_returnflag","varchar",1,0);	# 100 SQLcolumn ($127:void)<-(V39:bat[:oid,:any])($128:str)($129:str)($130:int)($107:int)
    sql.column(V48,"l_linestatus","varchar",1,0);	# 101 SQLcolumn ($131:void)<-(V48:bat[:oid,:any])($132:str)($129:str)($130:int)($107:int)
    sql.column(V56,"sum_qty","bigint",0,0);	# 102 SQLcolumn ($133:void)<-(V56:bat[:oid,:flt])($134:str)($135:str)($107:int)($107:int)
    sql.column(V63,"sum_base_price","decimal",19,2);	# 103 SQLcolumn ($136:void)<-(V63:bat[:oid,:flt])($137:str)($138:str)($139:int)($140:int)
    sql.column(V85,"sum_disc_price","decimal",19,4);	# 104 SQLcolumn ($141:void)<-(V85:bat[:oid,:lng])($142:str)($138:str)($139:int)($143:int)
    sql.column(V109,"sum_charge","decimal",19,6);	# 105 SQLcolumn ($144:void)<-(V109:bat[:oid,:lng])($145:str)($138:str)($139:int)($146:int)
    sql.column(V117,"avg_qty","double",53,0);	# 106 SQLcolumn ($147:void)<-(V117:bat[:oid,:flt])($148:str)($149:str)($150:int)($151:int)
    sql.column(V124,"avg_price","double",53,0);	# 107 SQLcolumn ($152:void)<-(V124:bat[:oid,:flt])($153:str)($149:str)($150:int)($151:int)
    sql.column(V131,"avg_disc","double",53,0);	# 108 SQLcolumn ($154:void)<-(V131:bat[:oid,:flt])($155:str)($149:str)($150:int)($151:int)
    sql.column(V132,"count_order","int",0,0);	# 109 SQLcolumn ($156:void)<-(V132:bat[:oid,:int])($157:str)($158:str)($151:int)($151:int)
    sql.output(V49,V39,V48,V56,V63,V85,V109,V117,V124,V131,V132);	# 110  unknown ($159:any)<-(V49:bat[:oid,:oid])(V39:bat[:oid,:any])(V48:bat[:oid,:any])(V56:bat[:oid,:flt])(V63:bat[:oid,:flt])(V85:bat[:oid,:lng])(V109:bat[:oid,:lng])(V117:bat[:oid,:flt])(V124:bat[:oid,:flt])(V131:bat[:oid,:flt])(V132:bat[:oid,:int])
end qry1;	# 111  
#CXoptimizer Admin.qry1
function Admin.qry1():void;	# 0  (qry1:void)
    V3 := sql.bind("sys","lineitem","l_shipdate",0);	# 1 mvc_bind_wrap (V3:bat[:any,:any])<-($2:str)($3:str)($4:str)($5:int)
    V8 := sql.bind_dbat("sys","lineitem",0);	# 2 mvc_bind_dbat_wrap (V8:bat[:any,:any])<-($2:str)($3:str)($5:int)
    V9 := bat.reverse(V8);	# 3 BKCreverse (V9:bat[:any,:any])<-(V8:bat[:any,:any])
    V10 := algebra.kdiff(V3,V9);	# 4 ALGkdiff (V10:bat[:any,:any])<-(V3:bat[:any,:any])(V9:bat[:any,:any])
    V14 := algebra.uselect(V10,nil,nil);	# 5 ALGuselect (V14:bat[:any,:void])<-(V10:bat[:any,:any])($10:void)($10:void)
    V17 := algebra.tmark(V14,0@0);	# 6 ALGtmark (V17:bat[:any,:oid])<-(V14:bat[:any,:void])($12:oid)
    V18 := bat.reverse(V17);	# 7 BKCreverse (V18:bat[:oid,:any])<-(V17:bat[:any,:oid])
    V19 := sql.bind("sys","lineitem","l_returnflag",0);	# 8 mvc_bind_wrap (V19:bat[:any,:any])<-($2:str)($3:str)($15:str)($5:int)
    V23 := algebra.kdiff(V19,V9);	# 9 ALGkdiff (V23:bat[:any,:any])<-(V19:bat[:any,:any])(V9:bat[:any,:any])
    V24 := algebra.join(V18,V23);	# 10 ALGjoin (V24:bat[:oid,:any])<-(V18:bat[:oid,:any])(V23:bat[:any,:any])
    V25 := group.group(V24);	# 11 GRPgroup2 (V25:bat[:oid,:oid])<-(V24:bat[:oid,:any])
    V26 := sql.bind("sys","lineitem","l_linestatus",0);	# 12 mvc_bind_wrap (V26:bat[:any,:any])<-($2:str)($3:str)($22:str)($5:int)
    V30 := algebra.kdiff(V26,V9);	# 13 ALGkdiff (V30:bat[:any,:any])<-(V26:bat[:any,:any])(V9:bat[:any,:any])
    V31 := algebra.join(V18,V30);	# 14 ALGjoin (V31:bat[:oid,:any])<-(V18:bat[:oid,:any])(V30:bat[:any,:any])
    V32 := group.group(V25,V31);	# 15 GRPderive2 (V32:bat[:oid,:oid])<-(V25:bat[:oid,:oid])(V31:bat[:oid,:any])
    V33 := algebra.tunique(V32);	# 16 ALGtunique (V33:bat[:oid,:oid])<-(V32:bat[:oid,:oid])
    V34 := bat.mirror(V33);	# 17 BKCmirror (V34:bat[:oid,:oid])<-(V33:bat[:oid,:oid])
    V39 := algebra.join(V34,V24);	# 18 ALGjoin (V39:bat[:oid,:any])<-(V34:bat[:oid,:oid])(V24:bat[:oid,:any])
    V40 := algebra.tsort(V39);	# 19 ALGtsort (V40:bat[:oid,:any])<-(V39:bat[:oid,:any])
    V48 := algebra.join(V34,V31);	# 20 ALGjoin (V48:bat[:oid,:any])<-(V34:bat[:oid,:oid])(V31:bat[:oid,:any])
    V49 := group.refine(V40,V48);	# 21 GRPrefine (V49:bat[:oid,:oid])<-(V40:bat[:oid,:any])(V48:bat[:oid,:any])
    V50 := sql.bind("sys","lineitem","l_quantity",0);	# 22 mvc_bind_wrap (V50:bat[:any,:any])<-($37:str)($38:str)($46:str)($39:int)
    V54 := algebra.kdiff(V50,V9);	# 23 ALGkdiff (V54:bat[:any,:any])<-(V50:bat[:any,:any])(V9:bat[:any,:any])
    V55 := algebra.join(V18,V54);	# 24 ALGjoin (V55:bat[:oid,:any])<-(V18:bat[:oid,:any])(V54:bat[:any,:any])
    V56 := aggrX3.sum(V55,V32,V34);	# 25 AX3aggrX3_sum3_flt_flt (V56:bat[:oid,:flt])<-(V55:bat[:oid,:any])(V32:bat[:oid,:oid])(V34:bat[:oid,:oid])
    V57 := sql.bind("sys","lineitem","l_extendedprice",0);	# 26 mvc_bind_wrap (V57:bat[:any,:any])<-($37:str)($38:str)($53:str)($39:int)
    V61 := algebra.kdiff(V57,V9);	# 27 ALGkdiff (V61:bat[:any,:any])<-(V57:bat[:any,:any])(V9:bat[:any,:any])
    V62 := algebra.join(V18,V61);	# 28 ALGjoin (V62:bat[:oid,:any])<-(V18:bat[:oid,:any])(V61:bat[:any,:any])
    V63 := aggrX3.sum(V62,V32,V34);	# 29 AX3aggrX3_sum3_flt_flt (V63:bat[:oid,:flt])<-(V62:bat[:oid,:any])(V32:bat[:oid,:oid])(V34:bat[:oid,:oid])
    V69 := calc.lng(1);	# 30 CALCint2lng (V69:lng)<-($64:int)
    V71 := calc.*(V69,100);	# 31 CALCbinaryMULlngint (V71:lng)<-(V69:lng)($66:int)
    V72 := sql.bind("sys","lineitem","l_discount",0);	# 32 mvc_bind_wrap (V72:bat[:any,:any])<-($37:str)($38:str)($68:str)($39:int)
    V79 := algebra.kdiff(V72,V9);	# 33 ALGkdiff (V79:bat[:any,:any])<-(V72:bat[:any,:any])(V9:bat[:any,:any])
    V80 := algebra.join(V18,V79);	# 34 ALGjoin (V80:bat[:oid,:any])<-(V18:bat[:oid,:any])(V79:bat[:any,:any])
    V81 := multiplex.script("-",V71,V80);	# 35  (V81:bat[:oid,:lng])<-($77:str)(V71:lng)(V80:bat[:oid,:any])
    V83 := batcalc.*(V62,V81);	# 36 CMDbatMUL (V83:bat[:oid,:lng])<-(V62:bat[:oid,:any])(V81:bat[:oid,:lng])
    V85 := aggrX3.sum(V83,V32,V34);	# 37 AX3aggrX3_sum3_lng_lng (V85:bat[:oid,:lng])<-(V83:bat[:oid,:lng])(V32:bat[:oid,:oid])(V34:bat[:oid,:oid])
    V100 := sql.bind("sys","lineitem","l_tax",0);	# 38 mvc_bind_wrap (V100:bat[:any,:any])<-($70:str)($71:str)($95:str)($72:int)
    V104 := algebra.kdiff(V100,V9);	# 39 ALGkdiff (V104:bat[:any,:any])<-(V100:bat[:any,:any])(V9:bat[:any,:any])
    V105 := algebra.join(V18,V104);	# 40 ALGjoin (V105:bat[:oid,:any])<-(V18:bat[:oid,:any])(V104:bat[:any,:any])
    V106 := multiplex.script("+",V71,V105);	# 41  (V106:bat[:oid,:lng])<-($101:str)(V71:lng)(V105:bat[:oid,:any])
    V108 := batcalc.*(V83,V106);	# 42 CMDbatMUL (V108:bat[:oid,:lng])<-(V83:bat[:oid,:lng])(V106:bat[:oid,:lng])
    V109 := aggrX3.sum(V108,V32,V34);	# 43 AX3aggrX3_sum3_lng_lng (V109:bat[:oid,:lng])<-(V108:bat[:oid,:lng])(V32:bat[:oid,:oid])(V34:bat[:oid,:oid])
    V117 := aggrX3.avg(V55,V32,V34);	# 44 AX3aggrX3_avg3_flt (V117:bat[:oid,:flt])<-(V55:bat[:oid,:any])(V32:bat[:oid,:oid])(V34:bat[:oid,:oid])
    V122 := aggrX3.avg(V62,V32,V34);	# 45 AX3aggrX3_avg3_flt (V122:bat[:oid,:flt])<-(V62:bat[:oid,:any])(V32:bat[:oid,:oid])(V34:bat[:oid,:oid])
    V124 := multiplex.script("round",V122,100);	# 46  (V124:bat[:oid,:flt])<-($118:str)(V122:bat[:oid,:flt])($119:int)
    V130 := aggrX3.avg(V80,V32,V34);	# 47 AX3aggrX3_avg3_flt (V130:bat[:oid,:flt])<-(V80:bat[:oid,:any])(V32:bat[:oid,:oid])(V34:bat[:oid,:oid])
    V131 := multiplex.script("round",V130,100);	# 48  (V131:bat[:oid,:flt])<-($118:str)(V130:bat[:oid,:flt])($119:int)
    V132 := aggrX3.count(V32,V32,V34);	# 49 AX3aggrX3_count3Nils (V132:bat[:oid,:int])<-(V32:bat[:oid,:oid])(V32:bat[:oid,:oid])(V34:bat[:oid,:oid])
    sql.column(V39,"l_returnflag","varchar",1,0);	# 50 SQLcolumn ($127:void)<-(V39:bat[:oid,:any])($128:str)($129:str)($130:int)($107:int)
    sql.column(V48,"l_linestatus","varchar",1,0);	# 51 SQLcolumn ($131:void)<-(V48:bat[:oid,:any])($132:str)($129:str)($130:int)($107:int)
    sql.column(V56,"sum_qty","bigint",0,0);	# 52 SQLcolumn ($133:void)<-(V56:bat[:oid,:flt])($134:str)($135:str)($107:int)($107:int)
    sql.column(V63,"sum_base_price","decimal",19,2);	# 53 SQLcolumn ($136:void)<-(V63:bat[:oid,:flt])($137:str)($138:str)($139:int)($140:int)
    sql.column(V85,"sum_disc_price","decimal",19,4);	# 54 SQLcolumn ($141:void)<-(V85:bat[:oid,:lng])($142:str)($138:str)($139:int)($143:int)
    sql.column(V109,"sum_charge","decimal",19,6);	# 55 SQLcolumn ($144:void)<-(V109:bat[:oid,:lng])($145:str)($138:str)($139:int)($146:int)
    sql.column(V117,"avg_qty","double",53,0);	# 56 SQLcolumn ($147:void)<-(V117:bat[:oid,:flt])($148:str)($149:str)($150:int)($151:int)
    sql.column(V124,"avg_price","double",53,0);	# 57 SQLcolumn ($152:void)<-(V124:bat[:oid,:flt])($153:str)($149:str)($150:int)($151:int)
    sql.column(V131,"avg_disc","double",53,0);	# 58 SQLcolumn ($154:void)<-(V131:bat[:oid,:flt])($155:str)($149:str)($150:int)($151:int)
    sql.column(V132,"count_order","int",0,0);	# 59 SQLcolumn ($156:void)<-(V132:bat[:oid,:int])($157:str)($158:str)($151:int)($151:int)
    sql.output(V49,V39,V48,V56,V63,V85,V109,V117,V124,V131,V132);	# 60  unknown ($159:any)<-(V49:bat[:oid,:oid])(V39:bat[:oid,:any])(V48:bat[:oid,:any])(V56:bat[:oid,:flt])(V63:bat[:oid,:flt])(V85:bat[:oid,:lng])(V109:bat[:oid,:lng])(V117:bat[:oid,:flt])(V124:bat[:oid,:flt])(V131:bat[:oid,:flt])(V132:bat[:oid,:int])
end qry1;	# 61  
function Admin.main():int;	# 0  (main:int)
    mdb.showFunction(Admin,qry1);	# 1 MDBshowFunction3 ($6:void)<-(Admin:any)(qry1:any)
end main;	# 2  
function Admin.qry1():void;
    V3 := sql.bind("sys","lineitem","l_shipdate",0);
    V8 := sql.bind_dbat("sys","lineitem",0);
    V9 := bat.reverse(V8);
    V10 := algebra.kdiff(V3,V9);
    V14 := algebra.uselect(V10,nil,nil);
    V17 := algebra.tmark(V14,0@0);
    V18 := bat.reverse(V17);
    V19 := sql.bind("sys","lineitem","l_returnflag",0);
    V23 := algebra.kdiff(V19,V9);
    V24 := algebra.join(V18,V23);
    V25 := group.group(V24);
    V26 := sql.bind("sys","lineitem","l_linestatus",0);
    V30 := algebra.kdiff(V26,V9);
    V31 := algebra.join(V18,V30);
    V32 := group.group(V25,V31);
    V33 := algebra.tunique(V32);
    V34 := bat.mirror(V33);
    V39 := algebra.join(V34,V24);
    V40 := algebra.tsort(V39);
    V48 := algebra.join(V34,V31);
    V49 := group.refine(V40,V48);
    V50 := sql.bind("sys","lineitem","l_quantity",0);
    V54 := algebra.kdiff(V50,V9);
    V55 := algebra.join(V18,V54);
    V56 := aggrX3.sum(V55,V32,V34);
    V57 := sql.bind("sys","lineitem","l_extendedprice",0);
    V61 := algebra.kdiff(V57,V9);
    V62 := algebra.join(V18,V61);
    V63 := aggrX3.sum(V62,V32,V34);
    V69 := calc.lng(1);
    V71 := calc.*(V69,100);
    V72 := sql.bind("sys","lineitem","l_discount",0);
    V79 := algebra.kdiff(V72,V9);
    V80 := algebra.join(V18,V79);
    V81 := multiplex.script("-",V71,V80);
    V83 := batcalc.*(V62,V81);
    V85 := aggrX3.sum(V83,V32,V34);
    V100 := sql.bind("sys","lineitem","l_tax",0);
    V104 := algebra.kdiff(V100,V9);
    V105 := algebra.join(V18,V104);
    V106 := multiplex.script("+",V71,V105);
    V108 := batcalc.*(V83,V106);
    V109 := aggrX3.sum(V108,V32,V34);
    V117 := aggrX3.avg(V55,V32,V34);
    V122 := aggrX3.avg(V62,V32,V34);
    V124 := multiplex.script("round",V122,100);
    V130 := aggrX3.avg(V80,V32,V34);
    V131 := multiplex.script("round",V130,100);
    V132 := aggrX3.count(V32,V32,V34);
    sql.column(V39,"l_returnflag","varchar",1,0);
    sql.column(V48,"l_linestatus","varchar",1,0);
    sql.column(V56,"sum_qty","bigint",0,0);
    sql.column(V63,"sum_base_price","decimal",19,2);
    sql.column(V85,"sum_disc_price","decimal",19,4);
    sql.column(V109,"sum_charge","decimal",19,6);
    sql.column(V117,"avg_qty","double",53,0);
    sql.column(V124,"avg_price","double",53,0);
    sql.column(V131,"avg_disc","double",53,0);
    sql.column(V132,"count_order","int",0,0);
    sql.output(V49,V39,V48,V56,V63,V85,V109,V117,V124,V131,V132);
end qry1;
#

# 11:15:20 >  
# 11:15:20 >  Done.
# 11:15:20 >  

