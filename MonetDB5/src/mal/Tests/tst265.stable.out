stdout of test 'tst265` in directory 'src/mal` itself:


# 12:51:03 >  
# 12:51:03 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=46688 --set sql_port=58566 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst265.mal </dev/null
# 12:51:03 >  

# Monet Database Server V4.7.0
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## Grouped sums
#b:= new(:void,:int);
#setSequenceBase(b,0:oid);
#insert(b,1);
#insert(b,2);
#insert(b,3);
#insert(b,4);
#insert(b,5);
#insert(b,6);
#insert(b,7);
#insert(b,8);
#insert(b,9);
#print(b);
#
#g:= group.sum(b,3);
#print(g);
#
## and use a sliding window
#g:= group.sum(b,3,1);
#print(g);
#
function user.main():int;	# 0  (main:int)
# Grouped sums 	# 1  ($2:str)
    b := bbp.new(:void,:int);	# 2 CMDBATnew (b:bat[:void,:int])<-($4:void)($5:int)
    bat.setSequenceBase(b,0:oid);	# 3 BKCsetSequenceBase ($6:bat[:void,:int])<-(b:bat[:void,:int])($7:oid)
    bat.insert(b,1);	# 4 BKCinsert_void_bun ($8:bat[:int,:any])<-(b:bat[:void,:int])($9:int)
    bat.insert(b,2);	# 5 BKCinsert_void_bun ($10:bat[:int,:any])<-(b:bat[:void,:int])($11:int)
    bat.insert(b,3);	# 6 BKCinsert_void_bun ($12:bat[:int,:any])<-(b:bat[:void,:int])($13:int)
    bat.insert(b,4);	# 7 BKCinsert_void_bun ($14:bat[:int,:any])<-(b:bat[:void,:int])($15:int)
    bat.insert(b,5);	# 8 BKCinsert_void_bun ($16:bat[:int,:any])<-(b:bat[:void,:int])($17:int)
    bat.insert(b,6);	# 9 BKCinsert_void_bun ($18:bat[:int,:any])<-(b:bat[:void,:int])($19:int)
    bat.insert(b,7);	# 10 BKCinsert_void_bun ($20:bat[:int,:any])<-(b:bat[:void,:int])($21:int)
    bat.insert(b,8);	# 11 BKCinsert_void_bun ($22:bat[:int,:any])<-(b:bat[:void,:int])($23:int)
    bat.insert(b,9);	# 12 BKCinsert_void_bun ($24:bat[:int,:any])<-(b:bat[:void,:int])($25:int)
    io.print(b);	# 13 IOprint_val ($26:int)<-(b:bat[:void,:int])
    g := group.sum(b,3);	# 14 GRPwindowsum_int (g:bat[:void,:int])<-(b:bat[:void,:int])($13:int)
    io.print(g);	# 15 IOprint_val ($28:int)<-(g:bat[:void,:int])
# and use a sliding window 	# 16  ($30:str)
    g := group.sum(b,3,1);	# 17 GRPslidingsum_int (g:bat[:void,:int])<-(b:bat[:void,:int])($13:int)($9:int)
    io.print(g);	# 18 IOprint_val ($31:int)<-(g:bat[:void,:int])
end main;	# 19  
#-----------------#
# h	tmp_13	  # name
# void	int	  # type
#-----------------#
[ 0@0,	  1	  ]
[ 1@0,	  2	  ]
[ 2@0,	  3	  ]
[ 3@0,	  4	  ]
[ 4@0,	  5	  ]
[ 5@0,	  6	  ]
[ 6@0,	  7	  ]
[ 7@0,	  8	  ]
[ 8@0,	  9	  ]
#-----------------#
# h	tmp_14	  # name
# void	lng	  # type
#-----------------#
[ 0@0,	  6	  ]
[ 1@0,	  15	  ]
[ 2@0,	  24	  ]
#-----------------#
# h	tmp_15	  # name
# void	lng	  # type
#-----------------#
[ 0@0,	  6	  ]
[ 1@0,	  9	  ]
[ 2@0,	  12	  ]
[ 3@0,	  15	  ]
[ 4@0,	  18	  ]
[ 5@0,	  21	  ]
[ 6@0,	  24	  ]
[ 7@0,	  17	  ]

# 12:51:03 >  
# 12:51:03 >  Done.
# 12:51:03 >  

