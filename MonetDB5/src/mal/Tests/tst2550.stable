# Monet Database Server V5.0
# Copyright (c) 1993-2003, CWI. All rights reserved.
# compiled for 32biti686-pc-linux-gnu/32bit.
# config:/ufs/mk/monet_5/src/mal/Tests/tst.conf
# dbfarm:/ufs/mk/monet_5/Linux/var/MonetDB
# dbname:demo
## Stream functions seem to provide a better control structure
#
#stream random(seed:int):(noes:bit,val:int);
#	i:= seed;
#barrier L:= true;
#	i:= 125 *i;
#	i:= i % 32767;
#	return (true,i);
#	redo L;
#exit L;
#	return (false,seed);
#end;
stream Admin.random(seed:int):(noes:bit,val:int); #0  (noes:bit)(val:int)<-(seed:int)
    i := seed; #1  (i:int)<-(seed:int)
barrier L := true; #2  (L:bit)<-($6:bit) jump 7
    i := calc.*(125,i); #3 CALCbinaryMULintint (i:int)<-($7:int)(i:int)
    i := calc.%(i,32767); #4 CALCbinaryMODintint (i:int)<-(i:int)($8:int)
    return (true,i); #5  (noes:bit)(val:int)<-($6:bit)(i:int)
    redo L; #6  (L:bit) jump 2
exit L; #7  (L:bit)
    return (false,seed); #8  (noes:bit)(val:int)<-($9:bit)(seed:int)
end random; #9  
#
>