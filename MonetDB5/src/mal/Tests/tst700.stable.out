stdout of test 'tst700` in directory 'src/mal` itself:


# 08:01:28 >  
# 08:01:28 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst700.mal </dev/null
# 08:01:28 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## A few system calls
#	print('c');
#	print("hello world");
#	print(0);
#	print(1:lng);
#	print('c');
#	print(true);
#	pi := 3.147;
#	x:=1;
#	print(x);
#	print(pi);
#	printf("hello\n");
#	printf("%5d\n",0);
#	printf("%5d\n",1:lng);
#	printf("%c\n",'c');
#	printf("%-8s\n", true);
#	printf("%6.2f\n",pi);
#	printf("single line %s \n","hello");
#
function user.main():int;	# 0  (main:int)
    io.print('c');	# 1 IOprint_val ($1:int)<-($2:chr)
    io.print("hello world");	# 2 IOprint_val ($3:int)<-($4:str)
    io.print(0);	# 3 IOprint_val ($5:int)<-($6:int)
    io.print(1:lng);	# 4 IOprint_val ($7:int)<-($8:lng)
    io.print('c');	# 5 IOprint_val ($9:int)<-($2:chr)
    io.print(true);	# 6 IOprint_val ($10:int)<-($11:bit)
    pi := 3.147;	# 7  (pi:flt)<-($13:flt)
    x := 1;	# 8  (x:int)<-($15:int)
    io.print(x);	# 9 IOprint_val ($16:int)<-(x:int)
    io.print(pi);	# 10 IOprint_val ($17:int)<-(pi:flt)
    io.printf("hello\n");	# 11 IOprint_str ($18:int)<-($19:str)
    io.printf("%5d\n",0);	# 12 IOprint_formatted_int ($20:int)<-($21:str)($6:int)
    io.printf("%5d\n",1:lng);	# 13 IOprint_formatted_lng ($22:int)<-($21:str)($8:lng)
    io.printf("%c\n",'c');	# 14 IOprint_formatted_chr ($23:int)<-($24:str)($2:chr)
    io.printf("%-8s\n",true);	# 15 IOprint_formatted_bit ($25:int)<-($26:str)($11:bit)
    io.printf("%6.2f\n",pi);	# 16 IOprint_formatted_flt ($27:int)<-($28:str)(pi:flt)
    io.printf("single line %s \n","hello");	# 17 IOprint_formatted_str ($29:int)<-($30:str)($31:str)
end main;	# 18  
[ c ]
[ "hello world" ]
[ 0 ]
[ 1 ]
[ c ]
[ true ]
[ 1 ]
[ 3.14700007 ]
hello
    0
    1
c
true    
  3.15
single line hello 

# 08:01:28 >  
# 08:01:28 >  Done.
# 08:01:28 >  

