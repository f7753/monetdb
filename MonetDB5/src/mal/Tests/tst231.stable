# Monet Database Server V5.0
# Copyright (c) 1993-2004, CWI. All rights reserved.
# compiled for 32biti686-pc-linux-gnu/32bit.
# config:/ufs/mk/monet5/src/mal/Tests/tst.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB/dbfarm
# dbname:demo
# Visit http://monetdb.cwi.nl for further information.
## a test checking BAT reference counting under various situations
#	b:= new(:int,:str);
#	i:= getRefCount(b);
#	printf("refcount =%d\n",i);
#
#	insert(b,1,"bat B");
#	print(b);
#	i:= getRefCount(b);
#	printf("refcount =%d\n",i);
#
#	# referenceing through mirroring
#	b6:= mirror(b);
#	i:= getRefCount(b);
#	printf("after mirror assignment refcount =%d\n",i);
#
function Admin.main():int;	# 0  (main:int)
    b := bbp.new(:int,:str);	# 1 CMDBATnew (b:bat[:int,:str])<-($2:int)($3:str)
    i := bbp.getRefCount(b);	# 2 CMDgetBATrefcnt (i:int)<-(b:bat[:int,:str])
    io.printf("refcount =%d\n",i);	# 3 IOprint_formatted_int ($5:int)<-($6:str)(i:int)
    bat.insert(b,1,"bat B");	# 4 BKCinsert_bun ($7:void)<-(b:bat[:int,:str])($8:int)($9:str)
    io.print(b);	# 5 IOprint_val ($10:int)<-(b:bat[:int,:str])
    i := bbp.getRefCount(b);	# 6 CMDgetBATrefcnt (i:int)<-(b:bat[:int,:str])
    io.printf("refcount =%d\n",i);	# 7 IOprint_formatted_int ($11:int)<-($6:str)(i:int)
    b6 := bat.mirror(b);	# 8 BKCmirror (b6:bat[:int,:int])<-(b:bat[:int,:str])
    i := bbp.getRefCount(b);	# 9 CMDgetBATrefcnt (i:int)<-(b:bat[:int,:str])
    io.printf("after mirror assignment refcount =%d\n",i);	# 10 IOprint_formatted_int ($13:int)<-($14:str)(i:int)
end main;	# 11  
refcount =1
#-------------------------#
# h	tmp_4		  # name
# int	str		  # type
#-------------------------#
[ 1,	  "bat B"	  ]
refcount =1
after mirror assignment refcount =1
>