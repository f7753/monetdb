stdout of test 'tst4020` in directory 'src/mal` itself:


# 08:01:46 >  
# 08:01:46 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst4020.mal </dev/null
# 08:01:46 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## testing the heuristic rules
## relations r(H,T) and s(H,T)
#function qry();
#r:= new(:int,:int);
#
#sc:= copy(r);
#s:= reverse(sc);
#a:= semijoin(r,s);
#print(a);
#s:= reverse(sc);
#z:= select(s,0,2);
#print(z);
#t:= semijoin(r,s);
#z:= select(t,0,6);
#print(z);
#
#
#debugOptimizers();
#SPoptimizer(Admin,qry);
#end qry;
function Admin.qry():void;	# 0  (qry:void)
    r := bbp.new(:int,:int);	# 1 CMDBATnew (r:bat[:int,:int])<-($2:int)($3:int)
    sc := algebra.copy(r);	# 2 ALGcopy (sc:bat[:int,:int])<-(r:bat[:int,:int])
    s := bat.reverse(sc);	# 3 BKCreverse (s:bat[:int,:int])<-(sc:bat[:int,:int])
    a := algebra.semijoin(r,s);	# 4 ALGsemijoin (a:bat[:int,:int])<-(r:bat[:int,:int])(s:bat[:int,:int])
    io.print(a);	# 5 IOprint_val ($7:int)<-(a:bat[:int,:int])
    s := bat.reverse(sc);	# 6 BKCreverse (s:bat[:int,:int])<-(sc:bat[:int,:int])
    z := algebra.select(s,0,2);	# 7 ALGselect (z:bat[:int,:int])<-(s:bat[:int,:int])($9:int)($10:int)
    io.print(z);	# 8 IOprint_val ($11:int)<-(z:bat[:int,:int])
    t := algebra.semijoin(r,s);	# 9 ALGsemijoin (t:bat[:int,:int])<-(r:bat[:int,:int])(s:bat[:int,:int])
    z := algebra.select(t,0,6);	# 10 ALGselect (z:bat[:int,:int])<-(t:bat[:int,:int])($9:int)($13:int)
    io.print(z);	# 11 IOprint_val ($14:int)<-(z:bat[:int,:int])
    optimizer.setDebug();	# 12 QOTdebugOptimizers ($15:void)
    optimizer.SPoptimizer(Admin,qry);	# 13 QOTSPoptimizerCALL ($16:str)<-(Admin:any)(qry:void)
end qry;	# 14  
#

# 08:01:46 >  
# 08:01:46 >  Done.
# 08:01:46 >  

