# Monet Database Server V5.0
# Copyright (c) 1993-2004, CWI. All rights reserved.
# compiled for 32biti686-pc-linux-gnu/32bit.
# config:/ufs/mk/monet5/src/mal/Tests/tst.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB/dbfarm
# dbname:demo
## A few system calls
#	print('c');
#	print("hello world");
#	print(0);
#	print(1:lng);
#	print('c');
#	print(true);
#	pi := 3.147;
#	x:=1;
#	print(x);
#	print(pi);
#	printf("hello\n");
#	printf("%5d\n",0);
#	printf("%5d\n",1:lng);
#	printf("%c\n",'c');
#	printf("%-8s\n", true);
#	printf("%6.2f\n",pi);
#	printf("single line %s \n","hello");
#
function Admin.main():int;	# 0  (main:int)
    io.print('c');	# 1 IOprint_val ($1:int)<-($2:chr)
    io.print("hello world");	# 2 IOprint_val ($3:int)<-($4:str)
    io.print(0);	# 3 IOprint_val ($5:int)<-($6:int)
    io.print(1);	# 4 IOprint_val ($7:int)<-($8:lng)
    io.print('c');	# 5 IOprint_val ($9:int)<-($2:chr)
    io.print(true);	# 6 IOprint_val ($10:int)<-($11:bit)
    pi := 3.147;	# 7  (pi:flt)<-($13:flt)
    x := 1;	# 8  (x:int)<-($15:int)
    io.print(x);	# 9 IOprint_val ($16:int)<-(x:int)
    io.print(pi);	# 10 IOprint_val ($17:int)<-(pi:flt)
    io.printf("hello\n");	# 11 IOprint_str ($18:int)<-($19:str)
    io.printf("%5d\n",0);	# 12 IOprint_formatted_int ($20:int)<-($21:str)($6:int)
    io.printf("%5d\n",1);	# 13 IOprint_formatted_lng ($22:int)<-($21:str)($8:lng)
    io.printf("%c\n",'c');	# 14 IOprint_formatted_chr ($23:int)<-($24:str)($2:chr)
    io.printf("%-8s\n",true);	# 15 IOprint_formatted_bit ($25:int)<-($26:str)($11:bit)
    io.printf("%6.2f\n",pi);	# 16 IOprint_formatted_flt ($27:int)<-($28:str)(pi:flt)
    io.printf("single line %s \n","hello");	# 17 IOprint_formatted_str ($29:int)<-($30:str)($31:str)
end main;	# 18  
[ c ]
[ "hello world" ]
[ 0 ]
[ 1 ]
[ c ]
[ true ]
[ 1 ]
[ 3.14700007 ]
hello
    0
    1
c
true    
  3.15
single line hello 
>