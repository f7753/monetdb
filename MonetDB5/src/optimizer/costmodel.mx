@' The contents of this file are subject to the MonetDB Public
@' License Version 1.0 (the "License"); you may not use this file
@' except in compliance with the License. You may obtain a copy of
@' the License at
@' http://monetdb.cwi.nl/Legal/MonetDBLicense-1.0.html
@'
@' Software distributed under the License is distributed on an "AS
@' IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
@' implied. See the License for the specific language governing
@' rights and limitations under the License.
@'
@' The Original Code is the Monet Database System.
@'
@' The Initial Developer of the Original Code is CWI.
@' Portions created by CWI are Copyright (C) 1997-2005 CWI.
@' All Rights Reserved.

@f costmodel
@a M.L. Kersten

@* The MAL costmodel 
The cost model is geared at supporting the SQL front-end. 
As such, it attempts to predict the result size of BATs created
on the fly.
The operations taken into account are @{reverse, select, join, mark,
uselect, kdiff@}.

The cost model can be called at runtime to analyse the MAL block
in which it is embedded to predict properties of instructions to be
executed.
It is called by the SQL optimizer to prepare for more drastict code
changes.
@mal
module costmodel;

pattern recalculate(modnme:str,fcnnme:str)
address CMrecalculate
comment "recalculate the properties for the code block.";

@-
@{
@* Implementation Code

@h
#ifndef _COSTMODEL_H_
#define _COSTMODEL_H_

#include "mal.h"
#include "mal_function.h"
#include "mal_costmodel.h"
#include "mal_client.h"

#endif /* _COSTMODEL_H_ */
@-
@c
#include "costmodel.h"

str CMrecalculate(MalBlkPtr mb, MalStkPtr stk, InstrPtr pci)
{
    str     modnme= getArgValue(stk,pci,1);
    str     fcnnme= getArgValue(stk,pci,2);
    Module  scope=NULL;
    Symbol s= NULL;
    scope = findModule(getClient()->nspace,modnme);
    if( scope)
        s= findSymbolInModule(scope,fcnnme);

    if( s == NULL)
        return throwMessage("costmodel.recalculate","operation not found");
	RMcalculator(s->def);

	(void) mb; /* fool compiler */
	return MAL_SUCCEED;
}
