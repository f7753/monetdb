stdout of test 'tst4500` in directory 'src/optimizer` itself:


# 08:01:48 >  
# 08:01:48 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst4500.mal </dev/null
# 08:01:48 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## Beware this is not the correct TPC-1, but a merely a test
#include sql;
#debugOptimizers();
#CXoptimizer();
#ARoptimizer();
#DCoptimizer();
#quit();
##s14 := sql.bind("sys",  "lineitem", "l_shipdate"); #lineitem
#	myc:= bbp.bind("myc");
#	s14:bat[:void,:date] := sql.bind("sys","lineitem","l_shipdate",0);
##s16 := date("1998-12-01");
#	s16 := date("1998-12-01");
##s17 := 7776000;
#	s17 := 7776000;
##s15 := date_sub_sec_interval(s16,s17);
##s13 := s14.uselect(date(nil), s15);
#	zz:= nil:str;
#	aa_a := date(zz);
#	s13 := uselect(s14,aa_a,aa_a);
##s12 := s13.reverse();
#	s12 := reverse(s13,);
##s11 := s12.reverse().mark(oid(0)).reverse();# lineitem
#	ba_a := oid(0);
#	ca_a := reverse(s12,);
#	da_a := mark(ca_a,ba_a);
#	s11 := reverse(da_a,);
##s18 := sql.bind("sys",  "lineitem", "l_returnflag"); #lineitem
#	s18:bat[:void,:chr] := sql.bind("sys","lineitem","l_returnflag",0);
##s10 := s11.join(s18);
#	s10 := join(s11,s18);
##s9 := s10.group();
#	s9 := group(s10,);
##s20 := sql.bind("sys",  "lineitem", "l_linestatus"); #lineitem
#	s20:bat[:void,:chr] := sql.bind("sys","lineitem","l_linestatus",0);
##s19 := s11.join(s20);
#	s19 := join(s11,s20);
##s8 := s9.group(s19);
#	s8 := group(s9,s19);
##s7 := s8.tunique().mirror();
#	ea_a := tunique(s8,);
#	s7 := mirror(ea_a,);
##s6 := s7.join(s11);
#	s6 := join(s7,s11);
##s5 := s6.join(s18);
#	s5 := join(s6,s18);
##s4 := s5.reverse().sort().reverse();
#	fa_a := reverse(s5,);
#	ga_a := sort(fa_a,);
#	s4 := reverse(ga_a,);
##s22 := s7.join(s11);
#	s22 := join(s7,s11);
##s21 := s22.join(s20);
#	s21 := join(s22,s20);
##s3 := s4.CTrefine(s21);
#	s3 := refine(s4,s21);
##s25 := s11.join(s18);
#	s25 := join(s11,s18);
##s24 := s7.join(s25);
#	s24 := join(s7,s25);
##s27 := s11.join(s20);
#	s27 := join(s11,s20);
##s26 := s7.join(s27);
#	s26 := join(s7,s27);
##s31 := sql.bind("sys",  "lineitem", "l_quantity"); #lineitem
#	s31:bat[:void,:int] := sql.bind("sys","lineitem","l_quantity",0);
##s30 := s11.join(s31);
#	s30 := join(s11,s31);
##s29 := {sum}(s30, s8, s7);
#	s29 := group.sum(s30,s8);
##s35 := sql.bind("sys",  "lineitem", "l_extendedprice"); #lineitem
#	s35:bat[:void,:int] := sql.bind("sys","lineitem","l_extendedprice",0);
##s34 := s11.join(s35);
#	s34 := join(s11,s35);
##s33 := {sum}(s34, s8, s7);
#	s33 := group.sum(s34,s8);
##s39 := s11.join(s35);
#	s39 := join(s11,s35);
##s42 := 1;
#	s42 := 1;
##s41 := flt(s42);
#	s41 := flt(s42);
##s44 := sql.bind("sys",  "lineitem", "l_discount"); #lineitem
#	s44:bat[:void,:int] := sql.bind("sys","lineitem","l_discount",0);
##s43 := s11.join(s44);
#	s43 := join(s11,s44);
##s45 := [s43 ~ s41];
#	ha_a:= zipper(s43,s41);
#	s45 := ha_a;
##s40 := [-](s45,s43);
#	s40 := multiplex.tactics("-",s45,s43);
##s38 := [*](s39,s40);
#	s38 := multiplex.tactics("*",s39,s40);
##s37 := {sum}(s38, s8, s7);
#	s37 := group.sum(s38,s8);
##s50 := s11.join(s35);
#	s50 := join(s11,s35);
##s53 := 1;
#	s53 := 1;
##s52 := flt(s53);
#	s52 := flt(s53);
##s54 := s11.join(s44);
#	s54 := join(s11,s44);
##s55 := [s54 ~ s52];
#	ia_a:= zipper(s54,s52);
#	s55 := ia_a;
##s51 := [-](s55,s54);
#	s51 := multiplex.tactics("-",s55,s54);
##s49 := [*](s50,s51);
#	s49 := multiplex.tactics("*",s50,s51);
##s58 := 1;
#	s58 := 1;
##s57 := flt(s58);
#	s57 := flt(s58);
##s60 := sql.bind("sys",  "lineitem", "l_tax"); #lineitem
#	s60:bat[:void,:int] := sql.bind("sys","lineitem","l_tax",0);
##s59 := s11.join(s60);
#	s59 := join(s11,s60);
##s61 := [s59 ~ s57];
#	ja_a:= zipper(s59,s57);
#	s61 := ja_a;
##s56 := [+](s61,s59);
#	s56 := multiplex.tactics("+",s61,s59);
##s48 := [*](s49,s56);
#	s48 := multiplex.tactics("*",s49,s56);
##s47 := {sum}(s48, s8, s7);
#	s47 := group.sum(s48,s8);
##s64 := s11.join(s31);
#	s64 := join(s11,s31);
##s63 := {avg}(s64, s8, s7);
#	s63 := group.avg(s64,s8);
##s67 := s11.join(s35);
#	s67 := join(s11,s35);
##s66 := {avg}(s67, s8, s7);
#	s66 := group.avg(s67,s8);
##s70 := s11.join(s44);
#	s70 := join(s11,s44);
##s69 := {avg}(s70, s8, s7);
#	s69 := group.avg(s70,s8);
##s72 := {count}(s8, s8, s7);
##	s72 := group.count(s8,s8);
#print(s64,s67,s66,s70,s69);
#
function Admin.main():int;	# 0  (main:int)
    s14 := sql.bind("sys","lineitem","l_shipdate",0);	# 1 mvc_bind_wrap (s14:bat[:void,:date])<-($9:str)($10:str)($11:str)($12:int)
    aa_a := mtime.date("nil:str");	# 2 MTIMEdate_fromstr (aa_a:date)<-($18:str)
    s13 := algebra.uselect(s14,aa_a,aa_a);	# 3 ALGuselect (s13:bat[:void,:void])<-(s14:bat[:void,:date])(aa_a:date)(aa_a:date)
    s12 := bat.reverse(s13);	# 4 BKCreverse (s12:bat[:void,:void])<-(s13:bat[:void,:void])
    ba_a := calc.oid(0);	# 5 CALCint2oid (ba_a:oid)<-($12:int)
    ca_a := bat.reverse(s12);	# 6 BKCreverse (ca_a:bat[:void,:void])<-(s12:bat[:void,:void])
    da_a := algebra.markT(ca_a,ba_a);	# 7 ALGtmark (da_a:bat[:void,:void])<-(ca_a:bat[:void,:void])(ba_a:oid)
    s11 := bat.reverse(da_a);	# 8 BKCreverse (s11:bat[:void,:void])<-(da_a:bat[:void,:void])
    s18 := sql.bind("sys","lineitem","l_returnflag",0);	# 9 mvc_bind_wrap (s18:bat[:void,:chr])<-($9:str)($10:str)($27:str)($12:int)
    s10 := algebra.join(s11,s18);	# 10 ALGjoin (s10:bat[:void,:chr])<-(s11:bat[:void,:void])(s18:bat[:void,:chr])
    s9 := group.group(s10);	# 11 GRPgroup2 (s9:bat[:void,:oid])<-(s10:bat[:void,:chr])
    s20 := sql.bind("sys","lineitem","l_linestatus",0);	# 12 mvc_bind_wrap (s20:bat[:void,:chr])<-($9:str)($10:str)($31:str)($12:int)
    s19 := algebra.join(s11,s20);	# 13 ALGjoin (s19:bat[:void,:chr])<-(s11:bat[:void,:void])(s20:bat[:void,:chr])
    s8 := group.group(s9,s19);	# 14 GRPderive2 (s8:bat[:void,:oid])<-(s9:bat[:void,:oid])(s19:bat[:void,:chr])
    ea_a := algebra.tunique(s8);	# 15 ALGtunique (ea_a:bat[:void,:oid])<-(s8:bat[:void,:oid])
    s7 := bat.mirror(ea_a);	# 16 BKCmirror (s7:bat[:void,:void])<-(ea_a:bat[:void,:oid])
    s6 := algebra.join(s7,s11);	# 17 ALGjoin (s6:bat[:oid,:oid])<-(s7:bat[:void,:void])(s11:bat[:void,:void])
    s31 := sql.bind("sys","lineitem","l_quantity",0);	# 18 mvc_bind_wrap (s31:bat[:void,:int])<-($49:str)($50:str)($51:str)($52:int)
    s30 := algebra.join(s11,s31);	# 19 ALGjoin (s30:bat[:void,:int])<-(s11:bat[:void,:void])(s31:bat[:void,:int])
    s29 := group.sum(s30,s8);	# 20 GRPsum_int (s29:bat[:void,:int])<-(s30:bat[:void,:int])(s8:bat[:void,:oid])
    s35 := sql.bind("sys","lineitem","l_extendedprice",0);	# 21 mvc_bind_wrap (s35:bat[:void,:int])<-($49:str)($50:str)($56:str)($52:int)
    s34 := algebra.join(s11,s35);	# 22 ALGjoin (s34:bat[:void,:int])<-(s11:bat[:void,:void])(s35:bat[:void,:int])
    s33 := group.sum(s34,s8);	# 23 GRPsum_int (s33:bat[:void,:int])<-(s34:bat[:void,:int])(s8:bat[:void,:oid])
    s41 := calc.flt(1);	# 24 CALCint2flt (s41:flt)<-($61:int)
    s44 := sql.bind("sys","lineitem","l_discount",0);	# 25 mvc_bind_wrap (s44:bat[:void,:int])<-($49:str)($50:str)($64:str)($52:int)
    s43 := algebra.join(s11,s44);	# 26 ALGjoin (s43:bat[:void,:int])<-(s11:bat[:void,:void])(s44:bat[:void,:int])
    ha_a := batcalc.init(s43,s41);	# 27 CMDbatfltinit (ha_a:bat[:void,:flt])<-(s43:bat[:void,:int])(s41:flt)
    s40 := multiplex.script("-",ha_a,s43);	# 28  (s40:bat[:void,:flt])<-($69:str)(ha_a:bat[:void,:flt])(s43:bat[:void,:int])
    s38 := multiplex.script("*",s34,s40);	# 29  (s38:bat[:void,:flt])<-($71:str)(s34:bat[:void,:int])(s40:bat[:void,:flt])
    s37 := group.sum(s38,s8);	# 30 GRPsum_flt (s37:bat[:void,:flt])<-(s38:bat[:void,:flt])(s8:bat[:void,:oid])
    s60 := sql.bind("sys","lineitem","l_tax",0);	# 31 mvc_bind_wrap (s60:bat[:void,:int])<-($84:str)($85:str)($86:str)($87:int)
    s59 := algebra.join(s11,s60);	# 32 ALGjoin (s59:bat[:void,:int])<-(s11:bat[:void,:void])(s60:bat[:void,:int])
    ja_a := batcalc.init(s59,s41);	# 33 CMDbatfltinit (ja_a:bat[:void,:flt])<-(s59:bat[:void,:int])(s41:flt)
    s56 := multiplex.script("+",ja_a,s59);	# 34  (s56:bat[:void,:flt])<-($92:str)(ja_a:bat[:void,:flt])(s59:bat[:void,:int])
    s48 := batcalc.*(s38,s56);	# 35 CMDbatMUL (s48:bat[:void,:flt])<-(s38:bat[:void,:flt])(s56:bat[:void,:flt])
    s47 := group.sum(s48,s8);	# 36 GRPsum_flt (s47:bat[:void,:flt])<-(s48:bat[:void,:flt])(s8:bat[:void,:oid])
    s64 := algebra.join(s11,s31);	# 37 ALGjoin (s64:bat[:void,:int])<-(s11:bat[:void,:void])(s31:bat[:void,:int])
    s63 := group.avg(s64,s8);	# 38 GRPavg_int (s63:bat[:void,:int])<-(s64:bat[:void,:int])(s8:bat[:void,:oid])
    s67 := algebra.join(s11,s35);	# 39 ALGjoin (s67:bat[:void,:int])<-(s11:bat[:void,:void])(s35:bat[:void,:int])
    s66 := group.avg(s67,s8);	# 40 GRPavg_int (s66:bat[:void,:int])<-(s67:bat[:void,:int])(s8:bat[:void,:oid])
    s70 := algebra.join(s11,s44);	# 41 ALGjoin (s70:bat[:void,:int])<-(s11:bat[:void,:void])(s44:bat[:void,:int])
    s69 := group.avg(s70,s8);	# 42 GRPavg_int (s69:bat[:void,:int])<-(s70:bat[:void,:int])(s8:bat[:void,:oid])
    io.print(s64,s67,s66,s70,s69);	# 43 IOtable ($101:int)<-(s64:bat[:void,:int])(s67:bat[:void,:int])(s66:bat[:void,:int])(s70:bat[:void,:int])(s69:bat[:void,:int])
end main;	# 44  
!ERROR: MALexception:mvc:PARSER not initialized
#

# 08:01:48 >  
# 08:01:48 >  Done.
# 08:01:48 >  

