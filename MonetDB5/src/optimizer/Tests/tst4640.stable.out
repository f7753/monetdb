stdout of test 'tst4640` in directory 'src/optimizer` itself:


# 11:08:35 >  
# 11:08:35 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=44745 --set sql_port=56225 --set monet_prompt= --trace --dbname=mTests_src_optimizer  tst4640.mal </dev/null
# 11:08:35 >  

# Monet Database Server V4.7.1
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_optimizer
# Visit http://monetdb.cwi.nl/ for further information.
## TPCH Q1 non-optimized
#include sql;
#function qry1();
#    V3 := sql.bind("sys","lineitem","l_shipdate",0);
#    V8 := sql.bind_dbat("sys","lineitem",0);
#    V9 := bat.reverse(V8);
#    V10 := algebra.kdiff(V3,V9);
#    V14 := algebra.uselect(V10,nil,nil);
#    V17 := algebra.tmark(V14,0@0);
#    V18 := bat.reverse(V17);
#    V19 := sql.bind("sys","lineitem","l_returnflag",0);
#    V21 := sql.bind_dbat("sys","lineitem",0);
#    V22 := bat.reverse(V21);
#    V23 := algebra.kdiff(V19,V22);
#    V24 := algebra.join(V18,V23);
#    V25 := group.group(V24);
#    V26 := sql.bind("sys","lineitem","l_linestatus",0);
#    V28 := sql.bind_dbat("sys","lineitem",0);
#    V29 := bat.reverse(V28);
#    V30 := algebra.kdiff(V26,V29);
#    V31 := algebra.join(V18,V30);
#    V32 := group.group(V25,V31);
#    V33 := algebra.tunique(V32);
#    V34 := bat.mirror(V33);
#    V35 := sql.bind_dbat("sys","lineitem",0);
#    V36 := bat.reverse(V35);
#    V37 := algebra.kdiff(V19,V36);
#    V38 := algebra.join(V18,V37);
#    V39 := algebra.join(V34,V38);
#    V40 := algebra.tsort(V39);
#    V41 := sql.bind_dbat("sys","lineitem",0);
#    V45 := bat.reverse(V41);
#    V46 := algebra.kdiff(V26,V45);
#    V47 := algebra.join(V18,V46);
#    V48 := algebra.join(V34,V47);
#    V49 := group.refine(V40,V48);
#    V50 := sql.bind("sys","lineitem","l_quantity",0);
#    V52 := sql.bind_dbat("sys","lineitem",0);
#    V53 := bat.reverse(V52);
#    V54 := algebra.kdiff(V50,V53);
#    V55 := algebra.join(V18,V54);
#    V56 := aggrX3.sum(V55,V32,V34);
#    V57 := sql.bind("sys","lineitem","l_extendedprice",0);
#    V59 := sql.bind_dbat("sys","lineitem",0);
#    V60 := bat.reverse(V59);
#    V61 := algebra.kdiff(V57,V60);
#    V62 := algebra.join(V18,V61);
#    V63 := aggrX3.sum(V62,V32,V34);
#    V64 := sql.bind_dbat("sys","lineitem",0);
#    V65 := bat.reverse(V64);
#    V66 := algebra.kdiff(V57,V65);
#    V67 := algebra.join(V18,V66);
#    V69 := calc.lng(1);
#    V71 := calc.*(V69,100);
#    V72 := sql.bind("sys","lineitem","l_discount",0);
#    V74 := sql.bind_dbat("sys","lineitem",0);
#    V78 := bat.reverse(V74);
#    V79 := algebra.kdiff(V72,V78);
#    V80 := algebra.join(V18,V79);
#    V81 := multiplex.script("-",V71,V80);
#    V83 := batcalc.*(V67,V81);
#    V85 := aggrX3.sum(V83,V32,V34);
#    V86 := sql.bind_dbat("sys","lineitem",0);
#    V87 := bat.reverse(V86);
#    V88 := algebra.kdiff(V57,V87);
#    V89 := algebra.join(V18,V88);
#    V90 := calc.lng(1);
#    V91 := calc.*(V90,100);
#    V92 := sql.bind_dbat("sys","lineitem",0);
#    V93 := bat.reverse(V92);
#    V94 := algebra.kdiff(V72,V93);
#    V95 := algebra.join(V18,V94);
#    V96 := multiplex.script("-",V91,V95);
#    V97 := batcalc.*(V89,V96);
#    V98 := calc.lng(1);
#    V99 := calc.*(V98,100);
#    V100 := sql.bind("sys","lineitem","l_tax",0);
#    V102 := sql.bind_dbat("sys","lineitem",0);
#    V103 := bat.reverse(V102);
#    V104 := algebra.kdiff(V100,V103);
#    V105 := algebra.join(V18,V104);
#    V106 := multiplex.script("+",V99,V105);
#    V108 := batcalc.*(V97,V106);
#    V109 := aggrX3.sum(V108,V32,V34);
#    V110 := sql.bind_dbat("sys","lineitem",0);
#    V114 := bat.reverse(V110);
#    V115 := algebra.kdiff(V50,V114);
#    V116 := algebra.join(V18,V115);
#    V117 := aggrX3.avg(V116,V32,V34);
#    V118 := sql.bind_dbat("sys","lineitem",0);
#    V119 := bat.reverse(V118);
#    V120 := algebra.kdiff(V57,V119);
#    V121 := algebra.join(V18,V120);
#    V122 := aggrX3.avg(V121,V32,V34);
#    V124 := multiplex.script("round",V122,100);
#    V126 := sql.bind_dbat("sys","lineitem",0);
#    V127 := bat.reverse(V126);
#    V128 := algebra.kdiff(V72,V127);
#    V129 := algebra.join(V18,V128);
#    V130 := aggrX3.avg(V129,V32,V34);
#    V131 := multiplex.script("round",V130,100);
#    V132 := aggrX3.count(V32,V32,V34);
#    sql.column(V39,"l_returnflag","varchar",1,0);
#    sql.column(V48,"l_linestatus","varchar",1,0);
#    sql.column(V56,"sum_qty","bigint",0,0);
#    sql.column(V63,"sum_base_price","decimal",19,2);
#    sql.column(V85,"sum_disc_price","decimal",19,4);
#    sql.column(V109,"sum_charge","decimal",19,6);
#    sql.column(V117,"avg_qty","double",53,0);
#    sql.column(V124,"avg_price","double",53,0);
#    sql.column(V131,"avg_disc","double",53,0);
#    sql.column(V132,"count_order","int",0,0);
#    sql.output(V49,V39,V48,V56,V63,V85,V109,V117,V124,V131,V132);
#end qry1;
function user.qry1():void;	# 0  (qry1:void)
    V3 := sql.bind("sys","lineitem","l_shipdate",0);	# 1 mvc_bind_wrap (V3:any)<-($2:str)($3:str)($4:str)($5:int)
    V8 := sql.bind_dbat("sys","lineitem",0);	# 2 mvc_bind_dbat_wrap (V8:any)<-($2:str)($3:str)($5:int)
    V9 := bat.reverse(V8);	# 3 BKCreverse (V9:bat[:any,:any])<-(V8:any)
    V10 := algebra.kdiff(V3,V9);	# 4 ALGkdiff (V10:bat[:any,:any])<-(V3:any)(V9:bat[:any,:any])
    V14 := algebra.uselect(V10,nil,nil);	# 5 ALGuselect (V14:bat[:any,:void])<-(V10:bat[:any,:any])($10:void)($10:void)
    V17 := algebra.tmark(V14,0@0);	# 6  unknown (V17:bat[:any,:any])<-(V14:bat[:any,:void])($12:oid)
    V18 := bat.reverse(V17);	# 7 BKCreverse (V18:bat[:any,:any])<-(V17:bat[:any,:any])
    V19 := sql.bind("sys","lineitem","l_returnflag",0);	# 8 mvc_bind_wrap (V19:any)<-($2:str)($3:str)($15:str)($5:int)
    V21 := sql.bind_dbat("sys","lineitem",0);	# 9 mvc_bind_dbat_wrap (V21:any)<-($2:str)($3:str)($5:int)
    V22 := bat.reverse(V21);	# 10 BKCreverse (V22:bat[:any,:any])<-(V21:any)
    V23 := algebra.kdiff(V19,V22);	# 11 ALGkdiff (V23:bat[:any,:any])<-(V19:any)(V22:bat[:any,:any])
    V24 := algebra.join(V18,V23);	# 12 ALGjoin (V24:bat[:any,:any])<-(V18:bat[:any,:any])(V23:bat[:any,:any])
    V25 := group.group(V24);	# 13  unknown (V25:any)<-(V24:bat[:any,:any])
    V26 := sql.bind("sys","lineitem","l_linestatus",0);	# 14 mvc_bind_wrap (V26:any)<-($2:str)($3:str)($22:str)($5:int)
    V28 := sql.bind_dbat("sys","lineitem",0);	# 15 mvc_bind_dbat_wrap (V28:any)<-($2:str)($3:str)($5:int)
    V29 := bat.reverse(V28);	# 16 BKCreverse (V29:bat[:any,:any])<-(V28:any)
    V30 := algebra.kdiff(V26,V29);	# 17 ALGkdiff (V30:bat[:any,:any])<-(V26:any)(V29:bat[:any,:any])
    V31 := algebra.join(V18,V30);	# 18 ALGjoin (V31:bat[:any,:any])<-(V18:bat[:any,:any])(V30:bat[:any,:any])
    V32 := group.group(V25,V31);	# 19  unknown (V32:bat[:any,:any])<-(V25:any)(V31:bat[:any,:any])
    V33 := algebra.tunique(V32);	# 20 ALGtunique (V33:bat[:any,:any])<-(V32:bat[:any,:any])
    V34 := bat.mirror(V33);	# 21 BKCmirror (V34:bat[:any,:any])<-(V33:bat[:any,:any])
    V35 := sql.bind_dbat("sys","lineitem",0);	# 22 mvc_bind_dbat_wrap (V35:any)<-($2:str)($3:str)($5:int)
    V36 := bat.reverse(V35);	# 23 BKCreverse (V36:bat[:any,:any])<-(V35:any)
    V37 := algebra.kdiff(V19,V36);	# 24 ALGkdiff (V37:bat[:any,:any])<-(V19:any)(V36:bat[:any,:any])
    V38 := algebra.join(V18,V37);	# 25 ALGjoin (V38:bat[:any,:any])<-(V18:bat[:any,:any])(V37:bat[:any,:any])
    V39 := algebra.join(V34,V38);	# 26 ALGjoin (V39:bat[:any,:any])<-(V34:bat[:any,:any])(V38:bat[:any,:any])
    V40 := algebra.tsort(V39);	# 27  unknown (V40:bat[:any,:any])<-(V39:bat[:any,:any])
    V41 := sql.bind_dbat("sys","lineitem",0);	# 28 mvc_bind_dbat_wrap (V41:any)<-($37:str)($38:str)($39:int)
    V45 := bat.reverse(V41);	# 29 BKCreverse (V45:bat[:any,:any])<-(V41:any)
    V46 := algebra.kdiff(V26,V45);	# 30 ALGkdiff (V46:bat[:any,:any])<-(V26:any)(V45:bat[:any,:any])
    V47 := algebra.join(V18,V46);	# 31 ALGjoin (V47:bat[:any,:any])<-(V18:bat[:any,:any])(V46:bat[:any,:any])
    V48 := algebra.join(V34,V47);	# 32 ALGjoin (V48:bat[:any,:any])<-(V34:bat[:any,:any])(V47:bat[:any,:any])
    V49 := group.refine(V40,V48);	# 33 GRPrefine (V49:bat[:any,:oid])<-(V40:bat[:any,:any])(V48:bat[:any,:any])
    V50 := sql.bind("sys","lineitem","l_quantity",0);	# 34 mvc_bind_wrap (V50:any)<-($37:str)($38:str)($46:str)($39:int)
    V52 := sql.bind_dbat("sys","lineitem",0);	# 35 mvc_bind_dbat_wrap (V52:any)<-($37:str)($38:str)($39:int)
    V53 := bat.reverse(V52);	# 36 BKCreverse (V53:bat[:any,:any])<-(V52:any)
    V54 := algebra.kdiff(V50,V53);	# 37 ALGkdiff (V54:bat[:any,:any])<-(V50:any)(V53:bat[:any,:any])
    V55 := algebra.join(V18,V54);	# 38 ALGjoin (V55:bat[:any,:any])<-(V18:bat[:any,:any])(V54:bat[:any,:any])
    V56 := aggrX3.sum(V55,V32,V34);	# 39  unknown (V56:bat[:any,:any])<-(V55:bat[:any,:any])(V32:bat[:any,:any])(V34:bat[:any,:any])
    V57 := sql.bind("sys","lineitem","l_extendedprice",0);	# 40 mvc_bind_wrap (V57:any)<-($37:str)($38:str)($53:str)($39:int)
    V59 := sql.bind_dbat("sys","lineitem",0);	# 41 mvc_bind_dbat_wrap (V59:any)<-($37:str)($38:str)($39:int)
    V60 := bat.reverse(V59);	# 42 BKCreverse (V60:bat[:any,:any])<-(V59:any)
    V61 := algebra.kdiff(V57,V60);	# 43 ALGkdiff (V61:bat[:any,:any])<-(V57:any)(V60:bat[:any,:any])
    V62 := algebra.join(V18,V61);	# 44 ALGjoin (V62:bat[:any,:any])<-(V18:bat[:any,:any])(V61:bat[:any,:any])
    V63 := aggrX3.sum(V62,V32,V34);	# 45  unknown (V63:bat[:any,:any])<-(V62:bat[:any,:any])(V32:bat[:any,:any])(V34:bat[:any,:any])
    V64 := sql.bind_dbat("sys","lineitem",0);	# 46 mvc_bind_dbat_wrap (V64:any)<-($37:str)($38:str)($39:int)
    V65 := bat.reverse(V64);	# 47 BKCreverse (V65:bat[:any,:any])<-(V64:any)
    V66 := algebra.kdiff(V57,V65);	# 48 ALGkdiff (V66:bat[:any,:any])<-(V57:any)(V65:bat[:any,:any])
    V67 := algebra.join(V18,V66);	# 49 ALGjoin (V67:bat[:any,:any])<-(V18:bat[:any,:any])(V66:bat[:any,:any])
    V69 := calc.lng(1);	# 50 CALCint2lng (V69:lng)<-($64:int)
    V71 := calc.*(V69,100);	# 51 CALCbinaryMULlngint (V71:lng)<-(V69:lng)($66:int)
    V72 := sql.bind("sys","lineitem","l_discount",0);	# 52 mvc_bind_wrap (V72:any)<-($37:str)($38:str)($68:str)($39:int)
    V74 := sql.bind_dbat("sys","lineitem",0);	# 53 mvc_bind_dbat_wrap (V74:any)<-($70:str)($71:str)($72:int)
    V78 := bat.reverse(V74);	# 54 BKCreverse (V78:bat[:any,:any])<-(V74:any)
    V79 := algebra.kdiff(V72,V78);	# 55 ALGkdiff (V79:bat[:any,:any])<-(V72:any)(V78:bat[:any,:any])
    V80 := algebra.join(V18,V79);	# 56 ALGjoin (V80:bat[:any,:any])<-(V18:bat[:any,:any])(V79:bat[:any,:any])
    V81 := multiplex.script("calc.-",V71,V80);	# 57  (V81:bat[:any,:dbl])<-($77:str)(V71:lng)(V80:bat[:any,:any])
    V83 := batcalc.*(V67,V81);	# 58 CMDbatMUL (V83:bat[:any,:dbl])<-(V67:bat[:any,:any])(V81:bat[:any,:dbl])
    V85 := aggrX3.sum(V83,V32,V34);	# 59  unknown (V85:bat[:any,:any])<-(V83:bat[:any,:dbl])(V32:bat[:any,:any])(V34:bat[:any,:any])
    V86 := sql.bind_dbat("sys","lineitem",0);	# 60 mvc_bind_dbat_wrap (V86:any)<-($70:str)($71:str)($72:int)
    V87 := bat.reverse(V86);	# 61 BKCreverse (V87:bat[:any,:any])<-(V86:any)
    V88 := algebra.kdiff(V57,V87);	# 62 ALGkdiff (V88:bat[:any,:any])<-(V57:any)(V87:bat[:any,:any])
    V89 := algebra.join(V18,V88);	# 63 ALGjoin (V89:bat[:any,:any])<-(V18:bat[:any,:any])(V88:bat[:any,:any])
    V90 := calc.lng(1);	# 64 CALCint2lng (V90:lng)<-($64:int)
    V91 := calc.*(V90,100);	# 65 CALCbinaryMULlngint (V91:lng)<-(V90:lng)($66:int)
    V92 := sql.bind_dbat("sys","lineitem",0);	# 66 mvc_bind_dbat_wrap (V92:any)<-($70:str)($71:str)($72:int)
    V93 := bat.reverse(V92);	# 67 BKCreverse (V93:bat[:any,:any])<-(V92:any)
    V94 := algebra.kdiff(V72,V93);	# 68 ALGkdiff (V94:bat[:any,:any])<-(V72:any)(V93:bat[:any,:any])
    V95 := algebra.join(V18,V94);	# 69 ALGjoin (V95:bat[:any,:any])<-(V18:bat[:any,:any])(V94:bat[:any,:any])
    V96 := multiplex.script("calc.-",V91,V95);	# 70  (V96:bat[:any,:dbl])<-($77:str)(V91:lng)(V95:bat[:any,:any])
    V97 := batcalc.*(V89,V96);	# 71 CMDbatMUL (V97:bat[:any,:dbl])<-(V89:bat[:any,:any])(V96:bat[:any,:dbl])
    V98 := calc.lng(1);	# 72 CALCint2lng (V98:lng)<-($64:int)
    V99 := calc.*(V98,100);	# 73 CALCbinaryMULlngint (V99:lng)<-(V98:lng)($66:int)
    V100 := sql.bind("sys","lineitem","l_tax",0);	# 74 mvc_bind_wrap (V100:any)<-($70:str)($71:str)($95:str)($72:int)
    V102 := sql.bind_dbat("sys","lineitem",0);	# 75 mvc_bind_dbat_wrap (V102:any)<-($70:str)($71:str)($72:int)
    V103 := bat.reverse(V102);	# 76 BKCreverse (V103:bat[:any,:any])<-(V102:any)
    V104 := algebra.kdiff(V100,V103);	# 77 ALGkdiff (V104:bat[:any,:any])<-(V100:any)(V103:bat[:any,:any])
    V105 := algebra.join(V18,V104);	# 78 ALGjoin (V105:bat[:any,:any])<-(V18:bat[:any,:any])(V104:bat[:any,:any])
    V106 := multiplex.script("calc.+",V99,V105);	# 79  (V106:bat[:any,:dbl])<-($101:str)(V99:lng)(V105:bat[:any,:any])
    V108 := batcalc.*(V97,V106);	# 80 CMDbatMUL (V108:bat[:any,:dbl])<-(V97:bat[:any,:dbl])(V106:bat[:any,:dbl])
    V109 := aggrX3.sum(V108,V32,V34);	# 81  unknown (V109:bat[:any,:any])<-(V108:bat[:any,:dbl])(V32:bat[:any,:any])(V34:bat[:any,:any])
    V110 := sql.bind_dbat("sys","lineitem",0);	# 82 mvc_bind_dbat_wrap (V110:any)<-($105:str)($106:str)($107:int)
    V114 := bat.reverse(V110);	# 83 BKCreverse (V114:bat[:any,:any])<-(V110:any)
    V115 := algebra.kdiff(V50,V114);	# 84 ALGkdiff (V115:bat[:any,:any])<-(V50:any)(V114:bat[:any,:any])
    V116 := algebra.join(V18,V115);	# 85 ALGjoin (V116:bat[:any,:any])<-(V18:bat[:any,:any])(V115:bat[:any,:any])
    V117 := aggrX3.avg(V116,V32,V34);	# 86  unknown (V117:bat[:any,:any])<-(V116:bat[:any,:any])(V32:bat[:any,:any])(V34:bat[:any,:any])
    V118 := sql.bind_dbat("sys","lineitem",0);	# 87 mvc_bind_dbat_wrap (V118:any)<-($105:str)($106:str)($107:int)
    V119 := bat.reverse(V118);	# 88 BKCreverse (V119:bat[:any,:any])<-(V118:any)
    V120 := algebra.kdiff(V57,V119);	# 89 ALGkdiff (V120:bat[:any,:any])<-(V57:any)(V119:bat[:any,:any])
    V121 := algebra.join(V18,V120);	# 90 ALGjoin (V121:bat[:any,:any])<-(V18:bat[:any,:any])(V120:bat[:any,:any])
    V122 := aggrX3.avg(V121,V32,V34);	# 91  unknown (V122:any)<-(V121:bat[:any,:any])(V32:bat[:any,:any])(V34:bat[:any,:any])
    V124 := multiplex.script("calc.round",V122,100);	# 92  unknown (V124:bat[:any,:any])<-($118:str)(V122:any)($119:int)
    V126 := sql.bind_dbat("sys","lineitem",0);	# 93 mvc_bind_dbat_wrap (V126:any)<-($105:str)($106:str)($107:int)
    V127 := bat.reverse(V126);	# 94 BKCreverse (V127:bat[:any,:any])<-(V126:any)
    V128 := algebra.kdiff(V72,V127);	# 95 ALGkdiff (V128:bat[:any,:any])<-(V72:any)(V127:bat[:any,:any])
    V129 := algebra.join(V18,V128);	# 96 ALGjoin (V129:bat[:any,:any])<-(V18:bat[:any,:any])(V128:bat[:any,:any])
    V130 := aggrX3.avg(V129,V32,V34);	# 97  unknown (V130:any)<-(V129:bat[:any,:any])(V32:bat[:any,:any])(V34:bat[:any,:any])
    V131 := multiplex.script("calc.round",V130,100);	# 98  unknown (V131:bat[:any,:any])<-($118:str)(V130:any)($119:int)
    V132 := aggrX3.count(V32,V32,V34);	# 99  unknown (V132:bat[:any,:any])<-(V32:bat[:any,:any])(V32:bat[:any,:any])(V34:bat[:any,:any])
    sql.column(V39,"l_returnflag","varchar",1,0);	# 100 SQLcolumn ($127:void)<-(V39:bat[:any,:any])($128:str)($129:str)($130:int)($107:int)
    sql.column(V48,"l_linestatus","varchar",1,0);	# 101 SQLcolumn ($131:void)<-(V48:bat[:any,:any])($132:str)($129:str)($130:int)($107:int)
    sql.column(V56,"sum_qty","bigint",0,0);	# 102 SQLcolumn ($133:void)<-(V56:bat[:any,:any])($134:str)($135:str)($107:int)($107:int)
    sql.column(V63,"sum_base_price","decimal",19,2);	# 103 SQLcolumn ($136:void)<-(V63:bat[:any,:any])($137:str)($138:str)($139:int)($140:int)
    sql.column(V85,"sum_disc_price","decimal",19,4);	# 104 SQLcolumn ($141:void)<-(V85:bat[:any,:any])($142:str)($138:str)($139:int)($143:int)
    sql.column(V109,"sum_charge","decimal",19,6);	# 105 SQLcolumn ($144:void)<-(V109:bat[:any,:any])($145:str)($138:str)($139:int)($146:int)
    sql.column(V117,"avg_qty","double",53,0);	# 106 SQLcolumn ($147:void)<-(V117:bat[:any,:any])($148:str)($149:str)($150:int)($151:int)
    sql.column(V124,"avg_price","double",53,0);	# 107 SQLcolumn ($152:void)<-(V124:bat[:any,:any])($153:str)($149:str)($150:int)($151:int)
    sql.column(V131,"avg_disc","double",53,0);	# 108 SQLcolumn ($154:void)<-(V131:bat[:any,:any])($155:str)($149:str)($150:int)($151:int)
    sql.column(V132,"count_order","int",0,0);	# 109 SQLcolumn ($156:void)<-(V132:bat[:any,:any])($157:str)($158:str)($151:int)($151:int)
    sql.output(V49,V39,V48,V56,V63,V85,V109,V117,V124,V131,V132);	# 110  unknown ($159:any)<-(V49:bat[:any,:oid])(V39:bat[:any,:any])(V48:bat[:any,:any])(V56:bat[:any,:any])(V63:bat[:any,:any])(V85:bat[:any,:any])(V109:bat[:any,:any])(V117:bat[:any,:any])(V124:bat[:any,:any])(V131:bat[:any,:any])(V132:bat[:any,:any])
end qry1;	# 111  
!ERROR: 'algebra.tmark' undefined in user.qry1[6]
!ERROR: 'group.group' undefined in user.qry1[13]
!ERROR: 'group.group' undefined in user.qry1[19]
!ERROR: 'algebra.tsort' undefined in user.qry1[27]
!ERROR: 'aggrX3.sum' undefined in user.qry1[39]
!ERROR: 'aggrX3.sum' undefined in user.qry1[45]
!ERROR: 'aggrX3.sum' undefined in user.qry1[59]
!ERROR: 'aggrX3.sum' undefined in user.qry1[81]
!ERROR: 'aggrX3.avg' undefined in user.qry1[86]
!ERROR: 'aggrX3.avg' undefined in user.qry1[91]
!ERROR: multiplexType:script[92]: at least one BAT argument required
!ERROR: 'aggrX3.avg' undefined in user.qry1[97]
!ERROR: multiplexType:script[98]: at least one BAT argument required
!ERROR: 'aggrX3.count' undefined in user.qry1[99]
!ERROR: 'sql.output' undefined in user.qry1[110]
#
#optimizer.setDebug();
#optimizer.aliasRemoval("Admin","qry1");
#optimizer.garbageCollector("Admin","qry1");
#showFunction("Admin","qry1");
#
!ERROR: 'algebra.tmark' undefined in user.qry1[6]
!ERROR: 'group.group' undefined in user.qry1[13]
!ERROR: 'group.group' undefined in user.qry1[19]
!ERROR: 'algebra.tsort' undefined in user.qry1[27]
!ERROR: 'aggrX3.sum' undefined in user.qry1[39]
!ERROR: 'aggrX3.sum' undefined in user.qry1[45]
!ERROR: 'aggrX3.sum' undefined in user.qry1[59]
!ERROR: 'aggrX3.sum' undefined in user.qry1[81]
!ERROR: 'aggrX3.avg' undefined in user.qry1[86]
!ERROR: 'aggrX3.avg' undefined in user.qry1[91]
!ERROR: multiplexType:script[92]: at least one BAT argument required
!ERROR: 'aggrX3.avg' undefined in user.qry1[97]
!ERROR: multiplexType:script[98]: at least one BAT argument required
!ERROR: 'aggrX3.count' undefined in user.qry1[99]
!ERROR: 'sql.output' undefined in user.qry1[110]
Optimizer aliasRemoval failed
function user.qry1():void;	# 0  (qry1:void)
    V3 := sql.bind("sys","lineitem","l_shipdate",0);	# 1 mvc_bind_wrap (V3:any)<-($2:str)($3:str)($4:str)($5:int)
    V8 := sql.bind_dbat("sys","lineitem",0);	# 2 mvc_bind_dbat_wrap (V8:any)<-($2:str)($3:str)($5:int)
    V9 := bat.reverse(V8);	# 3 BKCreverse (V9:bat[:any,:any])<-(V8:any)
    V10 := algebra.kdiff(V3,V9);	# 4 ALGkdiff (V10:bat[:any,:any])<-(V3:any)(V9:bat[:any,:any])
    V14 := algebra.uselect(V10,nil,nil);	# 5 ALGuselect (V14:bat[:any,:void])<-(V10:bat[:any,:any])($10:void)($10:void)
    V17 := algebra.tmark(V14,0@0);	# 6  unknown (V17:bat[:any,:any])<-(V14:bat[:any,:void])($12:oid)
    V18 := bat.reverse(V17);	# 7 BKCreverse (V18:bat[:any,:any])<-(V17:bat[:any,:any])
    V19 := sql.bind("sys","lineitem","l_returnflag",0);	# 8 mvc_bind_wrap (V19:any)<-($2:str)($3:str)($15:str)($5:int)
    V21 := sql.bind_dbat("sys","lineitem",0);	# 9 mvc_bind_dbat_wrap (V21:any)<-($2:str)($3:str)($5:int)
    V22 := bat.reverse(V21);	# 10 BKCreverse (V22:bat[:any,:any])<-(V21:any)
    V23 := algebra.kdiff(V19,V22);	# 11 ALGkdiff (V23:bat[:any,:any])<-(V19:any)(V22:bat[:any,:any])
    V24 := algebra.join(V18,V23);	# 12 ALGjoin (V24:bat[:any,:any])<-(V18:bat[:any,:any])(V23:bat[:any,:any])
    V25 := group.group(V24);	# 13  unknown (V25:any)<-(V24:bat[:any,:any])
    V26 := sql.bind("sys","lineitem","l_linestatus",0);	# 14 mvc_bind_wrap (V26:any)<-($2:str)($3:str)($22:str)($5:int)
    V28 := sql.bind_dbat("sys","lineitem",0);	# 15 mvc_bind_dbat_wrap (V28:any)<-($2:str)($3:str)($5:int)
    V29 := bat.reverse(V28);	# 16 BKCreverse (V29:bat[:any,:any])<-(V28:any)
    V30 := algebra.kdiff(V26,V29);	# 17 ALGkdiff (V30:bat[:any,:any])<-(V26:any)(V29:bat[:any,:any])
    V31 := algebra.join(V18,V30);	# 18 ALGjoin (V31:bat[:any,:any])<-(V18:bat[:any,:any])(V30:bat[:any,:any])
    V32 := group.group(V25,V31);	# 19  unknown (V32:bat[:any,:any])<-(V25:any)(V31:bat[:any,:any])
    V33 := algebra.tunique(V32);	# 20 ALGtunique (V33:bat[:any,:any])<-(V32:bat[:any,:any])
    V34 := bat.mirror(V33);	# 21 BKCmirror (V34:bat[:any,:any])<-(V33:bat[:any,:any])
    V35 := sql.bind_dbat("sys","lineitem",0);	# 22 mvc_bind_dbat_wrap (V35:any)<-($2:str)($3:str)($5:int)
    V36 := bat.reverse(V35);	# 23 BKCreverse (V36:bat[:any,:any])<-(V35:any)
    V37 := algebra.kdiff(V19,V36);	# 24 ALGkdiff (V37:bat[:any,:any])<-(V19:any)(V36:bat[:any,:any])
    V38 := algebra.join(V18,V37);	# 25 ALGjoin (V38:bat[:any,:any])<-(V18:bat[:any,:any])(V37:bat[:any,:any])
    V39 := algebra.join(V34,V38);	# 26 ALGjoin (V39:bat[:any,:any])<-(V34:bat[:any,:any])(V38:bat[:any,:any])
    V40 := algebra.tsort(V39);	# 27  unknown (V40:bat[:any,:any])<-(V39:bat[:any,:any])
    V41 := sql.bind_dbat("sys","lineitem",0);	# 28 mvc_bind_dbat_wrap (V41:any)<-($37:str)($38:str)($39:int)
    V45 := bat.reverse(V41);	# 29 BKCreverse (V45:bat[:any,:any])<-(V41:any)
    V46 := algebra.kdiff(V26,V45);	# 30 ALGkdiff (V46:bat[:any,:any])<-(V26:any)(V45:bat[:any,:any])
    V47 := algebra.join(V18,V46);	# 31 ALGjoin (V47:bat[:any,:any])<-(V18:bat[:any,:any])(V46:bat[:any,:any])
    V48 := algebra.join(V34,V47);	# 32 ALGjoin (V48:bat[:any,:any])<-(V34:bat[:any,:any])(V47:bat[:any,:any])
    V49 := group.refine(V40,V48);	# 33 GRPrefine (V49:bat[:any,:oid])<-(V40:bat[:any,:any])(V48:bat[:any,:any])
    V50 := sql.bind("sys","lineitem","l_quantity",0);	# 34 mvc_bind_wrap (V50:any)<-($37:str)($38:str)($46:str)($39:int)
    V52 := sql.bind_dbat("sys","lineitem",0);	# 35 mvc_bind_dbat_wrap (V52:any)<-($37:str)($38:str)($39:int)
    V53 := bat.reverse(V52);	# 36 BKCreverse (V53:bat[:any,:any])<-(V52:any)
    V54 := algebra.kdiff(V50,V53);	# 37 ALGkdiff (V54:bat[:any,:any])<-(V50:any)(V53:bat[:any,:any])
    V55 := algebra.join(V18,V54);	# 38 ALGjoin (V55:bat[:any,:any])<-(V18:bat[:any,:any])(V54:bat[:any,:any])
    V56 := aggrX3.sum(V55,V32,V34);	# 39  unknown (V56:bat[:any,:any])<-(V55:bat[:any,:any])(V32:bat[:any,:any])(V34:bat[:any,:any])
    V57 := sql.bind("sys","lineitem","l_extendedprice",0);	# 40 mvc_bind_wrap (V57:any)<-($37:str)($38:str)($53:str)($39:int)
    V59 := sql.bind_dbat("sys","lineitem",0);	# 41 mvc_bind_dbat_wrap (V59:any)<-($37:str)($38:str)($39:int)
    V60 := bat.reverse(V59);	# 42 BKCreverse (V60:bat[:any,:any])<-(V59:any)
    V61 := algebra.kdiff(V57,V60);	# 43 ALGkdiff (V61:bat[:any,:any])<-(V57:any)(V60:bat[:any,:any])
    V62 := algebra.join(V18,V61);	# 44 ALGjoin (V62:bat[:any,:any])<-(V18:bat[:any,:any])(V61:bat[:any,:any])
    V63 := aggrX3.sum(V62,V32,V34);	# 45  unknown (V63:bat[:any,:any])<-(V62:bat[:any,:any])(V32:bat[:any,:any])(V34:bat[:any,:any])
    V64 := sql.bind_dbat("sys","lineitem",0);	# 46 mvc_bind_dbat_wrap (V64:any)<-($37:str)($38:str)($39:int)
    V65 := bat.reverse(V64);	# 47 BKCreverse (V65:bat[:any,:any])<-(V64:any)
    V66 := algebra.kdiff(V57,V65);	# 48 ALGkdiff (V66:bat[:any,:any])<-(V57:any)(V65:bat[:any,:any])
    V67 := algebra.join(V18,V66);	# 49 ALGjoin (V67:bat[:any,:any])<-(V18:bat[:any,:any])(V66:bat[:any,:any])
    V69 := calc.lng(1);	# 50 CALCint2lng (V69:lng)<-($64:int)
    V71 := calc.*(V69,100);	# 51 CALCbinaryMULlngint (V71:lng)<-(V69:lng)($66:int)
    V72 := sql.bind("sys","lineitem","l_discount",0);	# 52 mvc_bind_wrap (V72:any)<-($37:str)($38:str)($68:str)($39:int)
    V74 := sql.bind_dbat("sys","lineitem",0);	# 53 mvc_bind_dbat_wrap (V74:any)<-($70:str)($71:str)($72:int)
    V78 := bat.reverse(V74);	# 54 BKCreverse (V78:bat[:any,:any])<-(V74:any)
    V79 := algebra.kdiff(V72,V78);	# 55 ALGkdiff (V79:bat[:any,:any])<-(V72:any)(V78:bat[:any,:any])
    V80 := algebra.join(V18,V79);	# 56 ALGjoin (V80:bat[:any,:any])<-(V18:bat[:any,:any])(V79:bat[:any,:any])
    V81 := multiplex.script("calc.-",V71,V80);	# 57  (V81:bat[:any,:dbl])<-($77:str)(V71:lng)(V80:bat[:any,:any])
    V83 := batcalc.*(V67,V81);	# 58 CMDbatMUL (V83:bat[:any,:dbl])<-(V67:bat[:any,:any])(V81:bat[:any,:dbl])
    V85 := aggrX3.sum(V83,V32,V34);	# 59  unknown (V85:bat[:any,:any])<-(V83:bat[:any,:dbl])(V32:bat[:any,:any])(V34:bat[:any,:any])
    V86 := sql.bind_dbat("sys","lineitem",0);	# 60 mvc_bind_dbat_wrap (V86:any)<-($70:str)($71:str)($72:int)
    V87 := bat.reverse(V86);	# 61 BKCreverse (V87:bat[:any,:any])<-(V86:any)
    V88 := algebra.kdiff(V57,V87);	# 62 ALGkdiff (V88:bat[:any,:any])<-(V57:any)(V87:bat[:any,:any])
    V89 := algebra.join(V18,V88);	# 63 ALGjoin (V89:bat[:any,:any])<-(V18:bat[:any,:any])(V88:bat[:any,:any])
    V90 := calc.lng(1);	# 64 CALCint2lng (V90:lng)<-($64:int)
    V91 := calc.*(V90,100);	# 65 CALCbinaryMULlngint (V91:lng)<-(V90:lng)($66:int)
    V92 := sql.bind_dbat("sys","lineitem",0);	# 66 mvc_bind_dbat_wrap (V92:any)<-($70:str)($71:str)($72:int)
    V93 := bat.reverse(V92);	# 67 BKCreverse (V93:bat[:any,:any])<-(V92:any)
    V94 := algebra.kdiff(V72,V93);	# 68 ALGkdiff (V94:bat[:any,:any])<-(V72:any)(V93:bat[:any,:any])
    V95 := algebra.join(V18,V94);	# 69 ALGjoin (V95:bat[:any,:any])<-(V18:bat[:any,:any])(V94:bat[:any,:any])
    V96 := multiplex.script("calc.-",V91,V95);	# 70  (V96:bat[:any,:dbl])<-($77:str)(V91:lng)(V95:bat[:any,:any])
    V97 := batcalc.*(V89,V96);	# 71 CMDbatMUL (V97:bat[:any,:dbl])<-(V89:bat[:any,:any])(V96:bat[:any,:dbl])
    V98 := calc.lng(1);	# 72 CALCint2lng (V98:lng)<-($64:int)
    V99 := calc.*(V98,100);	# 73 CALCbinaryMULlngint (V99:lng)<-(V98:lng)($66:int)
    V100 := sql.bind("sys","lineitem","l_tax",0);	# 74 mvc_bind_wrap (V100:any)<-($70:str)($71:str)($95:str)($72:int)
    V102 := sql.bind_dbat("sys","lineitem",0);	# 75 mvc_bind_dbat_wrap (V102:any)<-($70:str)($71:str)($72:int)
    V103 := bat.reverse(V102);	# 76 BKCreverse (V103:bat[:any,:any])<-(V102:any)
    V104 := algebra.kdiff(V100,V103);	# 77 ALGkdiff (V104:bat[:any,:any])<-(V100:any)(V103:bat[:any,:any])
    V105 := algebra.join(V18,V104);	# 78 ALGjoin (V105:bat[:any,:any])<-(V18:bat[:any,:any])(V104:bat[:any,:any])
    V106 := multiplex.script("calc.+",V99,V105);	# 79  (V106:bat[:any,:dbl])<-($101:str)(V99:lng)(V105:bat[:any,:any])
    V108 := batcalc.*(V97,V106);	# 80 CMDbatMUL (V108:bat[:any,:dbl])<-(V97:bat[:any,:dbl])(V106:bat[:any,:dbl])
    V109 := aggrX3.sum(V108,V32,V34);	# 81  unknown (V109:bat[:any,:any])<-(V108:bat[:any,:dbl])(V32:bat[:any,:any])(V34:bat[:any,:any])
    V110 := sql.bind_dbat("sys","lineitem",0);	# 82 mvc_bind_dbat_wrap (V110:any)<-($105:str)($106:str)($107:int)
    V114 := bat.reverse(V110);	# 83 BKCreverse (V114:bat[:any,:any])<-(V110:any)
    V115 := algebra.kdiff(V50,V114);	# 84 ALGkdiff (V115:bat[:any,:any])<-(V50:any)(V114:bat[:any,:any])
    V116 := algebra.join(V18,V115);	# 85 ALGjoin (V116:bat[:any,:any])<-(V18:bat[:any,:any])(V115:bat[:any,:any])
    V117 := aggrX3.avg(V116,V32,V34);	# 86  unknown (V117:bat[:any,:any])<-(V116:bat[:any,:any])(V32:bat[:any,:any])(V34:bat[:any,:any])
    V118 := sql.bind_dbat("sys","lineitem",0);	# 87 mvc_bind_dbat_wrap (V118:any)<-($105:str)($106:str)($107:int)
    V119 := bat.reverse(V118);	# 88 BKCreverse (V119:bat[:any,:any])<-(V118:any)
    V120 := algebra.kdiff(V57,V119);	# 89 ALGkdiff (V120:bat[:any,:any])<-(V57:any)(V119:bat[:any,:any])
    V121 := algebra.join(V18,V120);	# 90 ALGjoin (V121:bat[:any,:any])<-(V18:bat[:any,:any])(V120:bat[:any,:any])
    V122 := aggrX3.avg(V121,V32,V34);	# 91  unknown (V122:any)<-(V121:bat[:any,:any])(V32:bat[:any,:any])(V34:bat[:any,:any])
    V124 := multiplex.script("calc.round",V122,100);	# 92  unknown (V124:bat[:any,:any])<-($118:str)(V122:any)($119:int)
    V126 := sql.bind_dbat("sys","lineitem",0);	# 93 mvc_bind_dbat_wrap (V126:any)<-($105:str)($106:str)($107:int)
    V127 := bat.reverse(V126);	# 94 BKCreverse (V127:bat[:any,:any])<-(V126:any)
    V128 := algebra.kdiff(V72,V127);	# 95 ALGkdiff (V128:bat[:any,:any])<-(V72:any)(V127:bat[:any,:any])
    V129 := algebra.join(V18,V128);	# 96 ALGjoin (V129:bat[:any,:any])<-(V18:bat[:any,:any])(V128:bat[:any,:any])
    V130 := aggrX3.avg(V129,V32,V34);	# 97  unknown (V130:any)<-(V129:bat[:any,:any])(V32:bat[:any,:any])(V34:bat[:any,:any])
    V131 := multiplex.script("calc.round",V130,100);	# 98  unknown (V131:bat[:any,:any])<-($118:str)(V130:any)($119:int)
    V132 := aggrX3.count(V32,V32,V34);	# 99  unknown (V132:bat[:any,:any])<-(V32:bat[:any,:any])(V32:bat[:any,:any])(V34:bat[:any,:any])
    sql.column(V39,"l_returnflag","varchar",1,0);	# 100 SQLcolumn ($127:void)<-(V39:bat[:any,:any])($128:str)($129:str)($130:int)($107:int)
    sql.column(V48,"l_linestatus","varchar",1,0);	# 101 SQLcolumn ($131:void)<-(V48:bat[:any,:any])($132:str)($129:str)($130:int)($107:int)
    sql.column(V56,"sum_qty","bigint",0,0);	# 102 SQLcolumn ($133:void)<-(V56:bat[:any,:any])($134:str)($135:str)($107:int)($107:int)
    sql.column(V63,"sum_base_price","decimal",19,2);	# 103 SQLcolumn ($136:void)<-(V63:bat[:any,:any])($137:str)($138:str)($139:int)($140:int)
    sql.column(V85,"sum_disc_price","decimal",19,4);	# 104 SQLcolumn ($141:void)<-(V85:bat[:any,:any])($142:str)($138:str)($139:int)($143:int)
    sql.column(V109,"sum_charge","decimal",19,6);	# 105 SQLcolumn ($144:void)<-(V109:bat[:any,:any])($145:str)($138:str)($139:int)($146:int)
    sql.column(V117,"avg_qty","double",53,0);	# 106 SQLcolumn ($147:void)<-(V117:bat[:any,:any])($148:str)($149:str)($150:int)($151:int)
    sql.column(V124,"avg_price","double",53,0);	# 107 SQLcolumn ($152:void)<-(V124:bat[:any,:any])($153:str)($149:str)($150:int)($151:int)
    sql.column(V131,"avg_disc","double",53,0);	# 108 SQLcolumn ($154:void)<-(V131:bat[:any,:any])($155:str)($149:str)($150:int)($151:int)
    sql.column(V132,"count_order","int",0,0);	# 109 SQLcolumn ($156:void)<-(V132:bat[:any,:any])($157:str)($158:str)($151:int)($151:int)
    sql.output(V49,V39,V48,V56,V63,V85,V109,V117,V124,V131,V132);	# 110  unknown ($159:any)<-(V49:bat[:any,:oid])(V39:bat[:any,:any])(V48:bat[:any,:any])(V56:bat[:any,:any])(V63:bat[:any,:any])(V85:bat[:any,:any])(V109:bat[:any,:any])(V117:bat[:any,:any])(V124:bat[:any,:any])(V131:bat[:any,:any])(V132:bat[:any,:any])
end qry1;	# 111  
!ERROR: 'algebra.tmark' undefined in user.qry1[6]
!ERROR: 'group.group' undefined in user.qry1[13]
!ERROR: 'group.group' undefined in user.qry1[19]
!ERROR: 'algebra.tsort' undefined in user.qry1[27]
!ERROR: 'aggrX3.sum' undefined in user.qry1[39]
!ERROR: 'aggrX3.sum' undefined in user.qry1[45]
!ERROR: 'aggrX3.sum' undefined in user.qry1[59]
!ERROR: 'aggrX3.sum' undefined in user.qry1[81]
!ERROR: 'aggrX3.avg' undefined in user.qry1[86]
!ERROR: 'aggrX3.avg' undefined in user.qry1[91]
!ERROR: multiplexType:script[92]: at least one BAT argument required
!ERROR: 'aggrX3.avg' undefined in user.qry1[97]
!ERROR: multiplexType:script[98]: at least one BAT argument required
!ERROR: 'aggrX3.count' undefined in user.qry1[99]
!ERROR: 'sql.output' undefined in user.qry1[110]
Optimizer aliasRemoval optimizer failed
function user.qry1():void;	# 0  (qry1:void)
    V3 := sql.bind("sys","lineitem","l_shipdate",0);	# 1 mvc_bind_wrap (V3:any)<-($2:str)($3:str)($4:str)($5:int)
    V8 := sql.bind_dbat("sys","lineitem",0);	# 2 mvc_bind_dbat_wrap (V8:any)<-($2:str)($3:str)($5:int)
    V9 := bat.reverse(V8);	# 3 BKCreverse (V9:bat[:any,:any])<-(V8:any)
    V10 := algebra.kdiff(V3,V9);	# 4 ALGkdiff (V10:bat[:any,:any])<-(V3:any)(V9:bat[:any,:any])
    V14 := algebra.uselect(V10,nil,nil);	# 5 ALGuselect (V14:bat[:any,:void])<-(V10:bat[:any,:any])($10:void)($10:void)
    V17 := algebra.tmark(V14,0@0);	# 6  unknown (V17:bat[:any,:any])<-(V14:bat[:any,:void])($12:oid)
    V18 := bat.reverse(V17);	# 7 BKCreverse (V18:bat[:any,:any])<-(V17:bat[:any,:any])
    V19 := sql.bind("sys","lineitem","l_returnflag",0);	# 8 mvc_bind_wrap (V19:any)<-($2:str)($3:str)($15:str)($5:int)
    V21 := sql.bind_dbat("sys","lineitem",0);	# 9 mvc_bind_dbat_wrap (V21:any)<-($2:str)($3:str)($5:int)
    V22 := bat.reverse(V21);	# 10 BKCreverse (V22:bat[:any,:any])<-(V21:any)
    V23 := algebra.kdiff(V19,V22);	# 11 ALGkdiff (V23:bat[:any,:any])<-(V19:any)(V22:bat[:any,:any])
    V24 := algebra.join(V18,V23);	# 12 ALGjoin (V24:bat[:any,:any])<-(V18:bat[:any,:any])(V23:bat[:any,:any])
    V25 := group.group(V24);	# 13  unknown (V25:any)<-(V24:bat[:any,:any])
    V26 := sql.bind("sys","lineitem","l_linestatus",0);	# 14 mvc_bind_wrap (V26:any)<-($2:str)($3:str)($22:str)($5:int)
    V28 := sql.bind_dbat("sys","lineitem",0);	# 15 mvc_bind_dbat_wrap (V28:any)<-($2:str)($3:str)($5:int)
    V29 := bat.reverse(V28);	# 16 BKCreverse (V29:bat[:any,:any])<-(V28:any)
    V30 := algebra.kdiff(V26,V29);	# 17 ALGkdiff (V30:bat[:any,:any])<-(V26:any)(V29:bat[:any,:any])
    V31 := algebra.join(V18,V30);	# 18 ALGjoin (V31:bat[:any,:any])<-(V18:bat[:any,:any])(V30:bat[:any,:any])
    V32 := group.group(V25,V31);	# 19  unknown (V32:bat[:any,:any])<-(V25:any)(V31:bat[:any,:any])
    V33 := algebra.tunique(V32);	# 20 ALGtunique (V33:bat[:any,:any])<-(V32:bat[:any,:any])
    V34 := bat.mirror(V33);	# 21 BKCmirror (V34:bat[:any,:any])<-(V33:bat[:any,:any])
    V35 := sql.bind_dbat("sys","lineitem",0);	# 22 mvc_bind_dbat_wrap (V35:any)<-($2:str)($3:str)($5:int)
    V36 := bat.reverse(V35);	# 23 BKCreverse (V36:bat[:any,:any])<-(V35:any)
    V37 := algebra.kdiff(V19,V36);	# 24 ALGkdiff (V37:bat[:any,:any])<-(V19:any)(V36:bat[:any,:any])
    V38 := algebra.join(V18,V37);	# 25 ALGjoin (V38:bat[:any,:any])<-(V18:bat[:any,:any])(V37:bat[:any,:any])
    V39 := algebra.join(V34,V38);	# 26 ALGjoin (V39:bat[:any,:any])<-(V34:bat[:any,:any])(V38:bat[:any,:any])
    V40 := algebra.tsort(V39);	# 27  unknown (V40:bat[:any,:any])<-(V39:bat[:any,:any])
    V41 := sql.bind_dbat("sys","lineitem",0);	# 28 mvc_bind_dbat_wrap (V41:any)<-($37:str)($38:str)($39:int)
    V45 := bat.reverse(V41);	# 29 BKCreverse (V45:bat[:any,:any])<-(V41:any)
    V46 := algebra.kdiff(V26,V45);	# 30 ALGkdiff (V46:bat[:any,:any])<-(V26:any)(V45:bat[:any,:any])
    V47 := algebra.join(V18,V46);	# 31 ALGjoin (V47:bat[:any,:any])<-(V18:bat[:any,:any])(V46:bat[:any,:any])
    V48 := algebra.join(V34,V47);	# 32 ALGjoin (V48:bat[:any,:any])<-(V34:bat[:any,:any])(V47:bat[:any,:any])
    V49 := group.refine(V40,V48);	# 33 GRPrefine (V49:bat[:any,:oid])<-(V40:bat[:any,:any])(V48:bat[:any,:any])
    V50 := sql.bind("sys","lineitem","l_quantity",0);	# 34 mvc_bind_wrap (V50:any)<-($37:str)($38:str)($46:str)($39:int)
    V52 := sql.bind_dbat("sys","lineitem",0);	# 35 mvc_bind_dbat_wrap (V52:any)<-($37:str)($38:str)($39:int)
    V53 := bat.reverse(V52);	# 36 BKCreverse (V53:bat[:any,:any])<-(V52:any)
    V54 := algebra.kdiff(V50,V53);	# 37 ALGkdiff (V54:bat[:any,:any])<-(V50:any)(V53:bat[:any,:any])
    V55 := algebra.join(V18,V54);	# 38 ALGjoin (V55:bat[:any,:any])<-(V18:bat[:any,:any])(V54:bat[:any,:any])
    V56 := aggrX3.sum(V55,V32,V34);	# 39  unknown (V56:bat[:any,:any])<-(V55:bat[:any,:any])(V32:bat[:any,:any])(V34:bat[:any,:any])
    V57 := sql.bind("sys","lineitem","l_extendedprice",0);	# 40 mvc_bind_wrap (V57:any)<-($37:str)($38:str)($53:str)($39:int)
    V59 := sql.bind_dbat("sys","lineitem",0);	# 41 mvc_bind_dbat_wrap (V59:any)<-($37:str)($38:str)($39:int)
    V60 := bat.reverse(V59);	# 42 BKCreverse (V60:bat[:any,:any])<-(V59:any)
    V61 := algebra.kdiff(V57,V60);	# 43 ALGkdiff (V61:bat[:any,:any])<-(V57:any)(V60:bat[:any,:any])
    V62 := algebra.join(V18,V61);	# 44 ALGjoin (V62:bat[:any,:any])<-(V18:bat[:any,:any])(V61:bat[:any,:any])
    V63 := aggrX3.sum(V62,V32,V34);	# 45  unknown (V63:bat[:any,:any])<-(V62:bat[:any,:any])(V32:bat[:any,:any])(V34:bat[:any,:any])
    V64 := sql.bind_dbat("sys","lineitem",0);	# 46 mvc_bind_dbat_wrap (V64:any)<-($37:str)($38:str)($39:int)
    V65 := bat.reverse(V64);	# 47 BKCreverse (V65:bat[:any,:any])<-(V64:any)
    V66 := algebra.kdiff(V57,V65);	# 48 ALGkdiff (V66:bat[:any,:any])<-(V57:any)(V65:bat[:any,:any])
    V67 := algebra.join(V18,V66);	# 49 ALGjoin (V67:bat[:any,:any])<-(V18:bat[:any,:any])(V66:bat[:any,:any])
    V69 := calc.lng(1);	# 50 CALCint2lng (V69:lng)<-($64:int)
    V71 := calc.*(V69,100);	# 51 CALCbinaryMULlngint (V71:lng)<-(V69:lng)($66:int)
    V72 := sql.bind("sys","lineitem","l_discount",0);	# 52 mvc_bind_wrap (V72:any)<-($37:str)($38:str)($68:str)($39:int)
    V74 := sql.bind_dbat("sys","lineitem",0);	# 53 mvc_bind_dbat_wrap (V74:any)<-($70:str)($71:str)($72:int)
    V78 := bat.reverse(V74);	# 54 BKCreverse (V78:bat[:any,:any])<-(V74:any)
    V79 := algebra.kdiff(V72,V78);	# 55 ALGkdiff (V79:bat[:any,:any])<-(V72:any)(V78:bat[:any,:any])
    V80 := algebra.join(V18,V79);	# 56 ALGjoin (V80:bat[:any,:any])<-(V18:bat[:any,:any])(V79:bat[:any,:any])
    V81 := multiplex.script("calc.-",V71,V80);	# 57  (V81:bat[:any,:dbl])<-($77:str)(V71:lng)(V80:bat[:any,:any])
    V83 := batcalc.*(V67,V81);	# 58 CMDbatMUL (V83:bat[:any,:dbl])<-(V67:bat[:any,:any])(V81:bat[:any,:dbl])
    V85 := aggrX3.sum(V83,V32,V34);	# 59  unknown (V85:bat[:any,:any])<-(V83:bat[:any,:dbl])(V32:bat[:any,:any])(V34:bat[:any,:any])
    V86 := sql.bind_dbat("sys","lineitem",0);	# 60 mvc_bind_dbat_wrap (V86:any)<-($70:str)($71:str)($72:int)
    V87 := bat.reverse(V86);	# 61 BKCreverse (V87:bat[:any,:any])<-(V86:any)
    V88 := algebra.kdiff(V57,V87);	# 62 ALGkdiff (V88:bat[:any,:any])<-(V57:any)(V87:bat[:any,:any])
    V89 := algebra.join(V18,V88);	# 63 ALGjoin (V89:bat[:any,:any])<-(V18:bat[:any,:any])(V88:bat[:any,:any])
    V90 := calc.lng(1);	# 64 CALCint2lng (V90:lng)<-($64:int)
    V91 := calc.*(V90,100);	# 65 CALCbinaryMULlngint (V91:lng)<-(V90:lng)($66:int)
    V92 := sql.bind_dbat("sys","lineitem",0);	# 66 mvc_bind_dbat_wrap (V92:any)<-($70:str)($71:str)($72:int)
    V93 := bat.reverse(V92);	# 67 BKCreverse (V93:bat[:any,:any])<-(V92:any)
    V94 := algebra.kdiff(V72,V93);	# 68 ALGkdiff (V94:bat[:any,:any])<-(V72:any)(V93:bat[:any,:any])
    V95 := algebra.join(V18,V94);	# 69 ALGjoin (V95:bat[:any,:any])<-(V18:bat[:any,:any])(V94:bat[:any,:any])
    V96 := multiplex.script("calc.-",V91,V95);	# 70  (V96:bat[:any,:dbl])<-($77:str)(V91:lng)(V95:bat[:any,:any])
    V97 := batcalc.*(V89,V96);	# 71 CMDbatMUL (V97:bat[:any,:dbl])<-(V89:bat[:any,:any])(V96:bat[:any,:dbl])
    V98 := calc.lng(1);	# 72 CALCint2lng (V98:lng)<-($64:int)
    V99 := calc.*(V98,100);	# 73 CALCbinaryMULlngint (V99:lng)<-(V98:lng)($66:int)
    V100 := sql.bind("sys","lineitem","l_tax",0);	# 74 mvc_bind_wrap (V100:any)<-($70:str)($71:str)($95:str)($72:int)
    V102 := sql.bind_dbat("sys","lineitem",0);	# 75 mvc_bind_dbat_wrap (V102:any)<-($70:str)($71:str)($72:int)
    V103 := bat.reverse(V102);	# 76 BKCreverse (V103:bat[:any,:any])<-(V102:any)
    V104 := algebra.kdiff(V100,V103);	# 77 ALGkdiff (V104:bat[:any,:any])<-(V100:any)(V103:bat[:any,:any])
    V105 := algebra.join(V18,V104);	# 78 ALGjoin (V105:bat[:any,:any])<-(V18:bat[:any,:any])(V104:bat[:any,:any])
    V106 := multiplex.script("calc.+",V99,V105);	# 79  (V106:bat[:any,:dbl])<-($101:str)(V99:lng)(V105:bat[:any,:any])
    V108 := batcalc.*(V97,V106);	# 80 CMDbatMUL (V108:bat[:any,:dbl])<-(V97:bat[:any,:dbl])(V106:bat[:any,:dbl])
    V109 := aggrX3.sum(V108,V32,V34);	# 81  unknown (V109:bat[:any,:any])<-(V108:bat[:any,:dbl])(V32:bat[:any,:any])(V34:bat[:any,:any])
    V110 := sql.bind_dbat("sys","lineitem",0);	# 82 mvc_bind_dbat_wrap (V110:any)<-($105:str)($106:str)($107:int)
    V114 := bat.reverse(V110);	# 83 BKCreverse (V114:bat[:any,:any])<-(V110:any)
    V115 := algebra.kdiff(V50,V114);	# 84 ALGkdiff (V115:bat[:any,:any])<-(V50:any)(V114:bat[:any,:any])
    V116 := algebra.join(V18,V115);	# 85 ALGjoin (V116:bat[:any,:any])<-(V18:bat[:any,:any])(V115:bat[:any,:any])
    V117 := aggrX3.avg(V116,V32,V34);	# 86  unknown (V117:bat[:any,:any])<-(V116:bat[:any,:any])(V32:bat[:any,:any])(V34:bat[:any,:any])
    V118 := sql.bind_dbat("sys","lineitem",0);	# 87 mvc_bind_dbat_wrap (V118:any)<-($105:str)($106:str)($107:int)
    V119 := bat.reverse(V118);	# 88 BKCreverse (V119:bat[:any,:any])<-(V118:any)
    V120 := algebra.kdiff(V57,V119);	# 89 ALGkdiff (V120:bat[:any,:any])<-(V57:any)(V119:bat[:any,:any])
    V121 := algebra.join(V18,V120);	# 90 ALGjoin (V121:bat[:any,:any])<-(V18:bat[:any,:any])(V120:bat[:any,:any])
    V122 := aggrX3.avg(V121,V32,V34);	# 91  unknown (V122:any)<-(V121:bat[:any,:any])(V32:bat[:any,:any])(V34:bat[:any,:any])
    V124 := multiplex.script("calc.round",V122,100);	# 92  unknown (V124:bat[:any,:any])<-($118:str)(V122:any)($119:int)
    V126 := sql.bind_dbat("sys","lineitem",0);	# 93 mvc_bind_dbat_wrap (V126:any)<-($105:str)($106:str)($107:int)
    V127 := bat.reverse(V126);	# 94 BKCreverse (V127:bat[:any,:any])<-(V126:any)
    V128 := algebra.kdiff(V72,V127);	# 95 ALGkdiff (V128:bat[:any,:any])<-(V72:any)(V127:bat[:any,:any])
    V129 := algebra.join(V18,V128);	# 96 ALGjoin (V129:bat[:any,:any])<-(V18:bat[:any,:any])(V128:bat[:any,:any])
    V130 := aggrX3.avg(V129,V32,V34);	# 97  unknown (V130:any)<-(V129:bat[:any,:any])(V32:bat[:any,:any])(V34:bat[:any,:any])
    V131 := multiplex.script("calc.round",V130,100);	# 98  unknown (V131:bat[:any,:any])<-($118:str)(V130:any)($119:int)
    V132 := aggrX3.count(V32,V32,V34);	# 99  unknown (V132:bat[:any,:any])<-(V32:bat[:any,:any])(V32:bat[:any,:any])(V34:bat[:any,:any])
    sql.column(V39,"l_returnflag","varchar",1,0);	# 100 SQLcolumn ($127:void)<-(V39:bat[:any,:any])($128:str)($129:str)($130:int)($107:int)
    sql.column(V48,"l_linestatus","varchar",1,0);	# 101 SQLcolumn ($131:void)<-(V48:bat[:any,:any])($132:str)($129:str)($130:int)($107:int)
    sql.column(V56,"sum_qty","bigint",0,0);	# 102 SQLcolumn ($133:void)<-(V56:bat[:any,:any])($134:str)($135:str)($107:int)($107:int)
    sql.column(V63,"sum_base_price","decimal",19,2);	# 103 SQLcolumn ($136:void)<-(V63:bat[:any,:any])($137:str)($138:str)($139:int)($140:int)
    sql.column(V85,"sum_disc_price","decimal",19,4);	# 104 SQLcolumn ($141:void)<-(V85:bat[:any,:any])($142:str)($138:str)($139:int)($143:int)
    sql.column(V109,"sum_charge","decimal",19,6);	# 105 SQLcolumn ($144:void)<-(V109:bat[:any,:any])($145:str)($138:str)($139:int)($146:int)
    sql.column(V117,"avg_qty","double",53,0);	# 106 SQLcolumn ($147:void)<-(V117:bat[:any,:any])($148:str)($149:str)($150:int)($151:int)
    sql.column(V124,"avg_price","double",53,0);	# 107 SQLcolumn ($152:void)<-(V124:bat[:any,:any])($153:str)($149:str)($150:int)($151:int)
    sql.column(V131,"avg_disc","double",53,0);	# 108 SQLcolumn ($154:void)<-(V131:bat[:any,:any])($155:str)($149:str)($150:int)($151:int)
    sql.column(V132,"count_order","int",0,0);	# 109 SQLcolumn ($156:void)<-(V132:bat[:any,:any])($157:str)($158:str)($151:int)($151:int)
    sql.output(V49,V39,V48,V56,V63,V85,V109,V117,V124,V131,V132);	# 110  unknown ($159:any)<-(V49:bat[:any,:oid])(V39:bat[:any,:any])(V48:bat[:any,:any])(V56:bat[:any,:any])(V63:bat[:any,:any])(V85:bat[:any,:any])(V109:bat[:any,:any])(V117:bat[:any,:any])(V124:bat[:any,:any])(V131:bat[:any,:any])(V132:bat[:any,:any])
end qry1;	# 111  
!ERROR: 'algebra.tmark' undefined in user.qry1[8]
!ERROR: 'group.group' undefined in user.qry1[19]
!ERROR: 'group.group' undefined in user.qry1[28]
!ERROR: 'algebra.tsort' undefined in user.qry1[41]
!ERROR: 'aggrX3.sum' undefined in user.qry1[59]
!ERROR: 'aggrX3.sum' undefined in user.qry1[68]
!ERROR: 'aggrX3.sum' undefined in user.qry1[90]
!ERROR: 'aggrX3.sum' undefined in user.qry1[125]
!ERROR: 'aggrX3.avg' undefined in user.qry1[133]
!ERROR: 'aggrX3.avg' undefined in user.qry1[141]
!ERROR: multiplexType:script[143]: at least one BAT argument required
!ERROR: 'aggrX3.avg' undefined in user.qry1[151]
!ERROR: multiplexType:script[153]: at least one BAT argument required
!ERROR: 'aggrX3.count' undefined in user.qry1[154]
!ERROR: 'sql.output' undefined in user.qry1[167]
Optimizer garbageCollector failed
function user.qry1():void;	# 0  (qry1:void)
    V3 := sql.bind("sys","lineitem","l_shipdate",0);	# 1 mvc_bind_wrap (V3:any)<-($2:str)($3:str)($4:str)($5:int)
    V8 := sql.bind_dbat("sys","lineitem",0);	# 2 mvc_bind_dbat_wrap (V8:any)<-($2:str)($3:str)($5:int)
    V9 := bat.reverse(V8);	# 3 BKCreverse (V9:bat[:any,:any])<-(V8:any)
    V10 := algebra.kdiff(V3,V9);	# 4 ALGkdiff (V10:bat[:any,:any])<-(V3:any)(V9:bat[:any,:any])
    bbp.garbage(V9);	# 5 CMDbbpgarbage ($160:void)<-(V9:bat[:any,:any])
    V14 := algebra.uselect(V10,nil,nil);	# 6 ALGuselect (V14:bat[:any,:void])<-(V10:bat[:any,:any])($10:void)($10:void)
    bbp.garbage(V10);	# 7 CMDbbpgarbage ($161:void)<-(V10:bat[:any,:any])
    V17 := algebra.tmark(V14,0@0);	# 8  unknown (V17:bat[:any,:any])<-(V14:bat[:any,:void])($12:oid)
    bbp.garbage(V14);	# 9 CMDbbpgarbage ($162:void)<-(V14:bat[:any,:void])
    V18 := bat.reverse(V17);	# 10 BKCreverse (V18:bat[:any,:any])<-(V17:bat[:any,:any])
    bbp.garbage(V17);	# 11 CMDbbpgarbage ($163:void)<-(V17:bat[:any,:any])
    V19 := sql.bind("sys","lineitem","l_returnflag",0);	# 12 mvc_bind_wrap (V19:any)<-($2:str)($3:str)($15:str)($5:int)
    V21 := sql.bind_dbat("sys","lineitem",0);	# 13 mvc_bind_dbat_wrap (V21:any)<-($2:str)($3:str)($5:int)
    V22 := bat.reverse(V21);	# 14 BKCreverse (V22:bat[:any,:any])<-(V21:any)
    V23 := algebra.kdiff(V19,V22);	# 15 ALGkdiff (V23:bat[:any,:any])<-(V19:any)(V22:bat[:any,:any])
    bbp.garbage(V22);	# 16 CMDbbpgarbage ($164:void)<-(V22:bat[:any,:any])
    V24 := algebra.join(V18,V23);	# 17 ALGjoin (V24:bat[:any,:any])<-(V18:bat[:any,:any])(V23:bat[:any,:any])
    bbp.garbage(V23);	# 18 CMDbbpgarbage ($165:void)<-(V23:bat[:any,:any])
    V25 := group.group(V24);	# 19  unknown (V25:any)<-(V24:bat[:any,:any])
    bbp.garbage(V24);	# 20 CMDbbpgarbage ($166:void)<-(V24:bat[:any,:any])
    V26 := sql.bind("sys","lineitem","l_linestatus",0);	# 21 mvc_bind_wrap (V26:any)<-($2:str)($3:str)($22:str)($5:int)
    V28 := sql.bind_dbat("sys","lineitem",0);	# 22 mvc_bind_dbat_wrap (V28:any)<-($2:str)($3:str)($5:int)
    V29 := bat.reverse(V28);	# 23 BKCreverse (V29:bat[:any,:any])<-(V28:any)
    V30 := algebra.kdiff(V26,V29);	# 24 ALGkdiff (V30:bat[:any,:any])<-(V26:any)(V29:bat[:any,:any])
    bbp.garbage(V29);	# 25 CMDbbpgarbage ($167:void)<-(V29:bat[:any,:any])
    V31 := algebra.join(V18,V30);	# 26 ALGjoin (V31:bat[:any,:any])<-(V18:bat[:any,:any])(V30:bat[:any,:any])
    bbp.garbage(V30);	# 27 CMDbbpgarbage ($168:void)<-(V30:bat[:any,:any])
    V32 := group.group(V25,V31);	# 28  unknown (V32:bat[:any,:any])<-(V25:any)(V31:bat[:any,:any])
    bbp.garbage(V31);	# 29 CMDbbpgarbage ($169:void)<-(V31:bat[:any,:any])
    V33 := algebra.tunique(V32);	# 30 ALGtunique (V33:bat[:any,:any])<-(V32:bat[:any,:any])
    V34 := bat.mirror(V33);	# 31 BKCmirror (V34:bat[:any,:any])<-(V33:bat[:any,:any])
    bbp.garbage(V33);	# 32 CMDbbpgarbage ($170:void)<-(V33:bat[:any,:any])
    V35 := sql.bind_dbat("sys","lineitem",0);	# 33 mvc_bind_dbat_wrap (V35:any)<-($2:str)($3:str)($5:int)
    V36 := bat.reverse(V35);	# 34 BKCreverse (V36:bat[:any,:any])<-(V35:any)
    V37 := algebra.kdiff(V19,V36);	# 35 ALGkdiff (V37:bat[:any,:any])<-(V19:any)(V36:bat[:any,:any])
    bbp.garbage(V36);	# 36 CMDbbpgarbage ($171:void)<-(V36:bat[:any,:any])
    V38 := algebra.join(V18,V37);	# 37 ALGjoin (V38:bat[:any,:any])<-(V18:bat[:any,:any])(V37:bat[:any,:any])
    bbp.garbage(V37);	# 38 CMDbbpgarbage ($172:void)<-(V37:bat[:any,:any])
    V39 := algebra.join(V34,V38);	# 39 ALGjoin (V39:bat[:any,:any])<-(V34:bat[:any,:any])(V38:bat[:any,:any])
    bbp.garbage(V38);	# 40 CMDbbpgarbage ($173:void)<-(V38:bat[:any,:any])
    V40 := algebra.tsort(V39);	# 41  unknown (V40:bat[:any,:any])<-(V39:bat[:any,:any])
    V41 := sql.bind_dbat("sys","lineitem",0);	# 42 mvc_bind_dbat_wrap (V41:any)<-($37:str)($38:str)($39:int)
    V45 := bat.reverse(V41);	# 43 BKCreverse (V45:bat[:any,:any])<-(V41:any)
    V46 := algebra.kdiff(V26,V45);	# 44 ALGkdiff (V46:bat[:any,:any])<-(V26:any)(V45:bat[:any,:any])
    bbp.garbage(V45);	# 45 CMDbbpgarbage ($174:void)<-(V45:bat[:any,:any])
    V47 := algebra.join(V18,V46);	# 46 ALGjoin (V47:bat[:any,:any])<-(V18:bat[:any,:any])(V46:bat[:any,:any])
    bbp.garbage(V46);	# 47 CMDbbpgarbage ($175:void)<-(V46:bat[:any,:any])
    V48 := algebra.join(V34,V47);	# 48 ALGjoin (V48:bat[:any,:any])<-(V34:bat[:any,:any])(V47:bat[:any,:any])
    bbp.garbage(V47);	# 49 CMDbbpgarbage ($176:void)<-(V47:bat[:any,:any])
    V49 := group.refine(V40,V48);	# 50 GRPrefine (V49:bat[:any,:oid])<-(V40:bat[:any,:any])(V48:bat[:any,:any])
    bbp.garbage(V40);	# 51 CMDbbpgarbage ($177:void)<-(V40:bat[:any,:any])
    V50 := sql.bind("sys","lineitem","l_quantity",0);	# 52 mvc_bind_wrap (V50:any)<-($37:str)($38:str)($46:str)($39:int)
    V52 := sql.bind_dbat("sys","lineitem",0);	# 53 mvc_bind_dbat_wrap (V52:any)<-($37:str)($38:str)($39:int)
    V53 := bat.reverse(V52);	# 54 BKCreverse (V53:bat[:any,:any])<-(V52:any)
    V54 := algebra.kdiff(V50,V53);	# 55 ALGkdiff (V54:bat[:any,:any])<-(V50:any)(V53:bat[:any,:any])
    bbp.garbage(V53);	# 56 CMDbbpgarbage ($178:void)<-(V53:bat[:any,:any])
    V55 := algebra.join(V18,V54);	# 57 ALGjoin (V55:bat[:any,:any])<-(V18:bat[:any,:any])(V54:bat[:any,:any])
    bbp.garbage(V54);	# 58 CMDbbpgarbage ($179:void)<-(V54:bat[:any,:any])
    V56 := aggrX3.sum(V55,V32,V34);	# 59  unknown (V56:bat[:any,:any])<-(V55:bat[:any,:any])(V32:bat[:any,:any])(V34:bat[:any,:any])
    bbp.garbage(V55);	# 60 CMDbbpgarbage ($180:void)<-(V55:bat[:any,:any])
    V57 := sql.bind("sys","lineitem","l_extendedprice",0);	# 61 mvc_bind_wrap (V57:any)<-($37:str)($38:str)($53:str)($39:int)
    V59 := sql.bind_dbat("sys","lineitem",0);	# 62 mvc_bind_dbat_wrap (V59:any)<-($37:str)($38:str)($39:int)
    V60 := bat.reverse(V59);	# 63 BKCreverse (V60:bat[:any,:any])<-(V59:any)
    V61 := algebra.kdiff(V57,V60);	# 64 ALGkdiff (V61:bat[:any,:any])<-(V57:any)(V60:bat[:any,:any])
    bbp.garbage(V60);	# 65 CMDbbpgarbage ($181:void)<-(V60:bat[:any,:any])
    V62 := algebra.join(V18,V61);	# 66 ALGjoin (V62:bat[:any,:any])<-(V18:bat[:any,:any])(V61:bat[:any,:any])
    bbp.garbage(V61);	# 67 CMDbbpgarbage ($182:void)<-(V61:bat[:any,:any])
    V63 := aggrX3.sum(V62,V32,V34);	# 68  unknown (V63:bat[:any,:any])<-(V62:bat[:any,:any])(V32:bat[:any,:any])(V34:bat[:any,:any])
    bbp.garbage(V62);	# 69 CMDbbpgarbage ($183:void)<-(V62:bat[:any,:any])
    V64 := sql.bind_dbat("sys","lineitem",0);	# 70 mvc_bind_dbat_wrap (V64:any)<-($37:str)($38:str)($39:int)
    V65 := bat.reverse(V64);	# 71 BKCreverse (V65:bat[:any,:any])<-(V64:any)
    V66 := algebra.kdiff(V57,V65);	# 72 ALGkdiff (V66:bat[:any,:any])<-(V57:any)(V65:bat[:any,:any])
    bbp.garbage(V65);	# 73 CMDbbpgarbage ($184:void)<-(V65:bat[:any,:any])
    V67 := algebra.join(V18,V66);	# 74 ALGjoin (V67:bat[:any,:any])<-(V18:bat[:any,:any])(V66:bat[:any,:any])
    bbp.garbage(V66);	# 75 CMDbbpgarbage ($185:void)<-(V66:bat[:any,:any])
    V69 := calc.lng(1);	# 76 CALCint2lng (V69:lng)<-($64:int)
    V71 := calc.*(V69,100);	# 77 CALCbinaryMULlngint (V71:lng)<-(V69:lng)($66:int)
    V72 := sql.bind("sys","lineitem","l_discount",0);	# 78 mvc_bind_wrap (V72:any)<-($37:str)($38:str)($68:str)($39:int)
    V74 := sql.bind_dbat("sys","lineitem",0);	# 79 mvc_bind_dbat_wrap (V74:any)<-($70:str)($71:str)($72:int)
    V78 := bat.reverse(V74);	# 80 BKCreverse (V78:bat[:any,:any])<-(V74:any)
    V79 := algebra.kdiff(V72,V78);	# 81 ALGkdiff (V79:bat[:any,:any])<-(V72:any)(V78:bat[:any,:any])
    bbp.garbage(V78);	# 82 CMDbbpgarbage ($186:void)<-(V78:bat[:any,:any])
    V80 := algebra.join(V18,V79);	# 83 ALGjoin (V80:bat[:any,:any])<-(V18:bat[:any,:any])(V79:bat[:any,:any])
    bbp.garbage(V79);	# 84 CMDbbpgarbage ($187:void)<-(V79:bat[:any,:any])
    V81 := multiplex.script("calc.-",V71,V80);	# 85  (V81:bat[:any,:dbl])<-($77:str)(V71:lng)(V80:bat[:any,:any])
    bbp.garbage(V80);	# 86 CMDbbpgarbage ($188:void)<-(V80:bat[:any,:any])
    V83 := batcalc.*(V67,V81);	# 87 CMDbatMUL (V83:bat[:any,:dbl])<-(V67:bat[:any,:any])(V81:bat[:any,:dbl])
    bbp.garbage(V67);	# 88 CMDbbpgarbage ($189:void)<-(V67:bat[:any,:any])
    bbp.garbage(V81);	# 89 CMDbbpgarbage ($190:void)<-(V81:bat[:any,:dbl])
    V85 := aggrX3.sum(V83,V32,V34);	# 90  unknown (V85:bat[:any,:any])<-(V83:bat[:any,:dbl])(V32:bat[:any,:any])(V34:bat[:any,:any])
    bbp.garbage(V83);	# 91 CMDbbpgarbage ($191:void)<-(V83:bat[:any,:dbl])
    V86 := sql.bind_dbat("sys","lineitem",0);	# 92 mvc_bind_dbat_wrap (V86:any)<-($70:str)($71:str)($72:int)
    V87 := bat.reverse(V86);	# 93 BKCreverse (V87:bat[:any,:any])<-(V86:any)
    V88 := algebra.kdiff(V57,V87);	# 94 ALGkdiff (V88:bat[:any,:any])<-(V57:any)(V87:bat[:any,:any])
    bbp.garbage(V87);	# 95 CMDbbpgarbage ($192:void)<-(V87:bat[:any,:any])
    V89 := algebra.join(V18,V88);	# 96 ALGjoin (V89:bat[:any,:any])<-(V18:bat[:any,:any])(V88:bat[:any,:any])
    bbp.garbage(V88);	# 97 CMDbbpgarbage ($193:void)<-(V88:bat[:any,:any])
    V90 := calc.lng(1);	# 98 CALCint2lng (V90:lng)<-($64:int)
    V91 := calc.*(V90,100);	# 99 CALCbinaryMULlngint (V91:lng)<-(V90:lng)($66:int)
    V92 := sql.bind_dbat("sys","lineitem",0);	# 100 mvc_bind_dbat_wrap (V92:any)<-($70:str)($71:str)($72:int)
    V93 := bat.reverse(V92);	# 101 BKCreverse (V93:bat[:any,:any])<-(V92:any)
    V94 := algebra.kdiff(V72,V93);	# 102 ALGkdiff (V94:bat[:any,:any])<-(V72:any)(V93:bat[:any,:any])
    bbp.garbage(V93);	# 103 CMDbbpgarbage ($194:void)<-(V93:bat[:any,:any])
    V95 := algebra.join(V18,V94);	# 104 ALGjoin (V95:bat[:any,:any])<-(V18:bat[:any,:any])(V94:bat[:any,:any])
    bbp.garbage(V94);	# 105 CMDbbpgarbage ($195:void)<-(V94:bat[:any,:any])
    V96 := multiplex.script("calc.-",V91,V95);	# 106  (V96:bat[:any,:dbl])<-($77:str)(V91:lng)(V95:bat[:any,:any])
    bbp.garbage(V95);	# 107 CMDbbpgarbage ($196:void)<-(V95:bat[:any,:any])
    V97 := batcalc.*(V89,V96);	# 108 CMDbatMUL (V97:bat[:any,:dbl])<-(V89:bat[:any,:any])(V96:bat[:any,:dbl])
    bbp.garbage(V89);	# 109 CMDbbpgarbage ($197:void)<-(V89:bat[:any,:any])
    bbp.garbage(V96);	# 110 CMDbbpgarbage ($198:void)<-(V96:bat[:any,:dbl])
    V98 := calc.lng(1);	# 111 CALCint2lng (V98:lng)<-($64:int)
    V99 := calc.*(V98,100);	# 112 CALCbinaryMULlngint (V99:lng)<-(V98:lng)($66:int)
    V100 := sql.bind("sys","lineitem","l_tax",0);	# 113 mvc_bind_wrap (V100:any)<-($70:str)($71:str)($95:str)($72:int)
    V102 := sql.bind_dbat("sys","lineitem",0);	# 114 mvc_bind_dbat_wrap (V102:any)<-($70:str)($71:str)($72:int)
    V103 := bat.reverse(V102);	# 115 BKCreverse (V103:bat[:any,:any])<-(V102:any)
    V104 := algebra.kdiff(V100,V103);	# 116 ALGkdiff (V104:bat[:any,:any])<-(V100:any)(V103:bat[:any,:any])
    bbp.garbage(V103);	# 117 CMDbbpgarbage ($199:void)<-(V103:bat[:any,:any])
    V105 := algebra.join(V18,V104);	# 118 ALGjoin (V105:bat[:any,:any])<-(V18:bat[:any,:any])(V104:bat[:any,:any])
    bbp.garbage(V104);	# 119 CMDbbpgarbage ($200:void)<-(V104:bat[:any,:any])
    V106 := multiplex.script("calc.+",V99,V105);	# 120  (V106:bat[:any,:dbl])<-($101:str)(V99:lng)(V105:bat[:any,:any])
    bbp.garbage(V105);	# 121 CMDbbpgarbage ($201:void)<-(V105:bat[:any,:any])
    V108 := batcalc.*(V97,V106);	# 122 CMDbatMUL (V108:bat[:any,:dbl])<-(V97:bat[:any,:dbl])(V106:bat[:any,:dbl])
    bbp.garbage(V97);	# 123 CMDbbpgarbage ($202:void)<-(V97:bat[:any,:dbl])
    bbp.garbage(V106);	# 124 CMDbbpgarbage ($203:void)<-(V106:bat[:any,:dbl])
    V109 := aggrX3.sum(V108,V32,V34);	# 125  unknown (V109:bat[:any,:any])<-(V108:bat[:any,:dbl])(V32:bat[:any,:any])(V34:bat[:any,:any])
    bbp.garbage(V108);	# 126 CMDbbpgarbage ($204:void)<-(V108:bat[:any,:dbl])
    V110 := sql.bind_dbat("sys","lineitem",0);	# 127 mvc_bind_dbat_wrap (V110:any)<-($105:str)($106:str)($107:int)
    V114 := bat.reverse(V110);	# 128 BKCreverse (V114:bat[:any,:any])<-(V110:any)
    V115 := algebra.kdiff(V50,V114);	# 129 ALGkdiff (V115:bat[:any,:any])<-(V50:any)(V114:bat[:any,:any])
    bbp.garbage(V114);	# 130 CMDbbpgarbage ($205:void)<-(V114:bat[:any,:any])
    V116 := algebra.join(V18,V115);	# 131 ALGjoin (V116:bat[:any,:any])<-(V18:bat[:any,:any])(V115:bat[:any,:any])
    bbp.garbage(V115);	# 132 CMDbbpgarbage ($206:void)<-(V115:bat[:any,:any])
    V117 := aggrX3.avg(V116,V32,V34);	# 133  unknown (V117:bat[:any,:any])<-(V116:bat[:any,:any])(V32:bat[:any,:any])(V34:bat[:any,:any])
    bbp.garbage(V116);	# 134 CMDbbpgarbage ($207:void)<-(V116:bat[:any,:any])
    V118 := sql.bind_dbat("sys","lineitem",0);	# 135 mvc_bind_dbat_wrap (V118:any)<-($105:str)($106:str)($107:int)
    V119 := bat.reverse(V118);	# 136 BKCreverse (V119:bat[:any,:any])<-(V118:any)
    V120 := algebra.kdiff(V57,V119);	# 137 ALGkdiff (V120:bat[:any,:any])<-(V57:any)(V119:bat[:any,:any])
    bbp.garbage(V119);	# 138 CMDbbpgarbage ($208:void)<-(V119:bat[:any,:any])
    V121 := algebra.join(V18,V120);	# 139 ALGjoin (V121:bat[:any,:any])<-(V18:bat[:any,:any])(V120:bat[:any,:any])
    bbp.garbage(V120);	# 140 CMDbbpgarbage ($209:void)<-(V120:bat[:any,:any])
    V122 := aggrX3.avg(V121,V32,V34);	# 141  unknown (V122:any)<-(V121:bat[:any,:any])(V32:bat[:any,:any])(V34:bat[:any,:any])
    bbp.garbage(V121);	# 142 CMDbbpgarbage ($210:void)<-(V121:bat[:any,:any])
    V124 := multiplex.script("calc.round",V122,100);	# 143  unknown (V124:bat[:any,:any])<-($118:str)(V122:any)($119:int)
    V126 := sql.bind_dbat("sys","lineitem",0);	# 144 mvc_bind_dbat_wrap (V126:any)<-($105:str)($106:str)($107:int)
    V127 := bat.reverse(V126);	# 145 BKCreverse (V127:bat[:any,:any])<-(V126:any)
    V128 := algebra.kdiff(V72,V127);	# 146 ALGkdiff (V128:bat[:any,:any])<-(V72:any)(V127:bat[:any,:any])
    bbp.garbage(V127);	# 147 CMDbbpgarbage ($211:void)<-(V127:bat[:any,:any])
    V129 := algebra.join(V18,V128);	# 148 ALGjoin (V129:bat[:any,:any])<-(V18:bat[:any,:any])(V128:bat[:any,:any])
    bbp.garbage(V18);	# 149 CMDbbpgarbage ($212:void)<-(V18:bat[:any,:any])
    bbp.garbage(V128);	# 150 CMDbbpgarbage ($213:void)<-(V128:bat[:any,:any])
    V130 := aggrX3.avg(V129,V32,V34);	# 151  unknown (V130:any)<-(V129:bat[:any,:any])(V32:bat[:any,:any])(V34:bat[:any,:any])
    bbp.garbage(V129);	# 152 CMDbbpgarbage ($214:void)<-(V129:bat[:any,:any])
    V131 := multiplex.script("calc.round",V130,100);	# 153  unknown (V131:bat[:any,:any])<-($118:str)(V130:any)($119:int)
    V132 := aggrX3.count(V32,V32,V34);	# 154  unknown (V132:bat[:any,:any])<-(V32:bat[:any,:any])(V32:bat[:any,:any])(V34:bat[:any,:any])
    bbp.garbage(V32);	# 155 CMDbbpgarbage ($215:void)<-(V32:bat[:any,:any])
    bbp.garbage(V34);	# 156 CMDbbpgarbage ($216:void)<-(V34:bat[:any,:any])
    sql.column(V39,"l_returnflag","varchar",1,0);	# 157 SQLcolumn ($127:void)<-(V39:bat[:any,:any])($128:str)($129:str)($130:int)($107:int)
    sql.column(V48,"l_linestatus","varchar",1,0);	# 158 SQLcolumn ($131:void)<-(V48:bat[:any,:any])($132:str)($129:str)($130:int)($107:int)
    sql.column(V56,"sum_qty","bigint",0,0);	# 159 SQLcolumn ($133:void)<-(V56:bat[:any,:any])($134:str)($135:str)($107:int)($107:int)
    sql.column(V63,"sum_base_price","decimal",19,2);	# 160 SQLcolumn ($136:void)<-(V63:bat[:any,:any])($137:str)($138:str)($139:int)($140:int)
    sql.column(V85,"sum_disc_price","decimal",19,4);	# 161 SQLcolumn ($141:void)<-(V85:bat[:any,:any])($142:str)($138:str)($139:int)($143:int)
    sql.column(V109,"sum_charge","decimal",19,6);	# 162 SQLcolumn ($144:void)<-(V109:bat[:any,:any])($145:str)($138:str)($139:int)($146:int)
    sql.column(V117,"avg_qty","double",53,0);	# 163 SQLcolumn ($147:void)<-(V117:bat[:any,:any])($148:str)($149:str)($150:int)($151:int)
    sql.column(V124,"avg_price","double",53,0);	# 164 SQLcolumn ($152:void)<-(V124:bat[:any,:any])($153:str)($149:str)($150:int)($151:int)
    sql.column(V131,"avg_disc","double",53,0);	# 165 SQLcolumn ($154:void)<-(V131:bat[:any,:any])($155:str)($149:str)($150:int)($151:int)
    sql.column(V132,"count_order","int",0,0);	# 166 SQLcolumn ($156:void)<-(V132:bat[:any,:any])($157:str)($158:str)($151:int)($151:int)
    sql.output(V49,V39,V48,V56,V63,V85,V109,V117,V124,V131,V132);	# 167  unknown ($159:any)<-(V49:bat[:any,:oid])(V39:bat[:any,:any])(V48:bat[:any,:any])(V56:bat[:any,:any])(V63:bat[:any,:any])(V85:bat[:any,:any])(V109:bat[:any,:any])(V117:bat[:any,:any])(V124:bat[:any,:any])(V131:bat[:any,:any])(V132:bat[:any,:any])
    bbp.garbage(V49);	# 168 CMDbbpgarbage ($217:void)<-(V49:bat[:any,:oid])
    bbp.garbage(V39);	# 169 CMDbbpgarbage ($218:void)<-(V39:bat[:any,:any])
    bbp.garbage(V48);	# 170 CMDbbpgarbage ($219:void)<-(V48:bat[:any,:any])
    bbp.garbage(V56);	# 171 CMDbbpgarbage ($220:void)<-(V56:bat[:any,:any])
    bbp.garbage(V63);	# 172 CMDbbpgarbage ($221:void)<-(V63:bat[:any,:any])
    bbp.garbage(V85);	# 173 CMDbbpgarbage ($222:void)<-(V85:bat[:any,:any])
    bbp.garbage(V109);	# 174 CMDbbpgarbage ($223:void)<-(V109:bat[:any,:any])
    bbp.garbage(V117);	# 175 CMDbbpgarbage ($224:void)<-(V117:bat[:any,:any])
    bbp.garbage(V124);	# 176 CMDbbpgarbage ($225:void)<-(V124:bat[:any,:any])
    bbp.garbage(V131);	# 177 CMDbbpgarbage ($226:void)<-(V131:bat[:any,:any])
    bbp.garbage(V132);	# 178 CMDbbpgarbage ($227:void)<-(V132:bat[:any,:any])
end qry1;	# 179  
!ERROR: 'algebra.tmark' undefined in user.qry1[8]
!ERROR: 'group.group' undefined in user.qry1[19]
!ERROR: 'group.group' undefined in user.qry1[28]
!ERROR: 'algebra.tsort' undefined in user.qry1[41]
!ERROR: 'aggrX3.sum' undefined in user.qry1[59]
!ERROR: 'aggrX3.sum' undefined in user.qry1[68]
!ERROR: 'aggrX3.sum' undefined in user.qry1[90]
!ERROR: 'aggrX3.sum' undefined in user.qry1[125]
!ERROR: 'aggrX3.avg' undefined in user.qry1[133]
!ERROR: 'aggrX3.avg' undefined in user.qry1[141]
!ERROR: multiplexType:script[143]: at least one BAT argument required
!ERROR: 'aggrX3.avg' undefined in user.qry1[151]
!ERROR: multiplexType:script[153]: at least one BAT argument required
!ERROR: 'aggrX3.count' undefined in user.qry1[154]
!ERROR: 'sql.output' undefined in user.qry1[167]
Optimizer garbageCollector optimizer failed
function user.qry1():void;	# 0  (qry1:void)
    V3 := sql.bind("sys","lineitem","l_shipdate",0);	# 1 mvc_bind_wrap (V3:any)<-($2:str)($3:str)($4:str)($5:int)
    V8 := sql.bind_dbat("sys","lineitem",0);	# 2 mvc_bind_dbat_wrap (V8:any)<-($2:str)($3:str)($5:int)
    V9 := bat.reverse(V8);	# 3 BKCreverse (V9:bat[:any,:any])<-(V8:any)
    V10 := algebra.kdiff(V3,V9);	# 4 ALGkdiff (V10:bat[:any,:any])<-(V3:any)(V9:bat[:any,:any])
    bbp.garbage(V9);	# 5 CMDbbpgarbage ($160:void)<-(V9:bat[:any,:any])
    V14 := algebra.uselect(V10,nil,nil);	# 6 ALGuselect (V14:bat[:any,:void])<-(V10:bat[:any,:any])($10:void)($10:void)
    bbp.garbage(V10);	# 7 CMDbbpgarbage ($161:void)<-(V10:bat[:any,:any])
    V17 := algebra.tmark(V14,0@0);	# 8  unknown (V17:bat[:any,:any])<-(V14:bat[:any,:void])($12:oid)
    bbp.garbage(V14);	# 9 CMDbbpgarbage ($162:void)<-(V14:bat[:any,:void])
    V18 := bat.reverse(V17);	# 10 BKCreverse (V18:bat[:any,:any])<-(V17:bat[:any,:any])
    bbp.garbage(V17);	# 11 CMDbbpgarbage ($163:void)<-(V17:bat[:any,:any])
    V19 := sql.bind("sys","lineitem","l_returnflag",0);	# 12 mvc_bind_wrap (V19:any)<-($2:str)($3:str)($15:str)($5:int)
    V21 := sql.bind_dbat("sys","lineitem",0);	# 13 mvc_bind_dbat_wrap (V21:any)<-($2:str)($3:str)($5:int)
    V22 := bat.reverse(V21);	# 14 BKCreverse (V22:bat[:any,:any])<-(V21:any)
    V23 := algebra.kdiff(V19,V22);	# 15 ALGkdiff (V23:bat[:any,:any])<-(V19:any)(V22:bat[:any,:any])
    bbp.garbage(V22);	# 16 CMDbbpgarbage ($164:void)<-(V22:bat[:any,:any])
    V24 := algebra.join(V18,V23);	# 17 ALGjoin (V24:bat[:any,:any])<-(V18:bat[:any,:any])(V23:bat[:any,:any])
    bbp.garbage(V23);	# 18 CMDbbpgarbage ($165:void)<-(V23:bat[:any,:any])
    V25 := group.group(V24);	# 19  unknown (V25:any)<-(V24:bat[:any,:any])
    bbp.garbage(V24);	# 20 CMDbbpgarbage ($166:void)<-(V24:bat[:any,:any])
    V26 := sql.bind("sys","lineitem","l_linestatus",0);	# 21 mvc_bind_wrap (V26:any)<-($2:str)($3:str)($22:str)($5:int)
    V28 := sql.bind_dbat("sys","lineitem",0);	# 22 mvc_bind_dbat_wrap (V28:any)<-($2:str)($3:str)($5:int)
    V29 := bat.reverse(V28);	# 23 BKCreverse (V29:bat[:any,:any])<-(V28:any)
    V30 := algebra.kdiff(V26,V29);	# 24 ALGkdiff (V30:bat[:any,:any])<-(V26:any)(V29:bat[:any,:any])
    bbp.garbage(V29);	# 25 CMDbbpgarbage ($167:void)<-(V29:bat[:any,:any])
    V31 := algebra.join(V18,V30);	# 26 ALGjoin (V31:bat[:any,:any])<-(V18:bat[:any,:any])(V30:bat[:any,:any])
    bbp.garbage(V30);	# 27 CMDbbpgarbage ($168:void)<-(V30:bat[:any,:any])
    V32 := group.group(V25,V31);	# 28  unknown (V32:bat[:any,:any])<-(V25:any)(V31:bat[:any,:any])
    bbp.garbage(V31);	# 29 CMDbbpgarbage ($169:void)<-(V31:bat[:any,:any])
    V33 := algebra.tunique(V32);	# 30 ALGtunique (V33:bat[:any,:any])<-(V32:bat[:any,:any])
    V34 := bat.mirror(V33);	# 31 BKCmirror (V34:bat[:any,:any])<-(V33:bat[:any,:any])
    bbp.garbage(V33);	# 32 CMDbbpgarbage ($170:void)<-(V33:bat[:any,:any])
    V35 := sql.bind_dbat("sys","lineitem",0);	# 33 mvc_bind_dbat_wrap (V35:any)<-($2:str)($3:str)($5:int)
    V36 := bat.reverse(V35);	# 34 BKCreverse (V36:bat[:any,:any])<-(V35:any)
    V37 := algebra.kdiff(V19,V36);	# 35 ALGkdiff (V37:bat[:any,:any])<-(V19:any)(V36:bat[:any,:any])
    bbp.garbage(V36);	# 36 CMDbbpgarbage ($171:void)<-(V36:bat[:any,:any])
    V38 := algebra.join(V18,V37);	# 37 ALGjoin (V38:bat[:any,:any])<-(V18:bat[:any,:any])(V37:bat[:any,:any])
    bbp.garbage(V37);	# 38 CMDbbpgarbage ($172:void)<-(V37:bat[:any,:any])
    V39 := algebra.join(V34,V38);	# 39 ALGjoin (V39:bat[:any,:any])<-(V34:bat[:any,:any])(V38:bat[:any,:any])
    bbp.garbage(V38);	# 40 CMDbbpgarbage ($173:void)<-(V38:bat[:any,:any])
    V40 := algebra.tsort(V39);	# 41  unknown (V40:bat[:any,:any])<-(V39:bat[:any,:any])
    V41 := sql.bind_dbat("sys","lineitem",0);	# 42 mvc_bind_dbat_wrap (V41:any)<-($37:str)($38:str)($39:int)
    V45 := bat.reverse(V41);	# 43 BKCreverse (V45:bat[:any,:any])<-(V41:any)
    V46 := algebra.kdiff(V26,V45);	# 44 ALGkdiff (V46:bat[:any,:any])<-(V26:any)(V45:bat[:any,:any])
    bbp.garbage(V45);	# 45 CMDbbpgarbage ($174:void)<-(V45:bat[:any,:any])
    V47 := algebra.join(V18,V46);	# 46 ALGjoin (V47:bat[:any,:any])<-(V18:bat[:any,:any])(V46:bat[:any,:any])
    bbp.garbage(V46);	# 47 CMDbbpgarbage ($175:void)<-(V46:bat[:any,:any])
    V48 := algebra.join(V34,V47);	# 48 ALGjoin (V48:bat[:any,:any])<-(V34:bat[:any,:any])(V47:bat[:any,:any])
    bbp.garbage(V47);	# 49 CMDbbpgarbage ($176:void)<-(V47:bat[:any,:any])
    V49 := group.refine(V40,V48);	# 50 GRPrefine (V49:bat[:any,:oid])<-(V40:bat[:any,:any])(V48:bat[:any,:any])
    bbp.garbage(V40);	# 51 CMDbbpgarbage ($177:void)<-(V40:bat[:any,:any])
    V50 := sql.bind("sys","lineitem","l_quantity",0);	# 52 mvc_bind_wrap (V50:any)<-($37:str)($38:str)($46:str)($39:int)
    V52 := sql.bind_dbat("sys","lineitem",0);	# 53 mvc_bind_dbat_wrap (V52:any)<-($37:str)($38:str)($39:int)
    V53 := bat.reverse(V52);	# 54 BKCreverse (V53:bat[:any,:any])<-(V52:any)
    V54 := algebra.kdiff(V50,V53);	# 55 ALGkdiff (V54:bat[:any,:any])<-(V50:any)(V53:bat[:any,:any])
    bbp.garbage(V53);	# 56 CMDbbpgarbage ($178:void)<-(V53:bat[:any,:any])
    V55 := algebra.join(V18,V54);	# 57 ALGjoin (V55:bat[:any,:any])<-(V18:bat[:any,:any])(V54:bat[:any,:any])
    bbp.garbage(V54);	# 58 CMDbbpgarbage ($179:void)<-(V54:bat[:any,:any])
    V56 := aggrX3.sum(V55,V32,V34);	# 59  unknown (V56:bat[:any,:any])<-(V55:bat[:any,:any])(V32:bat[:any,:any])(V34:bat[:any,:any])
    bbp.garbage(V55);	# 60 CMDbbpgarbage ($180:void)<-(V55:bat[:any,:any])
    V57 := sql.bind("sys","lineitem","l_extendedprice",0);	# 61 mvc_bind_wrap (V57:any)<-($37:str)($38:str)($53:str)($39:int)
    V59 := sql.bind_dbat("sys","lineitem",0);	# 62 mvc_bind_dbat_wrap (V59:any)<-($37:str)($38:str)($39:int)
    V60 := bat.reverse(V59);	# 63 BKCreverse (V60:bat[:any,:any])<-(V59:any)
    V61 := algebra.kdiff(V57,V60);	# 64 ALGkdiff (V61:bat[:any,:any])<-(V57:any)(V60:bat[:any,:any])
    bbp.garbage(V60);	# 65 CMDbbpgarbage ($181:void)<-(V60:bat[:any,:any])
    V62 := algebra.join(V18,V61);	# 66 ALGjoin (V62:bat[:any,:any])<-(V18:bat[:any,:any])(V61:bat[:any,:any])
    bbp.garbage(V61);	# 67 CMDbbpgarbage ($182:void)<-(V61:bat[:any,:any])
    V63 := aggrX3.sum(V62,V32,V34);	# 68  unknown (V63:bat[:any,:any])<-(V62:bat[:any,:any])(V32:bat[:any,:any])(V34:bat[:any,:any])
    bbp.garbage(V62);	# 69 CMDbbpgarbage ($183:void)<-(V62:bat[:any,:any])
    V64 := sql.bind_dbat("sys","lineitem",0);	# 70 mvc_bind_dbat_wrap (V64:any)<-($37:str)($38:str)($39:int)
    V65 := bat.reverse(V64);	# 71 BKCreverse (V65:bat[:any,:any])<-(V64:any)
    V66 := algebra.kdiff(V57,V65);	# 72 ALGkdiff (V66:bat[:any,:any])<-(V57:any)(V65:bat[:any,:any])
    bbp.garbage(V65);	# 73 CMDbbpgarbage ($184:void)<-(V65:bat[:any,:any])
    V67 := algebra.join(V18,V66);	# 74 ALGjoin (V67:bat[:any,:any])<-(V18:bat[:any,:any])(V66:bat[:any,:any])
    bbp.garbage(V66);	# 75 CMDbbpgarbage ($185:void)<-(V66:bat[:any,:any])
    V69 := calc.lng(1);	# 76 CALCint2lng (V69:lng)<-($64:int)
    V71 := calc.*(V69,100);	# 77 CALCbinaryMULlngint (V71:lng)<-(V69:lng)($66:int)
    V72 := sql.bind("sys","lineitem","l_discount",0);	# 78 mvc_bind_wrap (V72:any)<-($37:str)($38:str)($68:str)($39:int)
    V74 := sql.bind_dbat("sys","lineitem",0);	# 79 mvc_bind_dbat_wrap (V74:any)<-($70:str)($71:str)($72:int)
    V78 := bat.reverse(V74);	# 80 BKCreverse (V78:bat[:any,:any])<-(V74:any)
    V79 := algebra.kdiff(V72,V78);	# 81 ALGkdiff (V79:bat[:any,:any])<-(V72:any)(V78:bat[:any,:any])
    bbp.garbage(V78);	# 82 CMDbbpgarbage ($186:void)<-(V78:bat[:any,:any])
    V80 := algebra.join(V18,V79);	# 83 ALGjoin (V80:bat[:any,:any])<-(V18:bat[:any,:any])(V79:bat[:any,:any])
    bbp.garbage(V79);	# 84 CMDbbpgarbage ($187:void)<-(V79:bat[:any,:any])
    V81 := multiplex.script("calc.-",V71,V80);	# 85  (V81:bat[:any,:dbl])<-($77:str)(V71:lng)(V80:bat[:any,:any])
    bbp.garbage(V80);	# 86 CMDbbpgarbage ($188:void)<-(V80:bat[:any,:any])
    V83 := batcalc.*(V67,V81);	# 87 CMDbatMUL (V83:bat[:any,:dbl])<-(V67:bat[:any,:any])(V81:bat[:any,:dbl])
    bbp.garbage(V67);	# 88 CMDbbpgarbage ($189:void)<-(V67:bat[:any,:any])
    bbp.garbage(V81);	# 89 CMDbbpgarbage ($190:void)<-(V81:bat[:any,:dbl])
    V85 := aggrX3.sum(V83,V32,V34);	# 90  unknown (V85:bat[:any,:any])<-(V83:bat[:any,:dbl])(V32:bat[:any,:any])(V34:bat[:any,:any])
    bbp.garbage(V83);	# 91 CMDbbpgarbage ($191:void)<-(V83:bat[:any,:dbl])
    V86 := sql.bind_dbat("sys","lineitem",0);	# 92 mvc_bind_dbat_wrap (V86:any)<-($70:str)($71:str)($72:int)
    V87 := bat.reverse(V86);	# 93 BKCreverse (V87:bat[:any,:any])<-(V86:any)
    V88 := algebra.kdiff(V57,V87);	# 94 ALGkdiff (V88:bat[:any,:any])<-(V57:any)(V87:bat[:any,:any])
    bbp.garbage(V87);	# 95 CMDbbpgarbage ($192:void)<-(V87:bat[:any,:any])
    V89 := algebra.join(V18,V88);	# 96 ALGjoin (V89:bat[:any,:any])<-(V18:bat[:any,:any])(V88:bat[:any,:any])
    bbp.garbage(V88);	# 97 CMDbbpgarbage ($193:void)<-(V88:bat[:any,:any])
    V90 := calc.lng(1);	# 98 CALCint2lng (V90:lng)<-($64:int)
    V91 := calc.*(V90,100);	# 99 CALCbinaryMULlngint (V91:lng)<-(V90:lng)($66:int)
    V92 := sql.bind_dbat("sys","lineitem",0);	# 100 mvc_bind_dbat_wrap (V92:any)<-($70:str)($71:str)($72:int)
    V93 := bat.reverse(V92);	# 101 BKCreverse (V93:bat[:any,:any])<-(V92:any)
    V94 := algebra.kdiff(V72,V93);	# 102 ALGkdiff (V94:bat[:any,:any])<-(V72:any)(V93:bat[:any,:any])
    bbp.garbage(V93);	# 103 CMDbbpgarbage ($194:void)<-(V93:bat[:any,:any])
    V95 := algebra.join(V18,V94);	# 104 ALGjoin (V95:bat[:any,:any])<-(V18:bat[:any,:any])(V94:bat[:any,:any])
    bbp.garbage(V94);	# 105 CMDbbpgarbage ($195:void)<-(V94:bat[:any,:any])
    V96 := multiplex.script("calc.-",V91,V95);	# 106  (V96:bat[:any,:dbl])<-($77:str)(V91:lng)(V95:bat[:any,:any])
    bbp.garbage(V95);	# 107 CMDbbpgarbage ($196:void)<-(V95:bat[:any,:any])
    V97 := batcalc.*(V89,V96);	# 108 CMDbatMUL (V97:bat[:any,:dbl])<-(V89:bat[:any,:any])(V96:bat[:any,:dbl])
    bbp.garbage(V89);	# 109 CMDbbpgarbage ($197:void)<-(V89:bat[:any,:any])
    bbp.garbage(V96);	# 110 CMDbbpgarbage ($198:void)<-(V96:bat[:any,:dbl])
    V98 := calc.lng(1);	# 111 CALCint2lng (V98:lng)<-($64:int)
    V99 := calc.*(V98,100);	# 112 CALCbinaryMULlngint (V99:lng)<-(V98:lng)($66:int)
    V100 := sql.bind("sys","lineitem","l_tax",0);	# 113 mvc_bind_wrap (V100:any)<-($70:str)($71:str)($95:str)($72:int)
    V102 := sql.bind_dbat("sys","lineitem",0);	# 114 mvc_bind_dbat_wrap (V102:any)<-($70:str)($71:str)($72:int)
    V103 := bat.reverse(V102);	# 115 BKCreverse (V103:bat[:any,:any])<-(V102:any)
    V104 := algebra.kdiff(V100,V103);	# 116 ALGkdiff (V104:bat[:any,:any])<-(V100:any)(V103:bat[:any,:any])
    bbp.garbage(V103);	# 117 CMDbbpgarbage ($199:void)<-(V103:bat[:any,:any])
    V105 := algebra.join(V18,V104);	# 118 ALGjoin (V105:bat[:any,:any])<-(V18:bat[:any,:any])(V104:bat[:any,:any])
    bbp.garbage(V104);	# 119 CMDbbpgarbage ($200:void)<-(V104:bat[:any,:any])
    V106 := multiplex.script("calc.+",V99,V105);	# 120  (V106:bat[:any,:dbl])<-($101:str)(V99:lng)(V105:bat[:any,:any])
    bbp.garbage(V105);	# 121 CMDbbpgarbage ($201:void)<-(V105:bat[:any,:any])
    V108 := batcalc.*(V97,V106);	# 122 CMDbatMUL (V108:bat[:any,:dbl])<-(V97:bat[:any,:dbl])(V106:bat[:any,:dbl])
    bbp.garbage(V97);	# 123 CMDbbpgarbage ($202:void)<-(V97:bat[:any,:dbl])
    bbp.garbage(V106);	# 124 CMDbbpgarbage ($203:void)<-(V106:bat[:any,:dbl])
    V109 := aggrX3.sum(V108,V32,V34);	# 125  unknown (V109:bat[:any,:any])<-(V108:bat[:any,:dbl])(V32:bat[:any,:any])(V34:bat[:any,:any])
    bbp.garbage(V108);	# 126 CMDbbpgarbage ($204:void)<-(V108:bat[:any,:dbl])
    V110 := sql.bind_dbat("sys","lineitem",0);	# 127 mvc_bind_dbat_wrap (V110:any)<-($105:str)($106:str)($107:int)
    V114 := bat.reverse(V110);	# 128 BKCreverse (V114:bat[:any,:any])<-(V110:any)
    V115 := algebra.kdiff(V50,V114);	# 129 ALGkdiff (V115:bat[:any,:any])<-(V50:any)(V114:bat[:any,:any])
    bbp.garbage(V114);	# 130 CMDbbpgarbage ($205:void)<-(V114:bat[:any,:any])
    V116 := algebra.join(V18,V115);	# 131 ALGjoin (V116:bat[:any,:any])<-(V18:bat[:any,:any])(V115:bat[:any,:any])
    bbp.garbage(V115);	# 132 CMDbbpgarbage ($206:void)<-(V115:bat[:any,:any])
    V117 := aggrX3.avg(V116,V32,V34);	# 133  unknown (V117:bat[:any,:any])<-(V116:bat[:any,:any])(V32:bat[:any,:any])(V34:bat[:any,:any])
    bbp.garbage(V116);	# 134 CMDbbpgarbage ($207:void)<-(V116:bat[:any,:any])
    V118 := sql.bind_dbat("sys","lineitem",0);	# 135 mvc_bind_dbat_wrap (V118:any)<-($105:str)($106:str)($107:int)
    V119 := bat.reverse(V118);	# 136 BKCreverse (V119:bat[:any,:any])<-(V118:any)
    V120 := algebra.kdiff(V57,V119);	# 137 ALGkdiff (V120:bat[:any,:any])<-(V57:any)(V119:bat[:any,:any])
    bbp.garbage(V119);	# 138 CMDbbpgarbage ($208:void)<-(V119:bat[:any,:any])
    V121 := algebra.join(V18,V120);	# 139 ALGjoin (V121:bat[:any,:any])<-(V18:bat[:any,:any])(V120:bat[:any,:any])
    bbp.garbage(V120);	# 140 CMDbbpgarbage ($209:void)<-(V120:bat[:any,:any])
    V122 := aggrX3.avg(V121,V32,V34);	# 141  unknown (V122:any)<-(V121:bat[:any,:any])(V32:bat[:any,:any])(V34:bat[:any,:any])
    bbp.garbage(V121);	# 142 CMDbbpgarbage ($210:void)<-(V121:bat[:any,:any])
    V124 := multiplex.script("calc.round",V122,100);	# 143  unknown (V124:bat[:any,:any])<-($118:str)(V122:any)($119:int)
    V126 := sql.bind_dbat("sys","lineitem",0);	# 144 mvc_bind_dbat_wrap (V126:any)<-($105:str)($106:str)($107:int)
    V127 := bat.reverse(V126);	# 145 BKCreverse (V127:bat[:any,:any])<-(V126:any)
    V128 := algebra.kdiff(V72,V127);	# 146 ALGkdiff (V128:bat[:any,:any])<-(V72:any)(V127:bat[:any,:any])
    bbp.garbage(V127);	# 147 CMDbbpgarbage ($211:void)<-(V127:bat[:any,:any])
    V129 := algebra.join(V18,V128);	# 148 ALGjoin (V129:bat[:any,:any])<-(V18:bat[:any,:any])(V128:bat[:any,:any])
    bbp.garbage(V18);	# 149 CMDbbpgarbage ($212:void)<-(V18:bat[:any,:any])
    bbp.garbage(V128);	# 150 CMDbbpgarbage ($213:void)<-(V128:bat[:any,:any])
    V130 := aggrX3.avg(V129,V32,V34);	# 151  unknown (V130:any)<-(V129:bat[:any,:any])(V32:bat[:any,:any])(V34:bat[:any,:any])
    bbp.garbage(V129);	# 152 CMDbbpgarbage ($214:void)<-(V129:bat[:any,:any])
    V131 := multiplex.script("calc.round",V130,100);	# 153  unknown (V131:bat[:any,:any])<-($118:str)(V130:any)($119:int)
    V132 := aggrX3.count(V32,V32,V34);	# 154  unknown (V132:bat[:any,:any])<-(V32:bat[:any,:any])(V32:bat[:any,:any])(V34:bat[:any,:any])
    bbp.garbage(V32);	# 155 CMDbbpgarbage ($215:void)<-(V32:bat[:any,:any])
    bbp.garbage(V34);	# 156 CMDbbpgarbage ($216:void)<-(V34:bat[:any,:any])
    sql.column(V39,"l_returnflag","varchar",1,0);	# 157 SQLcolumn ($127:void)<-(V39:bat[:any,:any])($128:str)($129:str)($130:int)($107:int)
    sql.column(V48,"l_linestatus","varchar",1,0);	# 158 SQLcolumn ($131:void)<-(V48:bat[:any,:any])($132:str)($129:str)($130:int)($107:int)
    sql.column(V56,"sum_qty","bigint",0,0);	# 159 SQLcolumn ($133:void)<-(V56:bat[:any,:any])($134:str)($135:str)($107:int)($107:int)
    sql.column(V63,"sum_base_price","decimal",19,2);	# 160 SQLcolumn ($136:void)<-(V63:bat[:any,:any])($137:str)($138:str)($139:int)($140:int)
    sql.column(V85,"sum_disc_price","decimal",19,4);	# 161 SQLcolumn ($141:void)<-(V85:bat[:any,:any])($142:str)($138:str)($139:int)($143:int)
    sql.column(V109,"sum_charge","decimal",19,6);	# 162 SQLcolumn ($144:void)<-(V109:bat[:any,:any])($145:str)($138:str)($139:int)($146:int)
    sql.column(V117,"avg_qty","double",53,0);	# 163 SQLcolumn ($147:void)<-(V117:bat[:any,:any])($148:str)($149:str)($150:int)($151:int)
    sql.column(V124,"avg_price","double",53,0);	# 164 SQLcolumn ($152:void)<-(V124:bat[:any,:any])($153:str)($149:str)($150:int)($151:int)
    sql.column(V131,"avg_disc","double",53,0);	# 165 SQLcolumn ($154:void)<-(V131:bat[:any,:any])($155:str)($149:str)($150:int)($151:int)
    sql.column(V132,"count_order","int",0,0);	# 166 SQLcolumn ($156:void)<-(V132:bat[:any,:any])($157:str)($158:str)($151:int)($151:int)
    sql.output(V49,V39,V48,V56,V63,V85,V109,V117,V124,V131,V132);	# 167  unknown ($159:any)<-(V49:bat[:any,:oid])(V39:bat[:any,:any])(V48:bat[:any,:any])(V56:bat[:any,:any])(V63:bat[:any,:any])(V85:bat[:any,:any])(V109:bat[:any,:any])(V117:bat[:any,:any])(V124:bat[:any,:any])(V131:bat[:any,:any])(V132:bat[:any,:any])
    bbp.garbage(V49);	# 168 CMDbbpgarbage ($217:void)<-(V49:bat[:any,:oid])
    bbp.garbage(V39);	# 169 CMDbbpgarbage ($218:void)<-(V39:bat[:any,:any])
    bbp.garbage(V48);	# 170 CMDbbpgarbage ($219:void)<-(V48:bat[:any,:any])
    bbp.garbage(V56);	# 171 CMDbbpgarbage ($220:void)<-(V56:bat[:any,:any])
    bbp.garbage(V63);	# 172 CMDbbpgarbage ($221:void)<-(V63:bat[:any,:any])
    bbp.garbage(V85);	# 173 CMDbbpgarbage ($222:void)<-(V85:bat[:any,:any])
    bbp.garbage(V109);	# 174 CMDbbpgarbage ($223:void)<-(V109:bat[:any,:any])
    bbp.garbage(V117);	# 175 CMDbbpgarbage ($224:void)<-(V117:bat[:any,:any])
    bbp.garbage(V124);	# 176 CMDbbpgarbage ($225:void)<-(V124:bat[:any,:any])
    bbp.garbage(V131);	# 177 CMDbbpgarbage ($226:void)<-(V131:bat[:any,:any])
    bbp.garbage(V132);	# 178 CMDbbpgarbage ($227:void)<-(V132:bat[:any,:any])
end qry1;	# 179  
function user.main():int;	# 0  (main:int)
    mdb.showFunction("user","qry1");	# 1 MDBshowFunction3 ($6:void)<-($3:str)($4:str)
end main;	# 2  
function user.qry1():void;
    V3 := sql.bind("sys","lineitem","l_shipdate",0);
    V8 := sql.bind_dbat("sys","lineitem",0);
    V9 := bat.reverse(V8);
    V10 := algebra.kdiff(V3,V9);
    bbp.garbage(V9);
    V14 := algebra.uselect(V10,nil,nil);
    bbp.garbage(V10);
    V17 := algebra.tmark(V14,0@0);
    bbp.garbage(V14);
    V18 := bat.reverse(V17);
    bbp.garbage(V17);
    V19 := sql.bind("sys","lineitem","l_returnflag",0);
    V21 := sql.bind_dbat("sys","lineitem",0);
    V22 := bat.reverse(V21);
    V23 := algebra.kdiff(V19,V22);
    bbp.garbage(V22);
    V24 := algebra.join(V18,V23);
    bbp.garbage(V23);
    V25 := group.group(V24);
    bbp.garbage(V24);
    V26 := sql.bind("sys","lineitem","l_linestatus",0);
    V28 := sql.bind_dbat("sys","lineitem",0);
    V29 := bat.reverse(V28);
    V30 := algebra.kdiff(V26,V29);
    bbp.garbage(V29);
    V31 := algebra.join(V18,V30);
    bbp.garbage(V30);
    V32 := group.group(V25,V31);
    bbp.garbage(V31);
    V33 := algebra.tunique(V32);
    V34 := bat.mirror(V33);
    bbp.garbage(V33);
    V35 := sql.bind_dbat("sys","lineitem",0);
    V36 := bat.reverse(V35);
    V37 := algebra.kdiff(V19,V36);
    bbp.garbage(V36);
    V38 := algebra.join(V18,V37);
    bbp.garbage(V37);
    V39 := algebra.join(V34,V38);
    bbp.garbage(V38);
    V40 := algebra.tsort(V39);
    V41 := sql.bind_dbat("sys","lineitem",0);
    V45 := bat.reverse(V41);
    V46 := algebra.kdiff(V26,V45);
    bbp.garbage(V45);
    V47 := algebra.join(V18,V46);
    bbp.garbage(V46);
    V48 := algebra.join(V34,V47);
    bbp.garbage(V47);
    V49 := group.refine(V40,V48);
    bbp.garbage(V40);
    V50 := sql.bind("sys","lineitem","l_quantity",0);
    V52 := sql.bind_dbat("sys","lineitem",0);
    V53 := bat.reverse(V52);
    V54 := algebra.kdiff(V50,V53);
    bbp.garbage(V53);
    V55 := algebra.join(V18,V54);
    bbp.garbage(V54);
    V56 := aggrX3.sum(V55,V32,V34);
    bbp.garbage(V55);
    V57 := sql.bind("sys","lineitem","l_extendedprice",0);
    V59 := sql.bind_dbat("sys","lineitem",0);
    V60 := bat.reverse(V59);
    V61 := algebra.kdiff(V57,V60);
    bbp.garbage(V60);
    V62 := algebra.join(V18,V61);
    bbp.garbage(V61);
    V63 := aggrX3.sum(V62,V32,V34);
    bbp.garbage(V62);
    V64 := sql.bind_dbat("sys","lineitem",0);
    V65 := bat.reverse(V64);
    V66 := algebra.kdiff(V57,V65);
    bbp.garbage(V65);
    V67 := algebra.join(V18,V66);
    bbp.garbage(V66);
    V69 := calc.lng(1);
    V71 := calc.*(V69,100);
    V72 := sql.bind("sys","lineitem","l_discount",0);
    V74 := sql.bind_dbat("sys","lineitem",0);
    V78 := bat.reverse(V74);
    V79 := algebra.kdiff(V72,V78);
    bbp.garbage(V78);
    V80 := algebra.join(V18,V79);
    bbp.garbage(V79);
    V81 := multiplex.script("calc.-",V71,V80);
    bbp.garbage(V80);
    V83 := batcalc.*(V67,V81);
    bbp.garbage(V67);
    bbp.garbage(V81);
    V85 := aggrX3.sum(V83,V32,V34);
    bbp.garbage(V83);
    V86 := sql.bind_dbat("sys","lineitem",0);
    V87 := bat.reverse(V86);
    V88 := algebra.kdiff(V57,V87);
    bbp.garbage(V87);
    V89 := algebra.join(V18,V88);
    bbp.garbage(V88);
    V90 := calc.lng(1);
    V91 := calc.*(V90,100);
    V92 := sql.bind_dbat("sys","lineitem",0);
    V93 := bat.reverse(V92);
    V94 := algebra.kdiff(V72,V93);
    bbp.garbage(V93);
    V95 := algebra.join(V18,V94);
    bbp.garbage(V94);
    V96 := multiplex.script("calc.-",V91,V95);
    bbp.garbage(V95);
    V97 := batcalc.*(V89,V96);
    bbp.garbage(V89);
    bbp.garbage(V96);
    V98 := calc.lng(1);
    V99 := calc.*(V98,100);
    V100 := sql.bind("sys","lineitem","l_tax",0);
    V102 := sql.bind_dbat("sys","lineitem",0);
    V103 := bat.reverse(V102);
    V104 := algebra.kdiff(V100,V103);
    bbp.garbage(V103);
    V105 := algebra.join(V18,V104);
    bbp.garbage(V104);
    V106 := multiplex.script("calc.+",V99,V105);
    bbp.garbage(V105);
    V108 := batcalc.*(V97,V106);
    bbp.garbage(V97);
    bbp.garbage(V106);
    V109 := aggrX3.sum(V108,V32,V34);
    bbp.garbage(V108);
    V110 := sql.bind_dbat("sys","lineitem",0);
    V114 := bat.reverse(V110);
    V115 := algebra.kdiff(V50,V114);
    bbp.garbage(V114);
    V116 := algebra.join(V18,V115);
    bbp.garbage(V115);
    V117 := aggrX3.avg(V116,V32,V34);
    bbp.garbage(V116);
    V118 := sql.bind_dbat("sys","lineitem",0);
    V119 := bat.reverse(V118);
    V120 := algebra.kdiff(V57,V119);
    bbp.garbage(V119);
    V121 := algebra.join(V18,V120);
    bbp.garbage(V120);
    V122 := aggrX3.avg(V121,V32,V34);
    bbp.garbage(V121);
    V124 := multiplex.script("calc.round",V122,100);
    V126 := sql.bind_dbat("sys","lineitem",0);
    V127 := bat.reverse(V126);
    V128 := algebra.kdiff(V72,V127);
    bbp.garbage(V127);
    V129 := algebra.join(V18,V128);
    bbp.garbage(V18);
    bbp.garbage(V128);
    V130 := aggrX3.avg(V129,V32,V34);
    bbp.garbage(V129);
    V131 := multiplex.script("calc.round",V130,100);
    V132 := aggrX3.count(V32,V32,V34);
    bbp.garbage(V32);
    bbp.garbage(V34);
    sql.column(V39,"l_returnflag","varchar",1,0);
    sql.column(V48,"l_linestatus","varchar",1,0);
    sql.column(V56,"sum_qty","bigint",0,0);
    sql.column(V63,"sum_base_price","decimal",19,2);
    sql.column(V85,"sum_disc_price","decimal",19,4);
    sql.column(V109,"sum_charge","decimal",19,6);
    sql.column(V117,"avg_qty","double",53,0);
    sql.column(V124,"avg_price","double",53,0);
    sql.column(V131,"avg_disc","double",53,0);
    sql.column(V132,"count_order","int",0,0);
    sql.output(V49,V39,V48,V56,V63,V85,V109,V117,V124,V131,V132);
    bbp.garbage(V49);
    bbp.garbage(V39);
    bbp.garbage(V48);
    bbp.garbage(V56);
    bbp.garbage(V63);
    bbp.garbage(V85);
    bbp.garbage(V109);
    bbp.garbage(V117);
    bbp.garbage(V124);
    bbp.garbage(V131);
    bbp.garbage(V132);
end qry1;

# 11:08:35 >  
# 11:08:35 >  Done.
# 11:08:35 >  

