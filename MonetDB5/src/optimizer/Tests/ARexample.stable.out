stdout of test 'ARexample` in directory 'src/optimizer` itself:


# 16:14:06 >  
# 16:14:06 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=31571 --set sql_port=47454 --set xquery_port=51001 --set monet_prompt= --trace --dbname=mTests_src_optimizer  ARexample.mal </dev/null
# 16:14:06 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs; dynamically linked.
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_optimizer
# Visit http://monetdb.cwi.nl/ for further information.
#    i:=0;
#	b:= "done";
#barrier go:= true;
#    c:=i+1;
#    d:="step";
#    v:=d;
#	io.print(v);
#    i:=c;
#redo go:= i<2;
#exit go;
#	io.print(b);
#optimizer.aliasRemoval();
#
function user.main():int;	# 0  (main:int)
    i := 0;	# 1  (i:int)<-($2:int)
barrier go := true;	# 2  (go:bit)<-($6:bit) jump 7
    c := calc.+(i,1);	# 3 CALCbinaryADDintint (c:int)<-(i:int)($8:int)
    io.print("step");	# 4 IOprint_val ($12:int)<-($10:str)
    i := c;	# 5  (i:int)<-(c:int)
    redo go := calc.<(i,2);	# 6 CALCcompLTintint (go:bit)<-(i:int)($13:int) jump 3
exit go;	# 7  (go:bit)
    io.print("done");	# 8 IOprint_val ($14:int)<-($4:str)
end main;	# 9  
[ "step" ]
[ "step" ]
[ "done" ]

# 16:14:06 >  
# 16:14:06 >  Done.
# 16:14:06 >  

