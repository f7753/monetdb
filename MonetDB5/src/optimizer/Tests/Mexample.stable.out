stdout of test 'Mexample` in directory 'src/optimizer` itself:


# 23:35:04 >  
# 23:35:04 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=36877 --set sql_port=49723 --set xquery_port=58246 --set monet_prompt= --trace --dbname=mTests_src_optimizer  Mexample.mal </dev/null
# 23:35:04 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs; dynamically linked.
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_optimizer
# Visit http://monetdb.cwi.nl/ for further information.
#	b:= bbp.new(:int,:int);
#	bat.insert(b,1,1);
#	c:bat[:int,:int]:=optimizer.multiplex("calc.+",b,1);
#	mdb.showFunction();
#
function user.main():int;	# 0  (main:int)
    b := bbp.new(:int,:int);	# 1 CMDBATnew (b:bat[:int,:int])<-($2:int)($2:int)
    bat.insert(b,1,1);	# 2 BKCinsert_bun ($3:bat[:int,:int])<-(b:bat[:int,:int])($4:int)($4:int)
    $8 := bbp.new(:int,:int);	# 3 CMDBATnew ($8:bat[:int,:int])<-($9:int)($9:int)
barrier ($11,$12,$13):= chopper.newIterator(b);	# 4 CHPbunIterator ($11:lng)($12:int)($13:int)<-(b:bat[:int,:int]) jump 10
    $15 := calc.+($13,1);	# 5 CALCbinaryADDintint ($15:int)<-($13:int)($4:int)
    bat.insert($8,$12,$15);	# 6 BKCinsert_bun ($16:bat[:int,:int])<-($8:bat[:int,:int])($12:int)($15:int)
catch MALexception;	# 7  (MALexception:str) jump 8
exit MALexception;	# 8  (MALexception:str)
    redo ($11,$12,$13):= chopper.hasMoreElements(b);	# 9 CHPbunHasMoreElements ($11:lng)($12:int)($13:int)<-(b:bat[:int,:int]) jump 5
exit ($11,$12,$13);	# 10  ($11:lng)($12:int)($13:int)
    c:bat[:int,:int]  := $8;	# 11  (c:bat[:int,:int])<-($8:bat[:int,:int])
    mdb.showFunction();	# 12 MDBshowFunction ($7:void)
end main;	# 13  
function user.main():int;
    b := bbp.new(:int,:int);
    bat.insert(b,1,1);
    $8 := bbp.new(:int,:int);
barrier ($11,$12,$13):= chopper.newIterator(b);
    $15 := calc.+($13,1);
    bat.insert($8,$12,$15);
catch MALexception;
exit MALexception;
    redo ($11,$12,$13):= chopper.hasMoreElements(b);
exit ($11,$12,$13);
    c:bat[:int,:int]  := $8;
    mdb.showFunction();
end main;

# 23:35:04 >  
# 23:35:04 >  Done.
# 23:35:04 >  

