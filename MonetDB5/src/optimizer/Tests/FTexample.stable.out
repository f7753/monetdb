stdout of test 'FTexample` in directory 'src/optimizer` itself:


# 23:27:48 >  
# 23:27:48 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=35469 --set sql_port=42170 --set xquery_port=53059 --set monet_prompt= --trace --dbname=mTests_src_optimizer  FTexample.mal </dev/null
# 23:27:48 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs; dynamically linked.
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_optimizer
# Visit http://monetdb.cwi.nl/ for further information.
##Code factorization
#function test(s:str):lng;
#	b:= bbp.new(:int,:str);
#	bat.insert(b,1,"hello");
#	z:= algebra.select(b,s,s);
#	i:= algebra.count(z);
#	return i;
#end test;
function user.test(s:str):lng;	# 0  (test:lng)<-(s:str)
    b := bbp.new(:int,:str);	# 1 CMDBATnew (b:bat[:int,:str])<-($3:int)($4:str)
    bat.insert(b,1,"hello");	# 2 BKCinsert_bun ($5:bat[:int,:str])<-(b:bat[:int,:str])($6:int)($7:str)
    z := algebra.select(b,s,s);	# 3 ALGselect (z:bat[:int,:str])<-(b:bat[:int,:str])(s:str)(s:str)
    i := algebra.count(z);	# 4 ALGcount_bat (i:lng)<-(z:bat[:int,:str])
    return i;	# 5  (i:lng)
end test;	# 6  
#optimizer.factorize("user","test");
#mdb.showFunction("user","test");
#
function user.main():int;	# 0  (main:int)
#Code factorization 	# 1  ($2:str)
    mdb.showFunction("user","test");	# 2 MDBshowFunction3 ($6:void)<-($4:str)($5:str)
end main;	# 3  
factory user.test(s:str):lng;
    b := bbp.new(:int,:str);
    bat.insert(b,1,"hello");
barrier always := true;
    z := algebra.select(b,s,s);
    i := algebra.count(z);
    yield i;
    redo always;
exit always;
end test;

# 23:27:48 >  
# 23:27:48 >  Done.
# 23:27:48 >  

