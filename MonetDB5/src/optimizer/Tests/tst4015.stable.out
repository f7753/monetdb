stdout of test 'tst4015` in directory 'src/optimizer` itself:


# 08:01:45 >  
# 08:01:45 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst4015.mal </dev/null
# 08:01:45 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## testing repeatative reverse optimalisation
#r:= new(:int,:int);
#insert(r,5,1);
#s:= reverse(r);
#k:=23;
#t:= reverse(s);
#print(t);
#debugOptimizers();
#RRoptimizer();
#
function user.main():int;	# 0  (main:int)
    r := bbp.new(:int,:int);	# 1 CMDBATnew (r:bat[:int,:int])<-($2:int)($3:int)
    bat.insert(r,5:int,1:int);	# 2 BKCinsert_bun ($4:bat[:int,:int])<-(r:bat[:int,:int])($5:int)($6:int)
    k := 23:int;	# 3  (k:int)<-($9:int)
    io.print(r);	# 4 IOprint_val ($11:int)<-(r:bat[:int,:int])
end main;	# 5  
#-----------------#
# h	tmp_4	  # name
# int	int	  # type
#-----------------#
[ 5,	  1	  ]

# 08:01:45 >  
# 08:01:45 >  Done.
# 08:01:45 >  

